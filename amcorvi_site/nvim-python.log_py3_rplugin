2017-08-08 04:25:25,353 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 1, b'vim_get_api_info', ()]
2017-08-08 04:25:25,353 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x01\xb0vim_get_api_info\x90''
2017-08-08 04:25:25,354 [DEBUG @ base.py:run:138] 64726 - Entering event loop
2017-08-08 04:25:25,354 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:25,354 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [0, 1, b'poll', []]
2017-08-08 04:25:25,354 [DEBUG @ async_session.py:_on_request:86] 64726 - received request: b'poll', []
2017-08-08 04:25:25,354 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:25,354 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:25,355 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:25,356 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:25,356 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:25,356 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:25,356 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:25,357 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 1, None, [1, {b'error_types': {b'Validation': {b'id': 1}, b'Exception': {b'id': 0}}, b'types': {b'Buffer': {b'prefix': b'nvim_buf_', b'id': 0}, b'Tabpage': {b'prefix': b'nvim_tabpage_', b'id': 2}, b'Window': {b'prefix': b'nvim_win_', b'id': 1}}, b'functions': [{b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Integer', b'name': b'nvim_buf_line_count'}, {b'method': False, b'name': b'buffer_get_line', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index']], b'return_type': b'String'}, {b'method': False, b'name': b'buffer_set_line', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index'], [b'String', b'line']], b'return_type': b'void'}, {b'method': False, b'name': b'buffer_del_line', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index']], b'return_type': b'void'}, {b'method': False, b'name': b'buffer_get_line_slice', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'include_start'], [b'Boolean', b'include_end']], b'return_type': b'ArrayOf(String)'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing']], b'return_type': b'ArrayOf(String)', b'name': b'nvim_buf_get_lines'}, {b'method': False, b'name': b'buffer_set_line_slice', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'include_start'], [b'Boolean', b'include_end'], [b'ArrayOf(String)', b'replacement']], b'return_type': b'void'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing'], [b'ArrayOf(String)', b'replacement']], b'return_type': b'void', b'name': b'nvim_buf_set_lines'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_buf_get_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_buf_set_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'void', b'name': b'nvim_buf_del_var'}, {b'method': False, b'name': b'buffer_set_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'Object'}, {b'method': False, b'name': b'buffer_del_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_buf_get_option'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_buf_set_option'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Integer', b'name': b'nvim_buf_get_number'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'String', b'name': b'nvim_buf_get_name'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'void', b'name': b'nvim_buf_set_name'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Boolean', b'name': b'nvim_buf_is_valid'}, {b'method': False, b'name': b'buffer_insert', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'lnum'], [b'ArrayOf(String)', b'lines']], b'return_type': b'void'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_buf_get_mark'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'String', b'hl_group'], [b'Integer', b'line'], [b'Integer', b'col_start'], [b'Integer', b'col_end']], b'return_type': b'Integer', b'name': b'nvim_buf_add_highlight'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'Integer', b'line_start'], [b'Integer', b'line_end']], b'return_type': b'void', b'name': b'nvim_buf_clear_highlight'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'ArrayOf(Window)', b'name': b'nvim_tabpage_list_wins'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_tabpage_get_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_tabpage_set_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'return_type': b'void', b'name': b'nvim_tabpage_del_var'}, {b'method': False, b'name': b'tabpage_set_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'Object'}, {b'method': False, b'name': b'tabpage_del_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'return_type': b'Object'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Window', b'name': b'nvim_tabpage_get_win'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Integer', b'name': b'nvim_tabpage_get_number'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Boolean', b'name': b'nvim_tabpage_is_valid'}, {b'since': 1, b'method': False, b'parameters': [[b'Integer', b'width'], [b'Integer', b'height'], [b'Dictionary', b'options']], b'return_type': b'void', b'name': b'nvim_ui_attach'}, {b'method': False, b'name': b'ui_attach', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Integer', b'width'], [b'Integer', b'height'], [b'Boolean', b'enable_rgb']], b'return_type': b'void'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'void', b'name': b'nvim_ui_detach'}, {b'since': 1, b'method': False, b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'return_type': b'void', b'name': b'nvim_ui_try_resize'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_ui_set_option'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'command']], b'return_type': b'void', b'name': b'nvim_command'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'keys'], [b'String', b'mode'], [b'Boolean', b'escape_csi']], b'return_type': b'void', b'name': b'nvim_feedkeys'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'keys']], b'return_type': b'Integer', b'name': b'nvim_input'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str'], [b'Boolean', b'from_part'], [b'Boolean', b'do_lt'], [b'Boolean', b'special']], b'return_type': b'String', b'name': b'nvim_replace_termcodes'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'String', b'name': b'nvim_command_output'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'expr']], b'return_type': b'Object', b'name': b'nvim_eval'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'fname'], [b'Array', b'args']], b'return_type': b'Object', b'name': b'nvim_call_function'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'Integer', b'name': b'nvim_strwidth'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'ArrayOf(String)', b'name': b'nvim_list_runtime_paths'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'dir']], b'return_type': b'void', b'name': b'nvim_set_current_dir'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'String', b'name': b'nvim_get_current_line'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'line']], b'return_type': b'void', b'name': b'nvim_set_current_line'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'void', b'name': b'nvim_del_current_line'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_get_var'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_set_var'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'void', b'name': b'nvim_del_var'}, {b'method': False, b'name': b'vim_set_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_del_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Object'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_get_vvar'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_get_option'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_set_option'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'void', b'name': b'nvim_out_write'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'void', b'name': b'nvim_err_write'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'void', b'name': b'nvim_err_writeln'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'ArrayOf(Buffer)', b'name': b'nvim_list_bufs'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Buffer', b'name': b'nvim_get_current_buf'}, {b'since': 1, b'method': False, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'void', b'name': b'nvim_set_current_buf'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'ArrayOf(Window)', b'name': b'nvim_list_wins'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Window', b'name': b'nvim_get_current_win'}, {b'since': 1, b'method': False, b'parameters': [[b'Window', b'window']], b'return_type': b'void', b'name': b'nvim_set_current_win'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'ArrayOf(Tabpage)', b'name': b'nvim_list_tabpages'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Tabpage', b'name': b'nvim_get_current_tabpage'}, {b'since': 1, b'method': False, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'void', b'name': b'nvim_set_current_tabpage'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'event']], b'return_type': b'void', b'name': b'nvim_subscribe'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'event']], b'return_type': b'void', b'name': b'nvim_unsubscribe'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'Integer', b'name': b'nvim_get_color_by_name'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Dictionary', b'name': b'nvim_get_color_map'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Array', b'name': b'nvim_get_api_info'}, {b'since': 1, b'method': False, b'parameters': [[b'Array', b'calls']], b'return_type': b'Array', b'name': b'nvim_call_atomic'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Buffer', b'name': b'nvim_win_get_buf'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_win_get_cursor'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'ArrayOf(Integer, 2)', b'pos']], b'return_type': b'void', b'name': b'nvim_win_set_cursor'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer', b'name': b'nvim_win_get_height'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'Integer', b'height']], b'return_type': b'void', b'name': b'nvim_win_set_height'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer', b'name': b'nvim_win_get_width'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'Integer', b'width']], b'return_type': b'void', b'name': b'nvim_win_set_width'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_win_get_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_win_set_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'void', b'name': b'nvim_win_del_var'}, {b'method': False, b'name': b'window_set_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'Object'}, {b'method': False, b'name': b'window_del_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_win_get_option'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_win_set_option'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_win_get_position'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Tabpage', b'name': b'nvim_win_get_tabpage'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer', b'name': b'nvim_win_get_number'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Boolean', b'name': b'nvim_win_is_valid'}, {b'method': True, b'name': b'buffer_line_count', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Integer'}, {b'method': True, b'name': b'buffer_get_lines', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing']], b'return_type': b'ArrayOf(String)'}, {b'method': True, b'name': b'buffer_set_lines', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing'], [b'ArrayOf(String)', b'replacement']], b'return_type': b'void'}, {b'method': True, b'name': b'buffer_get_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'buffer_get_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'buffer_set_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void'}, {b'method': True, b'name': b'buffer_get_number', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Integer'}, {b'method': True, b'name': b'buffer_get_name', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'String'}, {b'method': True, b'name': b'buffer_set_name', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'void'}, {b'method': True, b'name': b'buffer_is_valid', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Boolean'}, {b'method': True, b'name': b'buffer_get_mark', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'ArrayOf(Integer, 2)'}, {b'method': True, b'name': b'buffer_add_highlight', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'String', b'hl_group'], [b'Integer', b'line'], [b'Integer', b'col_start'], [b'Integer', b'col_end']], b'return_type': b'Integer'}, {b'method': True, b'name': b'buffer_clear_highlight', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'Integer', b'line_start'], [b'Integer', b'line_end']], b'return_type': b'void'}, {b'method': True, b'name': b'tabpage_get_windows', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'ArrayOf(Window)'}, {b'method': True, b'name': b'tabpage_get_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'tabpage_get_window', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Window'}, {b'method': True, b'name': b'tabpage_is_valid', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Boolean'}, {b'method': False, b'name': b'ui_detach', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'void'}, {b'method': False, b'name': b'ui_try_resize', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_command', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'command']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_feedkeys', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'keys'], [b'String', b'mode'], [b'Boolean', b'escape_csi']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_input', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'keys']], b'return_type': b'Integer'}, {b'method': False, b'name': b'vim_replace_termcodes', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str'], [b'Boolean', b'from_part'], [b'Boolean', b'do_lt'], [b'Boolean', b'special']], b'return_type': b'String'}, {b'method': False, b'name': b'vim_command_output', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'String'}, {b'method': False, b'name': b'vim_eval', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'expr']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_call_function', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'fname'], [b'Array', b'args']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_strwidth', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'Integer'}, {b'method': False, b'name': b'vim_list_runtime_paths', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'ArrayOf(String)'}, {b'method': False, b'name': b'vim_change_directory', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'dir']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_current_line', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'String'}, {b'method': False, b'name': b'vim_set_current_line', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'line']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_del_current_line', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_get_vvar', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_get_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_set_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_out_write', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_err_write', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_report_error', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_buffers', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'ArrayOf(Buffer)'}, {b'method': False, b'name': b'vim_get_current_buffer', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Buffer'}, {b'method': False, b'name': b'vim_set_current_buffer', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_windows', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'ArrayOf(Window)'}, {b'method': False, b'name': b'vim_get_current_window', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Window'}, {b'method': False, b'name': b'vim_set_current_window', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_tabpages', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'ArrayOf(Tabpage)'}, {b'method': False, b'name': b'vim_get_current_tabpage', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Tabpage'}, {b'method': False, b'name': b'vim_set_current_tabpage', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_subscribe', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'event']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_unsubscribe', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'event']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_name_to_color', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Integer'}, {b'method': False, b'name': b'vim_get_color_map', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Dictionary'}, {b'method': False, b'name': b'vim_get_api_info', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Array'}, {b'method': True, b'name': b'window_get_buffer', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Buffer'}, {b'method': True, b'name': b'window_get_cursor', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'ArrayOf(Integer, 2)'}, {b'method': True, b'name': b'window_set_cursor', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'ArrayOf(Integer, 2)', b'pos']], b'return_type': b'void'}, {b'method': True, b'name': b'window_get_height', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer'}, {b'method': True, b'name': b'window_set_height', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'Integer', b'height']], b'return_type': b'void'}, {b'method': True, b'name': b'window_get_width', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer'}, {b'method': True, b'name': b'window_set_width', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'Integer', b'width']], b'return_type': b'void'}, {b'method': True, b'name': b'window_get_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'window_get_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'window_set_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void'}, {b'method': True, b'name': b'window_get_position', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'ArrayOf(Integer, 2)'}, {b'method': True, b'name': b'window_get_tabpage', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Tabpage'}, {b'method': True, b'name': b'window_is_valid', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Boolean'}], b'version': {b'api_compatible': 0, b'api_prerelease': False, b'patch': 0, b'major': 0, b'api_level': 1, b'minor': 2}}]]
2017-08-08 04:25:25,358 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [1, {b'error_types': {b'Validation': {b'id': 1}, b'Exception': {b'id': 0}}, b'types': {b'Buffer': {b'prefix': b'nvim_buf_', b'id': 0}, b'Tabpage': {b'prefix': b'nvim_tabpage_', b'id': 2}, b'Window': {b'prefix': b'nvim_win_', b'id': 1}}, b'functions': [{b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Integer', b'name': b'nvim_buf_line_count'}, {b'method': False, b'name': b'buffer_get_line', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index']], b'return_type': b'String'}, {b'method': False, b'name': b'buffer_set_line', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index'], [b'String', b'line']], b'return_type': b'void'}, {b'method': False, b'name': b'buffer_del_line', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'index']], b'return_type': b'void'}, {b'method': False, b'name': b'buffer_get_line_slice', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'include_start'], [b'Boolean', b'include_end']], b'return_type': b'ArrayOf(String)'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing']], b'return_type': b'ArrayOf(String)', b'name': b'nvim_buf_get_lines'}, {b'method': False, b'name': b'buffer_set_line_slice', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'include_start'], [b'Boolean', b'include_end'], [b'ArrayOf(String)', b'replacement']], b'return_type': b'void'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing'], [b'ArrayOf(String)', b'replacement']], b'return_type': b'void', b'name': b'nvim_buf_set_lines'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_buf_get_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_buf_set_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'void', b'name': b'nvim_buf_del_var'}, {b'method': False, b'name': b'buffer_set_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'Object'}, {b'method': False, b'name': b'buffer_del_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_buf_get_option'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_buf_set_option'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Integer', b'name': b'nvim_buf_get_number'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'String', b'name': b'nvim_buf_get_name'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'void', b'name': b'nvim_buf_set_name'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Boolean', b'name': b'nvim_buf_is_valid'}, {b'method': False, b'name': b'buffer_insert', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'lnum'], [b'ArrayOf(String)', b'lines']], b'return_type': b'void'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_buf_get_mark'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'String', b'hl_group'], [b'Integer', b'line'], [b'Integer', b'col_start'], [b'Integer', b'col_end']], b'return_type': b'Integer', b'name': b'nvim_buf_add_highlight'}, {b'since': 1, b'method': True, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'Integer', b'line_start'], [b'Integer', b'line_end']], b'return_type': b'void', b'name': b'nvim_buf_clear_highlight'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'ArrayOf(Window)', b'name': b'nvim_tabpage_list_wins'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_tabpage_get_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_tabpage_set_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'return_type': b'void', b'name': b'nvim_tabpage_del_var'}, {b'method': False, b'name': b'tabpage_set_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'Object'}, {b'method': False, b'name': b'tabpage_del_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'return_type': b'Object'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Window', b'name': b'nvim_tabpage_get_win'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Integer', b'name': b'nvim_tabpage_get_number'}, {b'since': 1, b'method': True, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Boolean', b'name': b'nvim_tabpage_is_valid'}, {b'since': 1, b'method': False, b'parameters': [[b'Integer', b'width'], [b'Integer', b'height'], [b'Dictionary', b'options']], b'return_type': b'void', b'name': b'nvim_ui_attach'}, {b'method': False, b'name': b'ui_attach', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Integer', b'width'], [b'Integer', b'height'], [b'Boolean', b'enable_rgb']], b'return_type': b'void'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'void', b'name': b'nvim_ui_detach'}, {b'since': 1, b'method': False, b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'return_type': b'void', b'name': b'nvim_ui_try_resize'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_ui_set_option'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'command']], b'return_type': b'void', b'name': b'nvim_command'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'keys'], [b'String', b'mode'], [b'Boolean', b'escape_csi']], b'return_type': b'void', b'name': b'nvim_feedkeys'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'keys']], b'return_type': b'Integer', b'name': b'nvim_input'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str'], [b'Boolean', b'from_part'], [b'Boolean', b'do_lt'], [b'Boolean', b'special']], b'return_type': b'String', b'name': b'nvim_replace_termcodes'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'String', b'name': b'nvim_command_output'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'expr']], b'return_type': b'Object', b'name': b'nvim_eval'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'fname'], [b'Array', b'args']], b'return_type': b'Object', b'name': b'nvim_call_function'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'Integer', b'name': b'nvim_strwidth'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'ArrayOf(String)', b'name': b'nvim_list_runtime_paths'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'dir']], b'return_type': b'void', b'name': b'nvim_set_current_dir'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'String', b'name': b'nvim_get_current_line'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'line']], b'return_type': b'void', b'name': b'nvim_set_current_line'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'void', b'name': b'nvim_del_current_line'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_get_var'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_set_var'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'void', b'name': b'nvim_del_var'}, {b'method': False, b'name': b'vim_set_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_del_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Object'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_get_vvar'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_get_option'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_set_option'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'void', b'name': b'nvim_out_write'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'void', b'name': b'nvim_err_write'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'str']], b'return_type': b'void', b'name': b'nvim_err_writeln'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'ArrayOf(Buffer)', b'name': b'nvim_list_bufs'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Buffer', b'name': b'nvim_get_current_buf'}, {b'since': 1, b'method': False, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'void', b'name': b'nvim_set_current_buf'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'ArrayOf(Window)', b'name': b'nvim_list_wins'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Window', b'name': b'nvim_get_current_win'}, {b'since': 1, b'method': False, b'parameters': [[b'Window', b'window']], b'return_type': b'void', b'name': b'nvim_set_current_win'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'ArrayOf(Tabpage)', b'name': b'nvim_list_tabpages'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Tabpage', b'name': b'nvim_get_current_tabpage'}, {b'since': 1, b'method': False, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'void', b'name': b'nvim_set_current_tabpage'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'event']], b'return_type': b'void', b'name': b'nvim_subscribe'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'event']], b'return_type': b'void', b'name': b'nvim_unsubscribe'}, {b'since': 1, b'method': False, b'parameters': [[b'String', b'name']], b'return_type': b'Integer', b'name': b'nvim_get_color_by_name'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Dictionary', b'name': b'nvim_get_color_map'}, {b'since': 1, b'method': False, b'parameters': [], b'return_type': b'Array', b'name': b'nvim_get_api_info'}, {b'since': 1, b'method': False, b'parameters': [[b'Array', b'calls']], b'return_type': b'Array', b'name': b'nvim_call_atomic'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Buffer', b'name': b'nvim_win_get_buf'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_win_get_cursor'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'ArrayOf(Integer, 2)', b'pos']], b'return_type': b'void', b'name': b'nvim_win_set_cursor'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer', b'name': b'nvim_win_get_height'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'Integer', b'height']], b'return_type': b'void', b'name': b'nvim_win_set_height'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer', b'name': b'nvim_win_get_width'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'Integer', b'width']], b'return_type': b'void', b'name': b'nvim_win_set_width'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_win_get_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_win_set_var'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'void', b'name': b'nvim_win_del_var'}, {b'method': False, b'name': b'window_set_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'Object'}, {b'method': False, b'name': b'window_del_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object', b'name': b'nvim_win_get_option'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void', b'name': b'nvim_win_set_option'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'ArrayOf(Integer, 2)', b'name': b'nvim_win_get_position'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Tabpage', b'name': b'nvim_win_get_tabpage'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer', b'name': b'nvim_win_get_number'}, {b'since': 1, b'method': True, b'parameters': [[b'Window', b'window']], b'return_type': b'Boolean', b'name': b'nvim_win_is_valid'}, {b'method': True, b'name': b'buffer_line_count', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Integer'}, {b'method': True, b'name': b'buffer_get_lines', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing']], b'return_type': b'ArrayOf(String)'}, {b'method': True, b'name': b'buffer_set_lines', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'start'], [b'Integer', b'end'], [b'Boolean', b'strict_indexing'], [b'ArrayOf(String)', b'replacement']], b'return_type': b'void'}, {b'method': True, b'name': b'buffer_get_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'buffer_get_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'buffer_set_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void'}, {b'method': True, b'name': b'buffer_get_number', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Integer'}, {b'method': True, b'name': b'buffer_get_name', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'String'}, {b'method': True, b'name': b'buffer_set_name', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'void'}, {b'method': True, b'name': b'buffer_is_valid', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'Boolean'}, {b'method': True, b'name': b'buffer_get_mark', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'String', b'name']], b'return_type': b'ArrayOf(Integer, 2)'}, {b'method': True, b'name': b'buffer_add_highlight', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'String', b'hl_group'], [b'Integer', b'line'], [b'Integer', b'col_start'], [b'Integer', b'col_end']], b'return_type': b'Integer'}, {b'method': True, b'name': b'buffer_clear_highlight', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer'], [b'Integer', b'src_id'], [b'Integer', b'line_start'], [b'Integer', b'line_end']], b'return_type': b'void'}, {b'method': True, b'name': b'tabpage_get_windows', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'ArrayOf(Window)'}, {b'method': True, b'name': b'tabpage_get_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'tabpage_get_window', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Window'}, {b'method': True, b'name': b'tabpage_is_valid', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'Boolean'}, {b'method': False, b'name': b'ui_detach', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'void'}, {b'method': False, b'name': b'ui_try_resize', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Integer', b'width'], [b'Integer', b'height']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_command', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'command']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_feedkeys', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'keys'], [b'String', b'mode'], [b'Boolean', b'escape_csi']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_input', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'keys']], b'return_type': b'Integer'}, {b'method': False, b'name': b'vim_replace_termcodes', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str'], [b'Boolean', b'from_part'], [b'Boolean', b'do_lt'], [b'Boolean', b'special']], b'return_type': b'String'}, {b'method': False, b'name': b'vim_command_output', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'String'}, {b'method': False, b'name': b'vim_eval', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'expr']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_call_function', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'fname'], [b'Array', b'args']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_strwidth', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'Integer'}, {b'method': False, b'name': b'vim_list_runtime_paths', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'ArrayOf(String)'}, {b'method': False, b'name': b'vim_change_directory', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'dir']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_current_line', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'String'}, {b'method': False, b'name': b'vim_set_current_line', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'line']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_del_current_line', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_get_vvar', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_get_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Object'}, {b'method': False, b'name': b'vim_set_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name'], [b'Object', b'value']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_out_write', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_err_write', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_report_error', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'str']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_buffers', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'ArrayOf(Buffer)'}, {b'method': False, b'name': b'vim_get_current_buffer', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Buffer'}, {b'method': False, b'name': b'vim_set_current_buffer', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Buffer', b'buffer']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_windows', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'ArrayOf(Window)'}, {b'method': False, b'name': b'vim_get_current_window', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Window'}, {b'method': False, b'name': b'vim_set_current_window', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_get_tabpages', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'ArrayOf(Tabpage)'}, {b'method': False, b'name': b'vim_get_current_tabpage', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Tabpage'}, {b'method': False, b'name': b'vim_set_current_tabpage', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Tabpage', b'tabpage']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_subscribe', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'event']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_unsubscribe', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'event']], b'return_type': b'void'}, {b'method': False, b'name': b'vim_name_to_color', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'String', b'name']], b'return_type': b'Integer'}, {b'method': False, b'name': b'vim_get_color_map', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Dictionary'}, {b'method': False, b'name': b'vim_get_api_info', b'deprecated_since': 1, b'since': 0, b'parameters': [], b'return_type': b'Array'}, {b'method': True, b'name': b'window_get_buffer', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Buffer'}, {b'method': True, b'name': b'window_get_cursor', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'ArrayOf(Integer, 2)'}, {b'method': True, b'name': b'window_set_cursor', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'ArrayOf(Integer, 2)', b'pos']], b'return_type': b'void'}, {b'method': True, b'name': b'window_get_height', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer'}, {b'method': True, b'name': b'window_set_height', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'Integer', b'height']], b'return_type': b'void'}, {b'method': True, b'name': b'window_get_width', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Integer'}, {b'method': True, b'name': b'window_set_width', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'Integer', b'width']], b'return_type': b'void'}, {b'method': True, b'name': b'window_get_var', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'window_get_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name']], b'return_type': b'Object'}, {b'method': True, b'name': b'window_set_option', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window'], [b'String', b'name'], [b'Object', b'value']], b'return_type': b'void'}, {b'method': True, b'name': b'window_get_position', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'ArrayOf(Integer, 2)'}, {b'method': True, b'name': b'window_get_tabpage', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Tabpage'}, {b'method': True, b'name': b'window_is_valid', b'deprecated_since': 1, b'since': 0, b'parameters': [[b'Window', b'window']], b'return_type': b'Boolean'}], b'version': {b'api_compatible': 0, b'api_prerelease': False, b'patch': 0, b'major': 0, b'api_level': 1, b'minor': 2}}]
2017-08-08 04:25:25,359 [DEBUG @ base.py:stop:149] 64726 - Stopped event loop
2017-08-08 04:25:25,359 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:25,359 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:25,359 [DEBUG @ base.py:run:140] 64726 - Exited event loop
2017-08-08 04:25:25,406 [DEBUG @ session.py:_on_request:201] 64726 - received rpc request, greenlet <greenlet.greenlet object at 0x1022c8898> will handle it
2017-08-08 04:25:25,407 [DEBUG @ host.py:_on_request:91] 64726 - calling request handler for "poll", args: "[]"
2017-08-08 04:25:25,407 [DEBUG @ host.py:_on_request:93] 64726 - request handler for 'poll []' returns: ok
2017-08-08 04:25:25,407 [DEBUG @ session.py:handler:187] 64726 - greenlet <greenlet.greenlet object at 0x1022c8898> finished executing, sending ok as response
2017-08-08 04:25:25,407 [DEBUG @ async_session.py:send:133] 64726 - sending response to request 1: [1, 1, None, 'ok']
2017-08-08 04:25:25,407 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [1, 1, None, 'ok']
2017-08-08 04:25:25,407 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x01\x01\xc0\xa2ok''
2017-08-08 04:25:25,408 [DEBUG @ session.py:handler:197] 64726 - greenlet <greenlet.greenlet object at 0x1022c8898> is now dying...
2017-08-08 04:25:25,408 [DEBUG @ base.py:run:138] 64726 - Entering event loop
2017-08-08 04:25:25,409 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:25,409 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [2, b'/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/deoplete:function:_deoplete', [[]]]
2017-08-08 04:25:25,409 [DEBUG @ async_session.py:_on_notification:102] 64726 - received notification: b'/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/deoplete:function:_deoplete', [[]]
2017-08-08 04:25:25,409 [DEBUG @ session.py:_on_notification:216] 64726 - received rpc notification, greenlet <greenlet.greenlet object at 0x1022c8898> will handle it
2017-08-08 04:25:25,409 [DEBUG @ host.py:_on_notification:107] 64726 - calling notification handler for "/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/deoplete:function:_deoplete", args: "[[]]"
2017-08-08 04:25:25,409 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 2, 'nvim_call_function', ('deoplete#init#_context', ['Init', []])]
2017-08-08 04:25:25,410 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x02\xb2nvim_call_function\x92\xb6deoplete#init#_context\x92\xa4Init\x90''
2017-08-08 04:25:25,410 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:25,410 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:25,410 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,473 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,473 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [0, 2, b'/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/denite:function:_denite_init', [[]]]
2017-08-08 04:25:26,473 [DEBUG @ async_session.py:_on_request:86] 64726 - received request: b'/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/denite:function:_denite_init', [[]]
2017-08-08 04:25:26,474 [DEBUG @ session.py:_on_request:201] 64726 - received rpc request, greenlet <greenlet.greenlet object at 0x1022c89c8> will handle it
2017-08-08 04:25:26,474 [DEBUG @ host.py:_on_request:91] 64726 - calling request handler for "/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/denite:function:_denite_init", args: "[[]]"
2017-08-08 04:25:26,474 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 3, 'nvim_set_var', ('denite#_channel_id', 1)]
2017-08-08 04:25:26,474 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x03\xacnvim_set_var\x92\xb2denite#_channel_id\x01''
2017-08-08 04:25:26,474 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c89c8> to wait for response
2017-08-08 04:25:26,474 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,474 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,477 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,477 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 2, None, {b'max_abbr_width': 51, b'bufsize': 32677, b'same_filetypes': [], b'input': b'', b'changedtick': 3, b'omni__omnifunc': b'', b'filetype': b'vim', b'dict__dictionary': b'', b'delay': 50, b'bufvars': {}, b'camelcase': 0, b'bufpath': b'/Users/AMC/.vim/init.vim', b'encoding': b'utf-8', b'keyword_patterns': b'[a-zA-Z_][a-zA-Z@0-9_\xc3\x80-\xc3\xbf#]*', b'position': [0, 329, 1, 0], b'sources': [], b'custom': {b'_': {}, b'ternjs': {b'mark': b'\xee\x98\x8c'}, b'neosnippet': {b'mark': b'\xef\x80\xbc'}, b'jedi': {b'mark': b'\xee\x98\x86'}, b'file': {b'mark': b'file'}, b'omni': {b'mark': b'\xe2\x8c\xbe'}, b'buffer': {b'mark': b'\xe2\x84\xac'}, b'typescript': {b'rank': 630, b'mark': b'\xee\x98\xa8'}}, b'bufnr': 1, b'complete_str': b'', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'event': b'Init', b'max_menu_width': 51, b'next_input': b'" , Commands, etc  ----------------------------------------------------{{{', b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'vars': {b'deoplete#keyword_patterns': {}, b'deoplete#_context': {}, b'deoplete#enable_ignore_case': 1, b'deoplete#max_menu_width': 40, b'deoplete#sources#go#cgo': 0, b'deoplete#auto_refresh_delay': 500, b'deoplete#sources#go#gocode_binary': b'', b'deoplete#sources#ternjs#tern_bin': b'tern', b'deoplete#enable_refresh_always': 0, b'deoplete#omni_patterns': {}, b'deoplete#_logging': {}, b'deoplete#enable_camel_case': 0, b'deoplete#skip_chars': [], b'deoplete#enable_profile': 0, b'deoplete#_keyword_patterns': {b'_': b'[a-zA-Z_]\\k*'}, b'deoplete#auto_complete_start_length': 2, b'deoplete#sources#go#align_class': 0, b'deoplete#auto_complete_delay': 50, b'deoplete#enable_at_startup': 1, b'deoplete#sources#go#sort_class': [], b'deoplete#complete_method': b'complete', b'deoplete#max_abbr_width': 80, b'deoplete#omni#input_patterns': {}, b'deoplete#sources#go#on_event': 0, b'deoplete#delimiters': [b'/'], b'deoplete#_omni_patterns': {b'html': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xhtml': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xml': [b'<', b'<[^>]*\\s[[:alnum:]-]*']}, b'deoplete#omni#functions': {}, b'deoplete#sources#go#use_cache': 0, b'deoplete#_rank': {}, b'deoplete#sources#go#pointer': 0, b'deoplete#max_list': 100, b'deoplete#sources': {}, b'deoplete#sources#go#json_directory': b'', b'deoplete#enable_smart_case': 1, b'deoplete#disable_auto_complete': 0, b'deoplete#member#prefix_patterns': {}, b'deoplete#file#enable_buffer_path': 1, b'deoplete#ignore_sources': {b'_': [b'around']}, b'deoplete#sources#go#package_dot': 0}, b'filetypes': [b'vim'], b'ignorecase': 1, b'bufname': b'/Users/AMC/.vim/init.vim', b'smartcase': 1}]
2017-08-08 04:25:26,477 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, {b'max_abbr_width': 51, b'bufsize': 32677, b'same_filetypes': [], b'input': b'', b'changedtick': 3, b'omni__omnifunc': b'', b'filetype': b'vim', b'dict__dictionary': b'', b'delay': 50, b'bufvars': {}, b'camelcase': 0, b'bufpath': b'/Users/AMC/.vim/init.vim', b'encoding': b'utf-8', b'keyword_patterns': b'[a-zA-Z_][a-zA-Z@0-9_\xc3\x80-\xc3\xbf#]*', b'position': [0, 329, 1, 0], b'sources': [], b'custom': {b'_': {}, b'ternjs': {b'mark': b'\xee\x98\x8c'}, b'neosnippet': {b'mark': b'\xef\x80\xbc'}, b'jedi': {b'mark': b'\xee\x98\x86'}, b'file': {b'mark': b'file'}, b'omni': {b'mark': b'\xe2\x8c\xbe'}, b'buffer': {b'mark': b'\xe2\x84\xac'}, b'typescript': {b'rank': 630, b'mark': b'\xee\x98\xa8'}}, b'bufnr': 1, b'complete_str': b'', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'event': b'Init', b'max_menu_width': 51, b'next_input': b'" , Commands, etc  ----------------------------------------------------{{{', b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'vars': {b'deoplete#keyword_patterns': {}, b'deoplete#_context': {}, b'deoplete#enable_ignore_case': 1, b'deoplete#max_menu_width': 40, b'deoplete#sources#go#cgo': 0, b'deoplete#auto_refresh_delay': 500, b'deoplete#sources#go#gocode_binary': b'', b'deoplete#sources#ternjs#tern_bin': b'tern', b'deoplete#enable_refresh_always': 0, b'deoplete#omni_patterns': {}, b'deoplete#_logging': {}, b'deoplete#enable_camel_case': 0, b'deoplete#skip_chars': [], b'deoplete#enable_profile': 0, b'deoplete#_keyword_patterns': {b'_': b'[a-zA-Z_]\\k*'}, b'deoplete#auto_complete_start_length': 2, b'deoplete#sources#go#align_class': 0, b'deoplete#auto_complete_delay': 50, b'deoplete#enable_at_startup': 1, b'deoplete#sources#go#sort_class': [], b'deoplete#complete_method': b'complete', b'deoplete#max_abbr_width': 80, b'deoplete#omni#input_patterns': {}, b'deoplete#sources#go#on_event': 0, b'deoplete#delimiters': [b'/'], b'deoplete#_omni_patterns': {b'html': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xhtml': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xml': [b'<', b'<[^>]*\\s[[:alnum:]-]*']}, b'deoplete#omni#functions': {}, b'deoplete#sources#go#use_cache': 0, b'deoplete#_rank': {}, b'deoplete#sources#go#pointer': 0, b'deoplete#max_list': 100, b'deoplete#sources': {}, b'deoplete#sources#go#json_directory': b'', b'deoplete#enable_smart_case': 1, b'deoplete#disable_auto_complete': 0, b'deoplete#member#prefix_patterns': {}, b'deoplete#file#enable_buffer_path': 1, b'deoplete#ignore_sources': {b'_': [b'around']}, b'deoplete#sources#go#package_dot': 0}, b'filetypes': [b'vim'], b'ignorecase': 1, b'bufname': b'/Users/AMC/.vim/init.vim', b'smartcase': 1}
2017-08-08 04:25:26,477 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,570 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 4, 'nvim_get_var', ('tern#filetypes',)]
2017-08-08 04:25:26,571 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x04\xacnvim_get_var\x91\xaetern#filetypes''
2017-08-08 04:25:26,572 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,572 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,572 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 3, None, None]
2017-08-08 04:25:26,572 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:26,572 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c89c8>, switching back
2017-08-08 04:25:26,572 [DEBUG @ host.py:_on_request:93] 64726 - request handler for '/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/denite:function:_denite_init [[]]' returns: None
2017-08-08 04:25:26,573 [DEBUG @ session.py:handler:187] 64726 - greenlet <greenlet.greenlet object at 0x1022c89c8> finished executing, sending None as response
2017-08-08 04:25:26,573 [DEBUG @ async_session.py:send:133] 64726 - sending response to request 2: [1, 2, None, None]
2017-08-08 04:25:26,573 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [1, 2, None, None]
2017-08-08 04:25:26,573 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x01\x02\xc0\xc0''
2017-08-08 04:25:26,573 [DEBUG @ session.py:handler:197] 64726 - greenlet <greenlet.greenlet object at 0x1022c89c8> is now dying...
2017-08-08 04:25:26,573 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,573 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,574 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,574 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 4, None, [b'jsx', b'javascript.jsx', b'vue']]
2017-08-08 04:25:26,574 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [b'jsx', b'javascript.jsx', b'vue']
2017-08-08 04:25:26,574 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,574 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 5, 'nvim_get_var', ('tern#filetypes',)]
2017-08-08 04:25:26,574 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x05\xacnvim_get_var\x91\xaetern#filetypes''
2017-08-08 04:25:26,575 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,575 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,575 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,575 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,575 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [0, 3, b'/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/denite:function:_denite_start', [[[{b'name': b'file_rec', b'args': []}], {b'sorters': b'', b'immediately': False, b'cursorline': True, b'firstline': 329, b'quit': True, b'reversed': 1, b'highlight_mode_insert': b'CursorLine', b'scroll': 0, b'encoding': b'utf-8', b'is_windows': 0, b'highlight_mode_normal': b'CursorLine', b'resume': False, b'highlight_matched_char': b'Underlined', b'vertical_preview': False, b'prompt_highlight': b'Statement', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'short_source_names': False, b'max_candidate_width': 200, b'direction': b'botright', b'cursor_pos': b'', b'use_default_mappings': True, b'auto_preview': False, b'auto_resume': False, b'messages': [], b'refresh': False, b'unique': False, b'highlight_matched_range': b'Underlined', b'auto_accel': False, b'force_quit': False, b'smartcase': False, b'previewheight': 12, b'input': b'', b'lastline': 329, b'winwidth': 90, b'winheight': 10, b'mode': b'', b'cursor_shape': False, b'auto_resize': 1, b'highlight_preview_line': b'Search', b'selected_icon': b'*', b'winminheight': -1, b'buffer_name': b'default', b'empty': True, b'split': b'horizontal', b'prompt': b'\xe2\x9d\xaf', b'custom': {b'map': {b'_': [], b'insert': [[b'<C-n>', b'<denite:move_to_next_line>', b'noremap'], [b'<C-N>', b'<denite:move_to_previous_line>', b'noremap']]}, b'option': {b'TSDocumentSymbol': {b'reversed': 0, b'prompt': b' @'}, b'_': {b'auto_resize': 1, b'prompt': b'\xe2\x9d\xaf', b'reversed': 1, b'statusline': 0, b'updatetime': 1, b'winheight': 10, b'highlight_matched_char': b'Underlined', b'highlight_mode_normal': b'CursorLine'}}, b'filter': {b'matcher_ignore_globs': {b'ignore_globs': [b'.git/', b'.ropeproject/', b'__pycache__/', b'venv/', b'images/', b'*.min.*', b'img/', b'fonts/']}}, b'source': {b'grep': {b'vars': {b'pattern_opt': [], b'command': [b'ag'], b'default_opts': [b'-i', b'--vimgrep'], b'final_opts': [], b'recursive_opts': [], b'separator': [b'--']}}, b'menu': {b'vars': {b'menus': {b'ionic': {b'description': b'some rando ionic stuff', b'command_candidates': [[b' serve', b'call Ionic("serve")'], [b' run device', b'call Ionic("run")'], [b' emulate device', b'call Ionic("emulate")']]}, b'git': {b'description': b'Fugitive interface', b'command_candidates': [[b' git status', b'Gstatus'], [b' git diff', b'Gvdiff'], [b' git commit', b'Gcommit'], [b' git stage/add', b'Gwrite'], [b' git checkout', b'Gread'], [b' git rm', b'Gremove'], [b' git cd', b'Gcd'], [b' git push', b'exe "Git! push " input("remote/branch: ")'], [b' git pull', b'exe "Git! pull " input("remote/branch: ")'], [b' git pull rebase', b'exe "Git! pull --rebase " input("branch: ")'], [b' git checkout branch', b'exe "Git! checkout " input("branch: ")'], [b' git fetch', b'Gfetch'], [b' git merge', b'Gmerge'], [b' git browse', b'Gbrowse'], [b' git head', b'Gedit HEAD^'], [b' git parent', b'edit %:h'], [b' git log commit buffers', b'Glog --'], [b' git log current file', b'Glog -- %'], [b' git log last n commits', b'exe "Glog -" input("num: ")'], [b' git log first n commits', b'exe "Glog --reverse -" input("num: ")'], [b' git log until date', b'exe "Glog --until=" input("day: ")'], [b' git log grep commits', b'exe "Glog --grep= " input("string: ")'], [b' git log pickaxe', b'exe "Glog -S" input("string: ")'], [b' git index', b'exe "Gedit " input("branchname\\:filename: ")'], [b' git mv', b'exe "Gmove " input("destination: ")'], [b' git grep', b'exe "Ggrep " input("string: ")'], [b' git prompt', b'exe "Git! " input("command: ")']]}}}}, b'_': {}, b'file_rec': {b'vars': {b'command': [b'ag', b'--follow', b'--nogroup', b'--hidden', b'--column', b'-g', b'', b'--ignore', b'.git', b'--ignore', b'*.png']}}}, b'action': {}, b'alias_source': {}, b'alias_filter': {}}, b'highlight_cursor': b'Cursor', b'statusline': 0, b'bufnr': 1, b'updatetime': 1, b'prev_winid': 1000, b'cursor_wrap': False, b'path': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'ignorecase': True, b'auto_highlight': False, b'default_action': b'default'}]]]
2017-08-08 04:25:26,575 [DEBUG @ async_session.py:_on_request:86] 64726 - received request: b'/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/denite:function:_denite_start', [[[{b'name': b'file_rec', b'args': []}], {b'sorters': b'', b'immediately': False, b'cursorline': True, b'firstline': 329, b'quit': True, b'reversed': 1, b'highlight_mode_insert': b'CursorLine', b'scroll': 0, b'encoding': b'utf-8', b'is_windows': 0, b'highlight_mode_normal': b'CursorLine', b'resume': False, b'highlight_matched_char': b'Underlined', b'vertical_preview': False, b'prompt_highlight': b'Statement', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'short_source_names': False, b'max_candidate_width': 200, b'direction': b'botright', b'cursor_pos': b'', b'use_default_mappings': True, b'auto_preview': False, b'auto_resume': False, b'messages': [], b'refresh': False, b'unique': False, b'highlight_matched_range': b'Underlined', b'auto_accel': False, b'force_quit': False, b'smartcase': False, b'previewheight': 12, b'input': b'', b'lastline': 329, b'winwidth': 90, b'winheight': 10, b'mode': b'', b'cursor_shape': False, b'auto_resize': 1, b'highlight_preview_line': b'Search', b'selected_icon': b'*', b'winminheight': -1, b'buffer_name': b'default', b'empty': True, b'split': b'horizontal', b'prompt': b'\xe2\x9d\xaf', b'custom': {b'map': {b'_': [], b'insert': [[b'<C-n>', b'<denite:move_to_next_line>', b'noremap'], [b'<C-N>', b'<denite:move_to_previous_line>', b'noremap']]}, b'option': {b'TSDocumentSymbol': {b'reversed': 0, b'prompt': b' @'}, b'_': {b'auto_resize': 1, b'prompt': b'\xe2\x9d\xaf', b'reversed': 1, b'statusline': 0, b'updatetime': 1, b'winheight': 10, b'highlight_matched_char': b'Underlined', b'highlight_mode_normal': b'CursorLine'}}, b'filter': {b'matcher_ignore_globs': {b'ignore_globs': [b'.git/', b'.ropeproject/', b'__pycache__/', b'venv/', b'images/', b'*.min.*', b'img/', b'fonts/']}}, b'source': {b'grep': {b'vars': {b'pattern_opt': [], b'command': [b'ag'], b'default_opts': [b'-i', b'--vimgrep'], b'final_opts': [], b'recursive_opts': [], b'separator': [b'--']}}, b'menu': {b'vars': {b'menus': {b'ionic': {b'description': b'some rando ionic stuff', b'command_candidates': [[b' serve', b'call Ionic("serve")'], [b' run device', b'call Ionic("run")'], [b' emulate device', b'call Ionic("emulate")']]}, b'git': {b'description': b'Fugitive interface', b'command_candidates': [[b' git status', b'Gstatus'], [b' git diff', b'Gvdiff'], [b' git commit', b'Gcommit'], [b' git stage/add', b'Gwrite'], [b' git checkout', b'Gread'], [b' git rm', b'Gremove'], [b' git cd', b'Gcd'], [b' git push', b'exe "Git! push " input("remote/branch: ")'], [b' git pull', b'exe "Git! pull " input("remote/branch: ")'], [b' git pull rebase', b'exe "Git! pull --rebase " input("branch: ")'], [b' git checkout branch', b'exe "Git! checkout " input("branch: ")'], [b' git fetch', b'Gfetch'], [b' git merge', b'Gmerge'], [b' git browse', b'Gbrowse'], [b' git head', b'Gedit HEAD^'], [b' git parent', b'edit %:h'], [b' git log commit buffers', b'Glog --'], [b' git log current file', b'Glog -- %'], [b' git log last n commits', b'exe "Glog -" input("num: ")'], [b' git log first n commits', b'exe "Glog --reverse -" input("num: ")'], [b' git log until date', b'exe "Glog --until=" input("day: ")'], [b' git log grep commits', b'exe "Glog --grep= " input("string: ")'], [b' git log pickaxe', b'exe "Glog -S" input("string: ")'], [b' git index', b'exe "Gedit " input("branchname\\:filename: ")'], [b' git mv', b'exe "Gmove " input("destination: ")'], [b' git grep', b'exe "Ggrep " input("string: ")'], [b' git prompt', b'exe "Git! " input("command: ")']]}}}}, b'_': {}, b'file_rec': {b'vars': {b'command': [b'ag', b'--follow', b'--nogroup', b'--hidden', b'--column', b'-g', b'', b'--ignore', b'.git', b'--ignore', b'*.png']}}}, b'action': {}, b'alias_source': {}, b'alias_filter': {}}, b'highlight_cursor': b'Cursor', b'statusline': 0, b'bufnr': 1, b'updatetime': 1, b'prev_winid': 1000, b'cursor_wrap': False, b'path': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'ignorecase': True, b'auto_highlight': False, b'default_action': b'default'}]]
2017-08-08 04:25:26,576 [DEBUG @ session.py:_on_request:201] 64726 - received rpc request, greenlet <greenlet.greenlet object at 0x101b2adf0> will handle it
2017-08-08 04:25:26,577 [DEBUG @ host.py:_on_request:91] 64726 - calling request handler for "/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/denite:function:_denite_start", args: "[[[{b'name': b'file_rec', b'args': []}], {b'sorters': b'', b'immediately': False, b'cursorline': True, b'quit': True, b'reversed': 1, b'bufnr': 1, b'scroll': 0, b'highlight_mode_normal': b'CursorLine', b'resume': False, b'updatetime': 1, b'vertical_preview': False, b'prompt_highlight': b'Statement', b'prev_winid': 1000, b'lastline': 329, b'max_candidate_width': 200, b'direction': b'botright', b'cursor_pos': b'', b'use_default_mappings': True, b'highlight_matched_range': b'Underlined', b'auto_preview': False, b'auto_resume': False, b'messages': [], b'refresh': False, b'unique': False, b'highlight_preview_line': b'Search', b'auto_accel': False, b'winheight': 10, b'smartcase': False, b'previewheight': 12, b'input': b'', b'short_source_names': False, b'mode': b'', b'cursor_shape': False, b'auto_resize': 1, b'force_quit': False, b'encoding': b'utf-8', b'selected_icon': b'*', b'winminheight': -1, b'buffer_name': b'default', b'empty': True, b'split': b'horizontal', b'prompt': b'\xe2\x9d\xaf', b'firstline': 329, b'highlight_cursor': b'Cursor', b'is_windows': 0, b'cursor_wrap': False, b'highlight_mode_insert': b'CursorLine', b'highlight_matched_char': b'Underlined', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'custom': {b'alias_filter': {}, b'option': {b'TSDocumentSymbol': {b'reversed': 0, b'prompt': b' @'}, b'_': {b'auto_resize': 1, b'prompt': b'\xe2\x9d\xaf', b'reversed': 1, b'statusline': 0, b'highlight_mode_normal': b'CursorLine', b'winheight': 10, b'updatetime': 1, b'highlight_matched_char': b'Underlined'}}, b'filter': {b'matcher_ignore_globs': {b'ignore_globs': [b'.git/', b'.ropeproject/', b'__pycache__/', b'venv/', b'images/', b'*.min.*', b'img/', b'fonts/']}}, b'map': {b'_': [], b'insert': [[b'<C-n>', b'<denite:move_to_next_line>', b'noremap'], [b'<C-N>', b'<denite:move_to_previous_line>', b'noremap']]}, b'action': {}, b'alias_source': {}, b'source': {b'grep': {b'vars': {b'pattern_opt': [], b'command': [b'ag'], b'default_opts': [b'-i', b'--vimgrep'], b'final_opts': [], b'recursive_opts': [], b'separator': [b'--']}}, b'menu': {b'vars': {b'menus': {b'ionic': {b'description': b'some rando ionic stuff', b'command_candidates': [[b' serve', b'call Ionic("serve")'], [b' run device', b'call Ionic("run")'], [b' emulate device', b'call Ionic("emulate")']]}, b'git': {b'description': b'Fugitive interface', b'command_candidates': [[b' git status', b'Gstatus'], [b' git diff', b'Gvdiff'], [b' git commit', b'Gcommit'], [b' git stage/add', b'Gwrite'], [b' git checkout', b'Gread'], [b' git rm', b'Gremove'], [b' git cd', b'Gcd'], [b' git push', b'exe "Git! push " input("remote/branch: ")'], [b' git pull', b'exe "Git! pull " input("remote/branch: ")'], [b' git pull rebase', b'exe "Git! pull --rebase " input("branch: ")'], [b' git checkout branch', b'exe "Git! checkout " input("branch: ")'], [b' git fetch', b'Gfetch'], [b' git merge', b'Gmerge'], [b' git browse', b'Gbrowse'], [b' git head', b'Gedit HEAD^'], [b' git parent', b'edit %:h'], [b' git log commit buffers', b'Glog --'], [b' git log current file', b'Glog -- %'], [b' git log last n commits', b'exe "Glog -" input("num: ")'], [b' git log first n commits', b'exe "Glog --reverse -" input("num: ")'], [b' git log until date', b'exe "Glog --until=" input("day: ")'], [b' git log grep commits', b'exe "Glog --grep= " input("string: ")'], [b' git log pickaxe', b'exe "Glog -S" input("string: ")'], [b' git index', b'exe "Gedit " input("branchname\\:filename: ")'], [b' git mv', b'exe "Gmove " input("destination: ")'], [b' git grep', b'exe "Ggrep " input("string: ")'], [b' git prompt', b'exe "Git! " input("command: ")']]}}}}, b'_': {}, b'file_rec': {b'vars': {b'command': [b'ag', b'--follow', b'--nogroup', b'--hidden', b'--column', b'-g', b'', b'--ignore', b'.git', b'--ignore', b'*.png']}}}}, b'statusline': 0, b'winwidth': 90, b'ignorecase': True, b'auto_highlight': False, b'default_action': b'default', b'path': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'}]]"
2017-08-08 04:25:26,585 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 6, 'nvim_get_option', ('encoding',)]
2017-08-08 04:25:26,585 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x06\xafnvim_get_option\x91\xa8encoding''
2017-08-08 04:25:26,585 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,586 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,586 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 5, None, [b'jsx', b'javascript.jsx', b'vue']]
2017-08-08 04:25:26,586 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [b'jsx', b'javascript.jsx', b'vue']
2017-08-08 04:25:26,586 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,586 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 7, 'nvim_get_var', ('deoplete#sources#ternjs#tern_bin',)]
2017-08-08 04:25:26,586 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x07\xacnvim_get_var\x91\xda\x00 deoplete#sources#ternjs#tern_bin''
2017-08-08 04:25:26,586 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,586 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,587 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,587 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,587 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 6, None, b'utf-8']
2017-08-08 04:25:26,587 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'utf-8'
2017-08-08 04:25:26,587 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:26,589 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 8, 'nvim_call_function', ('has', ['gui_running'])]
2017-08-08 04:25:26,589 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x08\xb2nvim_call_function\x92\xa3has\x91\xabgui_running''
2017-08-08 04:25:26,589 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,589 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,590 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 7, None, b'tern']
2017-08-08 04:25:26,590 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'tern'
2017-08-08 04:25:26,590 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,590 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 9, 'nvim_eval', ('exists("g:tern_request_timeout")',)]
2017-08-08 04:25:26,590 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\t\xa9nvim_eval\x91\xda\x00 exists("g:tern_request_timeout")''
2017-08-08 04:25:26,590 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,590 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,590 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,591 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,591 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 8, None, 0]
2017-08-08 04:25:26,591 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:26,591 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:26,591 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 10, 'nvim_get_current_buf', ()]
2017-08-08 04:25:26,591 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\n\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:26,591 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,591 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,592 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 9, None, 0]
2017-08-08 04:25:26,592 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:26,592 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,603 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 11, 'nvim_eval', ('values(neosnippet#helpers#get_completion_snippets())',)]
2017-08-08 04:25:26,603 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x0b\xa9nvim_eval\x91\xda\x004values(neosnippet#helpers#get_completion_snippets())''
2017-08-08 04:25:26,603 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,603 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,604 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,604 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,604 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 10, None, ExtType(code=0, data=b'\x01')]
2017-08-08 04:25:26,604 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x01')
2017-08-08 04:25:26,604 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:26,604 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 12, 'nvim_buf_get_name', (ExtType(code=0, data=b'\x01'),)]
2017-08-08 04:25:26,604 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x0c\xb1nvim_buf_get_name\x91\xd4\x00\x01''
2017-08-08 04:25:26,605 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,605 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,605 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,837 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,837 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,837 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,838 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,838 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,838 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,838 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,839 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,839 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,839 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,839 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,839 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,840 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,840 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,840 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,840 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,841 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,841 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,841 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,841 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,841 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,842 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,842 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,842 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,842 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,842 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 11, None, [{b'description': b"v:version > ${1} || (v:version == $1 && has('patch${2}'))${0}", b'snip': b"v:version > ${1} || (v:version == $1 && has('patch${2}'))${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'vim-version-check', b'real_name': b'version', b'action__line': 229, b'word': b'version', b'menu_template': b'vim-version-check', b'action__pattern': b'^snippet\\s\\+version$'}, {b'description': b"let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')${0}", b'snip': b"let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"let s:M = s:V.import('...')", b'real_name': b'vital_import', b'action__line': 14, b'word': b'vital_import', b'menu_template': b"let s:M = s:V.import('...')", b'action__pattern': b'^snippet\\s\\+vital_import$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'autoload', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b'let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry', b'snip': b'let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use option save', b'real_name': b'save_option', b'action__line': 213, b'word': b'save_option', b'menu_template': b'use option save', b'action__pattern': b'^snippet\\s\\+save_option$'}, {b'description': b'echomsg string(${1:TARGET})${0}', b'snip': b'echomsg string(${1:TARGET})${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'echomsg string(${1: })${0}', b'real_name': b'echomsg', b'action__line': 68, b'word': b'echomsg', b'menu_template': b'echomsg string(${1: })${0}', b'action__pattern': b'^snippet\\s\\+echomsg$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b'cpoptions', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 2.1 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 2.1 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 2.1 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'LGPL2', b'action__line': 35, b'word': b'LGPL2', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 2.1 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+LGPL2$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 3 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'LGPL3', b'action__line': 69, b'word': b'LGPL3', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 3 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+LGPL3$'}, {b'description': b"Plugin '${0}'", b'snip': b"Plugin '${0}'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'Vundle.vim Plugin definition', b'real_name': b'bun_Vundle_vim_Plugin_definition', b'action__line': 49, b'word': b'bun_Vundle_vim_Plugin_definition', b'menu_template': b'Vundle.vim Plugin definition', b'action__pattern': b'^snippet\\s\\+bun_Vundle_vim_Plugin_definition$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'datetime_iso8601', b'action__line': 7, b'word': b'df', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+datetime_iso8601$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'real_name': b'filename', b'action__line': 27, b'word': b'fname', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'action__pattern': b'^snippet\\s\\+filename$'}, {b'description': b'if ${1}\n\t\t${0:${VISUAL}}\n\tendif', b'snip': b'if ${1}\n\t\t${0:${VISUAL}}\n\tendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'if statement', b'real_name': b'if_if_statement', b'action__line': 34, b'word': b'if_if_statement', b'menu_template': b'if statement', b'action__pattern': b'^snippet\\s\\+if_if_statement$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'diso', b'action__line': 10, b'word': b'diso', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+diso$'}, {b'description': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'snip': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if !exists('b:undo_ftplugin')", b'real_name': b'undo_ftplugin', b'action__line': 156, b'word': b'b:undo_ftplugin', b'menu_template': b"if !exists('b:undo_ftplugin')", b'action__pattern': b'^snippet\\s\\+undo_ftplugin$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date_iso8601', b'action__line': 12, b'word': b'date_iso8601', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date_iso8601$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'real_name': b'filename_lower_camel', b'action__line': 50, b'word': b'filename_lower_camel', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_lower_camel$'}, {b'description': b'" File: ${1:`expand(\'%:t\')`}\n\t" Author: ${2:`g:snips_author`}\n\t" Description: ${3}\n\t${0:" Last Modified: `strftime("%B %d, %Y")`}', b'snip': b'" File: ${1:`expand(\'%:t\')`}\n\t" Author: ${2:`g:snips_author`}\n\t" Description: ${3}\n\t${0:" Last Modified: `strftime("%B %d, %Y")`}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'standard Vim script file header', b'real_name': b'header_standard_Vim_script_file_header', b'action__line': 1, b'word': b'header_standard_Vim_script_file_header', b'menu_template': b'standard Vim script file header', b'action__pattern': b'^snippet\\s\\+header_standard_Vim_script_file_header$'}, {b'description': b'This Source Code Form is subject to the terms of the Mozilla Public\n\tLicense, v. 2.0. If a copy of the MPL was not distributed with this\n\tfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t${0}', b'snip': b'This Source Code Form is subject to the terms of the Mozilla Public\n\tLicense, v. 2.0. If a copy of the MPL was not distributed with this\n\tfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'This Source Code Form is subject to the terms of the Mozilla Public  License, v. 2.0. If a copy of the MPL was not distributed with this  file, You can obtain one at http://mozilla.org/MPL/2.0/.  ${0}', b'real_name': b'MPL2', b'action__line': 260, b'word': b'MPL2', b'menu_template': b'This Source Code Form is subject to the terms of the Mozilla Public  License, v. 2.0. If a copy of the MPL was not distributed with this  file, You can obtain one at http://mozilla.org/MPL/2.0/.  ${0}', b'action__pattern': b'^snippet\\s\\+MPL2$'}, {b'description': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'snip': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'real_name': b'c)', b'action__line': 4, b'word': b'c)', b'menu_template': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'action__pattern': b'^snippet\\s\\+c)$'}, {b'description': b'" vim: ${0:foldmethod=marker}', b'snip': b'" vim: ${0:foldmethod=marker}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'" vim: {modeline}', b'real_name': b'modeline', b'action__line': 152, b'word': b'modeline', b'menu_template': b'" vim: {modeline}', b'action__pattern': b'^snippet\\s\\+modeline$'}, {b'description': b"${1:s:V}.load('${2:#:module_name}')${0}", b'snip': b"${1:s:V}.load('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"s:V.load('...')", b'real_name': b'vital_load_without_call', b'action__line': 19, b'word': b'vital_load_without_call', b'menu_template': b"s:V.load('...')", b'action__pattern': b'^snippet\\s\\+vital_load_without_call$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'real_name': b'filename_upper_camel', b'action__line': 45, b'word': b'filename_upper_camel', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_upper_camel$'}, {b'description': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'snip': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundleLazy ''", b'real_name': b'NeoBundleLazy', b'action__line': 105, b'word': b'NeoBundleLazy', b'menu_template': b"NeoBundleLazy ''", b'action__pattern': b'^snippet\\s\\+NeoBundleLazy$'}, {b'description': b'let ${1:s:V} = vital#${2:#:plugin_name}#new()${0}', b'snip': b'let ${1:s:V} = vital#${2:#:plugin_name}#new()${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b'let s:V = vital#...#new()', b'real_name': b'vital_new', b'action__line': 5, b'word': b'vital_new', b'menu_template': b'let s:V = vital#...#new()', b'action__pattern': b'^snippet\\s\\+vital_new$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'afunction', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b"Plugin '${0}'", b'snip': b"Plugin '${0}'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'Vundle.vim Plugin definition', b'real_name': b'plug_Vundle_vim_Plugin_definition', b'action__line': 51, b'word': b'plug_Vundle_vim_Plugin_definition', b'menu_template': b'Vundle.vim Plugin definition', b'action__pattern': b'^snippet\\s\\+plug_Vundle_vim_Plugin_definition$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'real_name': b'basename', b'action__line': 40, b'word': b'bname', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'action__pattern': b'^snippet\\s\\+basename$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b'save_cpoptions', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b"${1:s:V}.import('${2:#:module_name}')${0}", b'snip': b"${1:s:V}.import('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"s:V.import('...')", b'real_name': b'vital_import_without_let', b'action__line': 10, b'word': b'vital_import_without_let', b'menu_template': b"s:V.import('...')", b'action__pattern': b'^snippet\\s\\+vital_import_without_let$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the "Software"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\tDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\tOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the "Software"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\tDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\tOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   Permission is hereby granted, free of charge, to any person obtaining  a copy of this software and associated documentation files (the "Software"),  to deal in the Software without restriction, including without limitation  the rights to use, copy, modify, merge, publish, distribute, sublicense,  and/or sell copies of the Software, and to permit persons to whom the  Software is furnished to do so, subject to the following conditions:   The above copyright notice and this permission notice shall be included  in all copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ${0}', b'real_name': b'MIT', b'action__line': 197, b'word': b'MIT', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   Permission is hereby granted, free of charge, to any person obtaining  a copy of this software and associated documentation files (the "Software"),  to deal in the Software without restriction, including without limitation  the rights to use, copy, modify, merge, publish, distribute, sublicense,  and/or sell copies of the Software, and to permit persons to whom the  Software is furnished to do so, subject to the following conditions:   The above copyright notice and this permission notice shall be included  in all copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ${0}', b'action__pattern': b'^snippet\\s\\+MIT$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'real_name': b'rpath', b'action__line': 36, b'word': b'rpath', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+rpath$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'real_name': b'basename', b'action__line': 40, b'word': b'basename', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'action__pattern': b'^snippet\\s\\+basename$'}, {b'description': b'As a special exception, if other files instantiate generics from\n\tthis unit, or you link this unit with other files to produce an\n\texecutable, this unit does not by itself cause the resulting\n\texecutable to be covered by the GNU General Public License.\n\tThis exception does not however invalidate any other reasons why the\n\texecutable file might be covered by the GNU Public License.\n\n\t${0}', b'snip': b'As a special exception, if other files instantiate generics from\n\tthis unit, or you link this unit with other files to produce an\n\texecutable, this unit does not by itself cause the resulting\n\texecutable to be covered by the GNU General Public License.\n\tThis exception does not however invalidate any other reasons why the\n\texecutable file might be covered by the GNU Public License.\n\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'linking exception', b'real_name': b'GMGPL_linking_exception', b'action__line': 103, b'word': b'GMGPL_linking_exception', b'menu_template': b'linking exception', b'action__pattern': b'^snippet\\s\\+GMGPL_linking_exception$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'real_name': b'filename_upper_camel', b'action__line': 45, b'word': b'fnameuc', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_upper_camel$'}, {b'description': b'echomsg string([${0:TARGET}])', b'snip': b'echomsg string([${0:TARGET}])', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'debug-echomsg', b'real_name': b'p', b'action__line': 224, b'word': b'p', b'menu_template': b'debug-echomsg', b'action__pattern': b'^snippet\\s\\+p$'}, {b'description': b'`strftime("%H:%M:%S")`${0}', b'snip': b'`strftime("%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%H:%M:%S")`${0}', b'real_name': b'time_colon', b'action__line': 17, b'word': b'dt', b'menu_template': b'`strftime("%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+time_colon$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the "THE BEER-WARE LICENSE" (Revision 42):\n\t$2 wrote this file. As long as you retain this notice you\n\tcan do whatever you want with this stuff. If we meet some day, and you think\n\tthis stuff is worth it, you can buy me a beer or coffee in return\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the "THE BEER-WARE LICENSE" (Revision 42):\n\t$2 wrote this file. As long as you retain this notice you\n\tcan do whatever you want with this stuff. If we meet some day, and you think\n\tthis stuff is worth it, you can buy me a beer or coffee in return\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the "THE BEER-WARE LICENSE" (Revision 42):  $2 wrote this file. As long as you retain this notice you  can do whatever you want with this stuff. If we meet some day, and you think  this stuff is worth it, you can buy me a beer or coffee in return  ${0}', b'real_name': b'BEERWARE', b'action__line': 235, b'word': b'BEERWARE', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the "THE BEER-WARE LICENSE" (Revision 42):  $2 wrote this file. As long as you retain this notice you  can do whatever you want with this stuff. If we meet some day, and you think  this stuff is worth it, you can buy me a beer or coffee in return  ${0}', b'action__pattern': b'^snippet\\s\\+BEERWARE$'}, {b'description': b'`strftime("%H:%M:%S")`${0}', b'snip': b'`strftime("%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%H:%M:%S")`${0}', b'real_name': b'time_colon', b'action__line': 17, b'word': b'time_colon', b'menu_template': b'`strftime("%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+time_colon$'}, {b'description': b'catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}', b'snip': b'catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'catch /pattern/', b'real_name': b'catch', b'action__line': 63, b'word': b'catch', b'menu_template': b'catch /pattern/', b'action__pattern': b'^snippet\\s\\+catch$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'real_name': b'path', b'action__line': 32, b'word': b'path', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+path$'}, {b'description': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'snip': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'func endfunc', b'real_name': b'function', b'action__line': 36, b'word': b'func', b'menu_template': b'func endfunc', b'action__pattern': b'^snippet\\s\\+function$'}, {b'description': b'lua << EOF\n${0}\nEOF', b'snip': b'lua << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'lua <<EOF | EOF', b'real_name': b'lua', b'action__line': 185, b'word': b'lua', b'menu_template': b'lua <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+lua$'}, {b'description': b'augroup ${1:AU_NAME}\n\t\t" this one is which you\'re most likely to use?\n\t\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\n\taugroup end', b'snip': b'augroup ${1:AU_NAME}\n\t\t" this one is which you\'re most likely to use?\n\t\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\n\taugroup end', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'augroup ... autocmd block', b'real_name': b'au_augroup_autocmd_block', b'action__line': 44, b'word': b'au_augroup_autocmd_block', b'menu_template': b'augroup ... autocmd block', b'action__pattern': b'^snippet\\s\\+au_augroup_autocmd_block$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'GPL2', b'action__line': 18, b'word': b'GPL2', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+GPL2$'}, {b'description': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'GPL3', b'action__line': 52, b'word': b'GPL3', b'menu_template': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+GPL3$'}, {b'description': b'`strftime("%H:%M")`${0}', b'snip': b'`strftime("%H:%M")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%H:%M")`${0}', b'real_name': b'time', b'action__line': 12, b'word': b'time', b'menu_template': b'`strftime("%H:%M")`${0}', b'action__pattern': b'^snippet\\s\\+time$'}, {b'description': b'for ${1} in ${2}\n\t\t${0:${VISUAL}}\n\tendfor', b'snip': b'for ${1} in ${2}\n\t\t${0:${VISUAL}}\n\tendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'for ... in loop', b'real_name': b'for_for_in_loop', b'action__line': 21, b'word': b'for_for_in_loop', b'menu_template': b'for ... in loop', b'action__pattern': b'^snippet\\s\\+for_for_in_loop$'}, {b'description': b'vital#${1:#:plugin_name}#new()${0}', b'snip': b'vital#${1:#:plugin_name}#new()${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b'vital#...#new()', b'real_name': b'vital_new_without_let', b'action__line': 1, b'word': b'vital_new_without_let', b'menu_template': b'vital#...#new()', b'action__pattern': b'^snippet\\s\\+vital_new_without_let$'}, {b'description': b'\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\t\t\t\t\tVersion 2, December 2004\n\n\tCopyright `strftime("%Y")` ${0:`g:snips_author`}\n\n\tEveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n\t\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t 0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\t${0}', b'snip': b'\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\t\t\t\t\tVersion 2, December 2004\n\n\tCopyright `strftime("%Y")` ${0:`g:snips_author`}\n\n\tEveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n\t\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t 0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b' DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  Version 2, December 2004   Copyright `strftime("%Y")` ${0:`g:snips_author`}   Everyone is permitted to copy and distribute verbatim or modified  copies of this license document, and changing it is allowed as long  as the name is changed.   DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION   0. You just DO WHAT THE FUCK YOU WANT TO.   ${0}', b'real_name': b'WTFPL', b'action__line': 244, b'word': b'WTFPL', b'menu_template': b' DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  Version 2, December 2004   Copyright `strftime("%Y")` ${0:`g:snips_author`}   Everyone is permitted to copy and distribute verbatim or modified  copies of this license document, and changing it is allowed as long  as the name is changed.   DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION   0. You just DO WHAT THE FUCK YOU WANT TO.   ${0}', b'action__pattern': b'^snippet\\s\\+WTFPL$'}, {b'description': b'python << EOF\n${0}\nEOF', b'snip': b'python << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python <<EOF | EOF', b'real_name': b'python', b'action__line': 169, b'word': b'python', b'menu_template': b'python <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python$'}, {b'description': b"fun! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\\zs.*\\ze.vim'),'[/\\\\]','#','g').'#' : ''`}${2:function_name}(${3})\n\t\t${0}\n\tendf", b'snip': b"fun! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\\zs.*\\ze.vim'),'[/\\\\]','#','g').'#' : ''`}${2:function_name}(${3})\n\t\t${0}\n\tendf", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'function', b'real_name': b'f_function', b'action__line': 11, b'word': b'f_function', b'menu_template': b'function', b'action__pattern': b'^snippet\\s\\+f_function$'}, {b'description': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'snip': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundle ''", b'real_name': b'NeoBundle', b'action__line': 100, b'word': b'neobundle', b'menu_template': b"NeoBundle ''", b'action__pattern': b'^snippet\\s\\+NeoBundle$'}, {b'description': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'snip': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'func endfunc', b'real_name': b'function', b'action__line': 36, b'word': b'function', b'menu_template': b'func endfunc', b'action__pattern': b'^snippet\\s\\+function$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'real_name': b'filename', b'action__line': 27, b'word': b'filename', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'action__pattern': b'^snippet\\s\\+filename$'}, {b'description': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'snip': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'real_name': b'lorem', b'action__line': 16, b'word': b'lorem', b'menu_template': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'action__pattern': b'^snippet\\s\\+lorem$'}, {b'description': b'python << EOF\n${0}\nEOF', b'snip': b'python << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python <<EOF | EOF', b'real_name': b'python', b'action__line': 169, b'word': b'py', b'menu_template': b'python <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python$'}, {b'description': b'if ${1}\n\t\t${2:${VISUAL}}\n\telse\n\t\t${0}\n\tendif', b'snip': b'if ${1}\n\t\t${2:${VISUAL}}\n\telse\n\t\t${0}\n\tendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'if ... else statement', b'real_name': b'ife_if_else_statement', b'action__line': 38, b'word': b'ife_if_else_statement', b'menu_template': b'if ... else statement', b'action__pattern': b'^snippet\\s\\+ife_if_else_statement$'}, {b'description': b'try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry', b'snip': b'try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try endtry', b'real_name': b'try', b'action__line': 44, b'word': b'try', b'menu_template': b'try endtry', b'action__pattern': b'^snippet\\s\\+try$'}, {b'description': b"if exists('${1:did_`vim_snippets#Filename()`}') || &cp${2: || version < 700}\n\t\tfinish\n\tendif\n\tlet $1 = 1${0}", b'snip': b"if exists('${1:did_`vim_snippets#Filename()`}') || &cp${2: || version < 700}\n\t\tfinish\n\tendif\n\tlet $1 = 1${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'script reload guard', b'real_name': b'guard_script_reload_guard', b'action__line': 6, b'word': b'guard_script_reload_guard', b'menu_template': b'script reload guard', b'action__pattern': b'^snippet\\s\\+guard_script_reload_guard$'}, {b'description': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'snip': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if !exists('b:undo_ftplugin')", b'real_name': b'undo_ftplugin', b'action__line': 156, b'word': b'undo_ftplugin', b'menu_template': b"if !exists('b:undo_ftplugin')", b'action__pattern': b'^snippet\\s\\+undo_ftplugin$'}, {b'description': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'snip': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundleLazy ''", b'real_name': b'NeoBundleLazy', b'action__line': 105, b'word': b'neobundlelazy', b'menu_template': b"NeoBundleLazy ''", b'action__pattern': b'^snippet\\s\\+NeoBundleLazy$'}, {b'description': b'for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor', b'snip': b'for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'for in endfor', b'real_name': b'for', b'action__line': 22, b'word': b'for', b'menu_template': b'for in endfor', b'action__pattern': b'^snippet\\s\\+for$'}, {b'description': b'for [${1},${2}] in items(${3})\n\t\t${0}\n\t\tunlet $1 $2\n\tendfor', b'snip': b'for [${1},${2}] in items(${3})\n\t\t${0}\n\t\tunlet $1 $2\n\tendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'for [key, value] in loop', b'real_name': b'forkv_for_key_value_in_loop', b'action__line': 25, b'word': b'forkv_for_key_value_in_loop', b'menu_template': b'for [key, value] in loop', b'action__pattern': b'^snippet\\s\\+forkv_for_key_value_in_loop$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date', b'action__line': 6, b'word': b'date', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date$'}, {b'description': b'while ${1}\n\t\t${0:${VISUAL}}\n\tendw', b'snip': b'while ${1}\n\t\t${0:${VISUAL}}\n\tendw', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'while loop', b'real_name': b'wh_while_loop', b'action__line': 30, b'word': b'wh_while_loop', b'menu_template': b'while loop', b'action__pattern': b'^snippet\\s\\+wh_while_loop$'}, {b'description': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'snip': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try ... finally ... endtry', b'real_name': b'tryfinally', b'action__line': 53, b'word': b'tryfinally', b'menu_template': b'try ... finally ... endtry', b'action__pattern': b'^snippet\\s\\+tryfinally$'}, {b'description': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'AGPL3', b'action__line': 86, b'word': b'AGPL3', b'menu_template': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+AGPL3$'}, {b'description': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'Last modified time', b'real_name': b'lastmod', b'action__line': 22, b'word': b'lastmod', b'menu_template': b'Last modified time', b'action__pattern': b'^snippet\\s\\+lastmod$'}, {b'description': b'echomsg string(${1:TARGET})${0}', b'snip': b'echomsg string(${1:TARGET})${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'echomsg string(${1: })${0}', b'real_name': b'echomsg', b'action__line': 68, b'word': b'log', b'menu_template': b'echomsg string(${1: })${0}', b'action__pattern': b'^snippet\\s\\+echomsg$'}, {b'description': b'python3 << EOF\n${0}\nEOF', b'snip': b'python3 << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python3 <<EOF | EOF', b'real_name': b'python3', b'action__line': 177, b'word': b'python3', b'menu_template': b'python3 <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python3$'}, {b'description': b"let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", b'snip': b"let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'neobundle hooks', b'real_name': b'bundle_hooks', b'action__line': 112, b'word': b'bundle_hooks', b'menu_template': b'neobundle hooks', b'action__pattern': b'^snippet\\s\\+bundle_hooks$'}, {b'description': b"let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", b'snip': b"let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use register save', b'real_name': b'save_register', b'action__line': 202, b'word': b'save_register', b'menu_template': b'use register save', b'action__pattern': b'^snippet\\s\\+save_register$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b's:save_cpo', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b'command! ${1:#:command_name} call ${2:#:func_name}', b'snip': b'command! ${1:#:command_name} call ${2:#:func_name}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'command call function', b'real_name': b'command', b'action__line': 73, b'word': b'command', b'menu_template': b'command call function', b'action__pattern': b'^snippet\\s\\+command$'}, {b'description': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'Last modified time', b'real_name': b'lastmod', b'action__line': 22, b'word': b'lmod', b'menu_template': b'Last modified time', b'action__pattern': b'^snippet\\s\\+lastmod$'}, {b'description': b'while ${1:#:condition}\n${0:TARGET}\nendwhile', b'snip': b'while ${1:#:condition}\n${0:TARGET}\nendwhile', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'while endwhile', b'real_name': b'while', b'action__line': 29, b'word': b'while', b'menu_template': b'while endwhile', b'action__pattern': b'^snippet\\s\\+while$'}, {b'description': b'if ${1:#:condition}\n${0:TARGET}\nendif', b'snip': b'if ${1:#:condition}\n${0:TARGET}\nendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'if endif', b'real_name': b'if', b'action__line': 1, b'word': b'if', b'menu_template': b'if endif', b'action__pattern': b'^snippet\\s\\+if$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'afunc', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b'`strftime("%d %b %Y")`${0}', b'snip': b'`strftime("%d %b %Y")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%d %b %Y")`${0}', b'real_name': b'date_english', b'action__line': 3, b'word': b'date_english', b'menu_template': b'`strftime("%d %b %Y")`${0}', b'action__pattern': b'^snippet\\s\\+date_english$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date_iso8601', b'action__line': 12, b'word': b'dd', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date_iso8601$'}, {b'description': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'snip': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if exists('g:loaded_{plugin-name}')", b'real_name': b'g:loaded', b'action__line': 140, b'word': b'loaded', b'menu_template': b"if exists('g:loaded_{plugin-name}')", b'action__pattern': b'^snippet\\s\\+g:loaded$'}, {b'description': b'`strftime("%B %d, %Y")`${0}', b'snip': b'`strftime("%B %d, %Y")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%B %d, %Y")`${0}', b'real_name': b'ddate', b'action__line': 8, b'word': b'ddate', b'menu_template': b'`strftime("%B %d, %Y")`${0}', b'action__pattern': b'^snippet\\s\\+ddate$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\tThe views and conclusions contained in the software and documentation\n\tare those of the authors and should not be interpreted as representing\n\tofficial policies, either expressed or implied, of $2.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\tThe views and conclusions contained in the software and documentation\n\tare those of the authors and should not be interpreted as representing\n\tofficial policies, either expressed or implied, of $2.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   The views and conclusions contained in the software and documentation  are those of the authors and should not be interpreted as representing  official policies, either expressed or implied, of $2.  ${0}', b'real_name': b'BSD2', b'action__line': 112, b'word': b'BSD2', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   The views and conclusions contained in the software and documentation  are those of the authors and should not be interpreted as representing  official policies, either expressed or implied, of $2.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD2$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. Neither the name of the ${3:organization} nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. Neither the name of the ${3:organization} nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. Neither the name of the ${3:organization} nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'real_name': b'BSD3', b'action__line': 140, b'word': b'BSD3', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. Neither the name of the ${3:organization} nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD3$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. All advertising materials mentioning features or use of this software\n\tmust display the following acknowledgement:\n\tThis product includes software developed by the ${3:organization}.\n\t4. Neither the name of the $3 nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. All advertising materials mentioning features or use of this software\n\tmust display the following acknowledgement:\n\tThis product includes software developed by the ${3:organization}.\n\t4. Neither the name of the $3 nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. All advertising materials mentioning features or use of this software  must display the following acknowledgement:  This product includes software developed by the ${3:organization}.  4. Neither the name of the $3 nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'real_name': b'BSD4', b'action__line': 167, b'word': b'BSD4', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. All advertising materials mentioning features or use of this software  must display the following acknowledgement:  This product includes software developed by the ${3:organization}.  4. Neither the name of the $3 nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD4$'}, {b'description': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'snip': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if exists('g:loaded_{plugin-name}')", b'real_name': b'g:loaded', b'action__line': 140, b'word': b'g:loaded', b'menu_template': b"if exists('g:loaded_{plugin-name}')", b'action__pattern': b'^snippet\\s\\+g:loaded$'}, {b'description': b'python3 << EOF\n${0}\nEOF', b'snip': b'python3 << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python3 <<EOF | EOF', b'real_name': b'python3', b'action__line': 177, b'word': b'py3', b'menu_template': b'python3 <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python3$'}, {b'description': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'snip': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'real_name': b'datetime', b'action__line': 14, b'word': b'datetime', b'menu_template': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'action__pattern': b'^snippet\\s\\+datetime$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'real_name': b'filename_lower_camel', b'action__line': 50, b'word': b'fnamelc', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_lower_camel$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}\n\n\tPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}\n\n\tPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}   Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ${0}', b'real_name': b'ISC', b'action__line': 281, b'word': b'ISC', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}   Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ${0}', b'action__pattern': b'^snippet\\s\\+ISC$'}, {b'description': b'if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif', b'snip': b'if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'if else endif', b'real_name': b'ifelse', b'action__line': 13, b'word': b'ifelse', b'menu_template': b'if else endif', b'action__pattern': b'^snippet\\s\\+ifelse$'}, {b'description': b'redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END', b'snip': b'redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'redir => var', b'real_name': b'redir', b'action__line': 93, b'word': b'redir', b'menu_template': b'redir => var', b'action__pattern': b'^snippet\\s\\+redir$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program  is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program  is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.', b'real_name': b'AGPL', b'action__line': 265, b'word': b'AGPL', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.', b'action__pattern': b'^snippet\\s\\+AGPL$'}, {b'description': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'snip': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try ... finally ... endtry', b'real_name': b'tryfinally', b'action__line': 53, b'word': b'tryf', b'menu_template': b'try ... finally ... endtry', b'action__pattern': b'^snippet\\s\\+tryfinally$'}, {b'description': b"call ${1:s:V}.load('${2:#:module_name}')${0}", b'snip': b"call ${1:s:V}.load('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"call s:V.load('...')", b'real_name': b'vital_load', b'action__line': 23, b'word': b'vital_load', b'menu_template': b"call s:V.load('...')", b'action__pattern': b'^snippet\\s\\+vital_load$'}, {b'description': b'elseif ${1:#:condition}\n${0:TARGET}', b'snip': b'elseif ${1:#:condition}\n${0:TARGET}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'elseif ${1:#:condition} ${0: }', b'real_name': b'elseif', b'action__line': 8, b'word': b'elseif', b'menu_template': b'elseif ${1:#:condition} ${0: }', b'action__pattern': b'^snippet\\s\\+elseif$'}, {b'description': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'snip': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundle ''", b'real_name': b'NeoBundle', b'action__line': 100, b'word': b'NeoBundle', b'menu_template': b"NeoBundle ''", b'action__pattern': b'^snippet\\s\\+NeoBundle$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'datetime_iso8601', b'action__line': 7, b'word': b'datetime_iso8601', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+datetime_iso8601$'}, {b'description': b'augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END', b'snip': b'augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'augroup with autocmds', b'real_name': b'augroup', b'action__line': 85, b'word': b'augroup', b'menu_template': b'augroup with autocmds', b'action__pattern': b'^snippet\\s\\+augroup$'}, {b'description': b"let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", b'snip': b"let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use pos save', b'real_name': b'save_pos', b'action__line': 192, b'word': b'save_pos', b'menu_template': b'use pos save', b'action__pattern': b'^snippet\\s\\+save_pos$'}, {b'description': b"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", b'snip': b"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'customlist complete function', b'real_name': b'customlist', b'action__line': 78, b'word': b'customlist', b'menu_template': b'customlist complete function', b'action__pattern': b'^snippet\\s\\+customlist$'}, {b'description': b'try\n\t\t${1:${VISUAL}}\n\tcatch ${2}\n\t\t${0}\n\tendtry', b'snip': b'try\n\t\t${1:${VISUAL}}\n\tcatch ${2}\n\t\t${0}\n\tendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'try ... catch statement', b'real_name': b't_try_catch_statement', b'action__line': 15, b'word': b't_try_catch_statement', b'menu_template': b'try ... catch statement', b'action__pattern': b'^snippet\\s\\+t_try_catch_statement$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.  ${0}', b'real_name': b'APACHE', b'action__line': 219, b'word': b'APACHE', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.  ${0}', b'action__pattern': b'^snippet\\s\\+APACHE$'}, {b'description': b"has('patch-${1}')${0}", b'snip': b"has('patch-${1}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'vim-version-check-new', b'real_name': b'version_new', b'action__line': 233, b'word': b'version_new', b'menu_template': b'vim-version-check-new', b'action__pattern': b'^snippet\\s\\+version_new$'}]]
2017-08-08 04:25:26,845 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [{b'description': b"v:version > ${1} || (v:version == $1 && has('patch${2}'))${0}", b'snip': b"v:version > ${1} || (v:version == $1 && has('patch${2}'))${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'vim-version-check', b'real_name': b'version', b'action__line': 229, b'word': b'version', b'menu_template': b'vim-version-check', b'action__pattern': b'^snippet\\s\\+version$'}, {b'description': b"let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')${0}", b'snip': b"let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"let s:M = s:V.import('...')", b'real_name': b'vital_import', b'action__line': 14, b'word': b'vital_import', b'menu_template': b"let s:M = s:V.import('...')", b'action__pattern': b'^snippet\\s\\+vital_import$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'autoload', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b'let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry', b'snip': b'let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use option save', b'real_name': b'save_option', b'action__line': 213, b'word': b'save_option', b'menu_template': b'use option save', b'action__pattern': b'^snippet\\s\\+save_option$'}, {b'description': b'echomsg string(${1:TARGET})${0}', b'snip': b'echomsg string(${1:TARGET})${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'echomsg string(${1: })${0}', b'real_name': b'echomsg', b'action__line': 68, b'word': b'echomsg', b'menu_template': b'echomsg string(${1: })${0}', b'action__pattern': b'^snippet\\s\\+echomsg$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b'cpoptions', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 2.1 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 2.1 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 2.1 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'LGPL2', b'action__line': 35, b'word': b'LGPL2', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 2.1 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+LGPL2$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 3 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'LGPL3', b'action__line': 69, b'word': b'LGPL3', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 3 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+LGPL3$'}, {b'description': b"Plugin '${0}'", b'snip': b"Plugin '${0}'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'Vundle.vim Plugin definition', b'real_name': b'bun_Vundle_vim_Plugin_definition', b'action__line': 49, b'word': b'bun_Vundle_vim_Plugin_definition', b'menu_template': b'Vundle.vim Plugin definition', b'action__pattern': b'^snippet\\s\\+bun_Vundle_vim_Plugin_definition$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'datetime_iso8601', b'action__line': 7, b'word': b'df', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+datetime_iso8601$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'real_name': b'filename', b'action__line': 27, b'word': b'fname', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'action__pattern': b'^snippet\\s\\+filename$'}, {b'description': b'if ${1}\n\t\t${0:${VISUAL}}\n\tendif', b'snip': b'if ${1}\n\t\t${0:${VISUAL}}\n\tendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'if statement', b'real_name': b'if_if_statement', b'action__line': 34, b'word': b'if_if_statement', b'menu_template': b'if statement', b'action__pattern': b'^snippet\\s\\+if_if_statement$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'diso', b'action__line': 10, b'word': b'diso', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+diso$'}, {b'description': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'snip': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if !exists('b:undo_ftplugin')", b'real_name': b'undo_ftplugin', b'action__line': 156, b'word': b'b:undo_ftplugin', b'menu_template': b"if !exists('b:undo_ftplugin')", b'action__pattern': b'^snippet\\s\\+undo_ftplugin$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date_iso8601', b'action__line': 12, b'word': b'date_iso8601', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date_iso8601$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'real_name': b'filename_lower_camel', b'action__line': 50, b'word': b'filename_lower_camel', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_lower_camel$'}, {b'description': b'" File: ${1:`expand(\'%:t\')`}\n\t" Author: ${2:`g:snips_author`}\n\t" Description: ${3}\n\t${0:" Last Modified: `strftime("%B %d, %Y")`}', b'snip': b'" File: ${1:`expand(\'%:t\')`}\n\t" Author: ${2:`g:snips_author`}\n\t" Description: ${3}\n\t${0:" Last Modified: `strftime("%B %d, %Y")`}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'standard Vim script file header', b'real_name': b'header_standard_Vim_script_file_header', b'action__line': 1, b'word': b'header_standard_Vim_script_file_header', b'menu_template': b'standard Vim script file header', b'action__pattern': b'^snippet\\s\\+header_standard_Vim_script_file_header$'}, {b'description': b'This Source Code Form is subject to the terms of the Mozilla Public\n\tLicense, v. 2.0. If a copy of the MPL was not distributed with this\n\tfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t${0}', b'snip': b'This Source Code Form is subject to the terms of the Mozilla Public\n\tLicense, v. 2.0. If a copy of the MPL was not distributed with this\n\tfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'This Source Code Form is subject to the terms of the Mozilla Public  License, v. 2.0. If a copy of the MPL was not distributed with this  file, You can obtain one at http://mozilla.org/MPL/2.0/.  ${0}', b'real_name': b'MPL2', b'action__line': 260, b'word': b'MPL2', b'menu_template': b'This Source Code Form is subject to the terms of the Mozilla Public  License, v. 2.0. If a copy of the MPL was not distributed with this  file, You can obtain one at http://mozilla.org/MPL/2.0/.  ${0}', b'action__pattern': b'^snippet\\s\\+MPL2$'}, {b'description': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'snip': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'real_name': b'c)', b'action__line': 4, b'word': b'c)', b'menu_template': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'action__pattern': b'^snippet\\s\\+c)$'}, {b'description': b'" vim: ${0:foldmethod=marker}', b'snip': b'" vim: ${0:foldmethod=marker}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'" vim: {modeline}', b'real_name': b'modeline', b'action__line': 152, b'word': b'modeline', b'menu_template': b'" vim: {modeline}', b'action__pattern': b'^snippet\\s\\+modeline$'}, {b'description': b"${1:s:V}.load('${2:#:module_name}')${0}", b'snip': b"${1:s:V}.load('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"s:V.load('...')", b'real_name': b'vital_load_without_call', b'action__line': 19, b'word': b'vital_load_without_call', b'menu_template': b"s:V.load('...')", b'action__pattern': b'^snippet\\s\\+vital_load_without_call$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'real_name': b'filename_upper_camel', b'action__line': 45, b'word': b'filename_upper_camel', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_upper_camel$'}, {b'description': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'snip': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundleLazy ''", b'real_name': b'NeoBundleLazy', b'action__line': 105, b'word': b'NeoBundleLazy', b'menu_template': b"NeoBundleLazy ''", b'action__pattern': b'^snippet\\s\\+NeoBundleLazy$'}, {b'description': b'let ${1:s:V} = vital#${2:#:plugin_name}#new()${0}', b'snip': b'let ${1:s:V} = vital#${2:#:plugin_name}#new()${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b'let s:V = vital#...#new()', b'real_name': b'vital_new', b'action__line': 5, b'word': b'vital_new', b'menu_template': b'let s:V = vital#...#new()', b'action__pattern': b'^snippet\\s\\+vital_new$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'afunction', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b"Plugin '${0}'", b'snip': b"Plugin '${0}'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'Vundle.vim Plugin definition', b'real_name': b'plug_Vundle_vim_Plugin_definition', b'action__line': 51, b'word': b'plug_Vundle_vim_Plugin_definition', b'menu_template': b'Vundle.vim Plugin definition', b'action__pattern': b'^snippet\\s\\+plug_Vundle_vim_Plugin_definition$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'real_name': b'basename', b'action__line': 40, b'word': b'bname', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'action__pattern': b'^snippet\\s\\+basename$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b'save_cpoptions', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b"${1:s:V}.import('${2:#:module_name}')${0}", b'snip': b"${1:s:V}.import('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"s:V.import('...')", b'real_name': b'vital_import_without_let', b'action__line': 10, b'word': b'vital_import_without_let', b'menu_template': b"s:V.import('...')", b'action__pattern': b'^snippet\\s\\+vital_import_without_let$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the "Software"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\tDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\tOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the "Software"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\tDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\tOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   Permission is hereby granted, free of charge, to any person obtaining  a copy of this software and associated documentation files (the "Software"),  to deal in the Software without restriction, including without limitation  the rights to use, copy, modify, merge, publish, distribute, sublicense,  and/or sell copies of the Software, and to permit persons to whom the  Software is furnished to do so, subject to the following conditions:   The above copyright notice and this permission notice shall be included  in all copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ${0}', b'real_name': b'MIT', b'action__line': 197, b'word': b'MIT', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   Permission is hereby granted, free of charge, to any person obtaining  a copy of this software and associated documentation files (the "Software"),  to deal in the Software without restriction, including without limitation  the rights to use, copy, modify, merge, publish, distribute, sublicense,  and/or sell copies of the Software, and to permit persons to whom the  Software is furnished to do so, subject to the following conditions:   The above copyright notice and this permission notice shall be included  in all copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ${0}', b'action__pattern': b'^snippet\\s\\+MIT$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'real_name': b'rpath', b'action__line': 36, b'word': b'rpath', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+rpath$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'real_name': b'basename', b'action__line': 40, b'word': b'basename', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'action__pattern': b'^snippet\\s\\+basename$'}, {b'description': b'As a special exception, if other files instantiate generics from\n\tthis unit, or you link this unit with other files to produce an\n\texecutable, this unit does not by itself cause the resulting\n\texecutable to be covered by the GNU General Public License.\n\tThis exception does not however invalidate any other reasons why the\n\texecutable file might be covered by the GNU Public License.\n\n\t${0}', b'snip': b'As a special exception, if other files instantiate generics from\n\tthis unit, or you link this unit with other files to produce an\n\texecutable, this unit does not by itself cause the resulting\n\texecutable to be covered by the GNU General Public License.\n\tThis exception does not however invalidate any other reasons why the\n\texecutable file might be covered by the GNU Public License.\n\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'linking exception', b'real_name': b'GMGPL_linking_exception', b'action__line': 103, b'word': b'GMGPL_linking_exception', b'menu_template': b'linking exception', b'action__pattern': b'^snippet\\s\\+GMGPL_linking_exception$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'real_name': b'filename_upper_camel', b'action__line': 45, b'word': b'fnameuc', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_upper_camel$'}, {b'description': b'echomsg string([${0:TARGET}])', b'snip': b'echomsg string([${0:TARGET}])', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'debug-echomsg', b'real_name': b'p', b'action__line': 224, b'word': b'p', b'menu_template': b'debug-echomsg', b'action__pattern': b'^snippet\\s\\+p$'}, {b'description': b'`strftime("%H:%M:%S")`${0}', b'snip': b'`strftime("%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%H:%M:%S")`${0}', b'real_name': b'time_colon', b'action__line': 17, b'word': b'dt', b'menu_template': b'`strftime("%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+time_colon$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the "THE BEER-WARE LICENSE" (Revision 42):\n\t$2 wrote this file. As long as you retain this notice you\n\tcan do whatever you want with this stuff. If we meet some day, and you think\n\tthis stuff is worth it, you can buy me a beer or coffee in return\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the "THE BEER-WARE LICENSE" (Revision 42):\n\t$2 wrote this file. As long as you retain this notice you\n\tcan do whatever you want with this stuff. If we meet some day, and you think\n\tthis stuff is worth it, you can buy me a beer or coffee in return\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the "THE BEER-WARE LICENSE" (Revision 42):  $2 wrote this file. As long as you retain this notice you  can do whatever you want with this stuff. If we meet some day, and you think  this stuff is worth it, you can buy me a beer or coffee in return  ${0}', b'real_name': b'BEERWARE', b'action__line': 235, b'word': b'BEERWARE', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the "THE BEER-WARE LICENSE" (Revision 42):  $2 wrote this file. As long as you retain this notice you  can do whatever you want with this stuff. If we meet some day, and you think  this stuff is worth it, you can buy me a beer or coffee in return  ${0}', b'action__pattern': b'^snippet\\s\\+BEERWARE$'}, {b'description': b'`strftime("%H:%M:%S")`${0}', b'snip': b'`strftime("%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%H:%M:%S")`${0}', b'real_name': b'time_colon', b'action__line': 17, b'word': b'time_colon', b'menu_template': b'`strftime("%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+time_colon$'}, {b'description': b'catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}', b'snip': b'catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'catch /pattern/', b'real_name': b'catch', b'action__line': 63, b'word': b'catch', b'menu_template': b'catch /pattern/', b'action__pattern': b'^snippet\\s\\+catch$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'real_name': b'path', b'action__line': 32, b'word': b'path', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+path$'}, {b'description': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'snip': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'func endfunc', b'real_name': b'function', b'action__line': 36, b'word': b'func', b'menu_template': b'func endfunc', b'action__pattern': b'^snippet\\s\\+function$'}, {b'description': b'lua << EOF\n${0}\nEOF', b'snip': b'lua << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'lua <<EOF | EOF', b'real_name': b'lua', b'action__line': 185, b'word': b'lua', b'menu_template': b'lua <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+lua$'}, {b'description': b'augroup ${1:AU_NAME}\n\t\t" this one is which you\'re most likely to use?\n\t\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\n\taugroup end', b'snip': b'augroup ${1:AU_NAME}\n\t\t" this one is which you\'re most likely to use?\n\t\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\n\taugroup end', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'augroup ... autocmd block', b'real_name': b'au_augroup_autocmd_block', b'action__line': 44, b'word': b'au_augroup_autocmd_block', b'menu_template': b'augroup ... autocmd block', b'action__pattern': b'^snippet\\s\\+au_augroup_autocmd_block$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'GPL2', b'action__line': 18, b'word': b'GPL2', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+GPL2$'}, {b'description': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'GPL3', b'action__line': 52, b'word': b'GPL3', b'menu_template': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+GPL3$'}, {b'description': b'`strftime("%H:%M")`${0}', b'snip': b'`strftime("%H:%M")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%H:%M")`${0}', b'real_name': b'time', b'action__line': 12, b'word': b'time', b'menu_template': b'`strftime("%H:%M")`${0}', b'action__pattern': b'^snippet\\s\\+time$'}, {b'description': b'for ${1} in ${2}\n\t\t${0:${VISUAL}}\n\tendfor', b'snip': b'for ${1} in ${2}\n\t\t${0:${VISUAL}}\n\tendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'for ... in loop', b'real_name': b'for_for_in_loop', b'action__line': 21, b'word': b'for_for_in_loop', b'menu_template': b'for ... in loop', b'action__pattern': b'^snippet\\s\\+for_for_in_loop$'}, {b'description': b'vital#${1:#:plugin_name}#new()${0}', b'snip': b'vital#${1:#:plugin_name}#new()${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b'vital#...#new()', b'real_name': b'vital_new_without_let', b'action__line': 1, b'word': b'vital_new_without_let', b'menu_template': b'vital#...#new()', b'action__pattern': b'^snippet\\s\\+vital_new_without_let$'}, {b'description': b'\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\t\t\t\t\tVersion 2, December 2004\n\n\tCopyright `strftime("%Y")` ${0:`g:snips_author`}\n\n\tEveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n\t\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t 0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\t${0}', b'snip': b'\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\t\t\t\t\tVersion 2, December 2004\n\n\tCopyright `strftime("%Y")` ${0:`g:snips_author`}\n\n\tEveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n\t\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t 0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b' DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  Version 2, December 2004   Copyright `strftime("%Y")` ${0:`g:snips_author`}   Everyone is permitted to copy and distribute verbatim or modified  copies of this license document, and changing it is allowed as long  as the name is changed.   DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION   0. You just DO WHAT THE FUCK YOU WANT TO.   ${0}', b'real_name': b'WTFPL', b'action__line': 244, b'word': b'WTFPL', b'menu_template': b' DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  Version 2, December 2004   Copyright `strftime("%Y")` ${0:`g:snips_author`}   Everyone is permitted to copy and distribute verbatim or modified  copies of this license document, and changing it is allowed as long  as the name is changed.   DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION   0. You just DO WHAT THE FUCK YOU WANT TO.   ${0}', b'action__pattern': b'^snippet\\s\\+WTFPL$'}, {b'description': b'python << EOF\n${0}\nEOF', b'snip': b'python << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python <<EOF | EOF', b'real_name': b'python', b'action__line': 169, b'word': b'python', b'menu_template': b'python <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python$'}, {b'description': b"fun! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\\zs.*\\ze.vim'),'[/\\\\]','#','g').'#' : ''`}${2:function_name}(${3})\n\t\t${0}\n\tendf", b'snip': b"fun! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\\zs.*\\ze.vim'),'[/\\\\]','#','g').'#' : ''`}${2:function_name}(${3})\n\t\t${0}\n\tendf", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'function', b'real_name': b'f_function', b'action__line': 11, b'word': b'f_function', b'menu_template': b'function', b'action__pattern': b'^snippet\\s\\+f_function$'}, {b'description': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'snip': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundle ''", b'real_name': b'NeoBundle', b'action__line': 100, b'word': b'neobundle', b'menu_template': b"NeoBundle ''", b'action__pattern': b'^snippet\\s\\+NeoBundle$'}, {b'description': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'snip': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'func endfunc', b'real_name': b'function', b'action__line': 36, b'word': b'function', b'menu_template': b'func endfunc', b'action__pattern': b'^snippet\\s\\+function$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'real_name': b'filename', b'action__line': 27, b'word': b'filename', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'action__pattern': b'^snippet\\s\\+filename$'}, {b'description': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'snip': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'real_name': b'lorem', b'action__line': 16, b'word': b'lorem', b'menu_template': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'action__pattern': b'^snippet\\s\\+lorem$'}, {b'description': b'python << EOF\n${0}\nEOF', b'snip': b'python << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python <<EOF | EOF', b'real_name': b'python', b'action__line': 169, b'word': b'py', b'menu_template': b'python <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python$'}, {b'description': b'if ${1}\n\t\t${2:${VISUAL}}\n\telse\n\t\t${0}\n\tendif', b'snip': b'if ${1}\n\t\t${2:${VISUAL}}\n\telse\n\t\t${0}\n\tendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'if ... else statement', b'real_name': b'ife_if_else_statement', b'action__line': 38, b'word': b'ife_if_else_statement', b'menu_template': b'if ... else statement', b'action__pattern': b'^snippet\\s\\+ife_if_else_statement$'}, {b'description': b'try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry', b'snip': b'try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try endtry', b'real_name': b'try', b'action__line': 44, b'word': b'try', b'menu_template': b'try endtry', b'action__pattern': b'^snippet\\s\\+try$'}, {b'description': b"if exists('${1:did_`vim_snippets#Filename()`}') || &cp${2: || version < 700}\n\t\tfinish\n\tendif\n\tlet $1 = 1${0}", b'snip': b"if exists('${1:did_`vim_snippets#Filename()`}') || &cp${2: || version < 700}\n\t\tfinish\n\tendif\n\tlet $1 = 1${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'script reload guard', b'real_name': b'guard_script_reload_guard', b'action__line': 6, b'word': b'guard_script_reload_guard', b'menu_template': b'script reload guard', b'action__pattern': b'^snippet\\s\\+guard_script_reload_guard$'}, {b'description': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'snip': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if !exists('b:undo_ftplugin')", b'real_name': b'undo_ftplugin', b'action__line': 156, b'word': b'undo_ftplugin', b'menu_template': b"if !exists('b:undo_ftplugin')", b'action__pattern': b'^snippet\\s\\+undo_ftplugin$'}, {b'description': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'snip': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundleLazy ''", b'real_name': b'NeoBundleLazy', b'action__line': 105, b'word': b'neobundlelazy', b'menu_template': b"NeoBundleLazy ''", b'action__pattern': b'^snippet\\s\\+NeoBundleLazy$'}, {b'description': b'for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor', b'snip': b'for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'for in endfor', b'real_name': b'for', b'action__line': 22, b'word': b'for', b'menu_template': b'for in endfor', b'action__pattern': b'^snippet\\s\\+for$'}, {b'description': b'for [${1},${2}] in items(${3})\n\t\t${0}\n\t\tunlet $1 $2\n\tendfor', b'snip': b'for [${1},${2}] in items(${3})\n\t\t${0}\n\t\tunlet $1 $2\n\tendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'for [key, value] in loop', b'real_name': b'forkv_for_key_value_in_loop', b'action__line': 25, b'word': b'forkv_for_key_value_in_loop', b'menu_template': b'for [key, value] in loop', b'action__pattern': b'^snippet\\s\\+forkv_for_key_value_in_loop$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date', b'action__line': 6, b'word': b'date', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date$'}, {b'description': b'while ${1}\n\t\t${0:${VISUAL}}\n\tendw', b'snip': b'while ${1}\n\t\t${0:${VISUAL}}\n\tendw', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'while loop', b'real_name': b'wh_while_loop', b'action__line': 30, b'word': b'wh_while_loop', b'menu_template': b'while loop', b'action__pattern': b'^snippet\\s\\+wh_while_loop$'}, {b'description': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'snip': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try ... finally ... endtry', b'real_name': b'tryfinally', b'action__line': 53, b'word': b'tryfinally', b'menu_template': b'try ... finally ... endtry', b'action__pattern': b'^snippet\\s\\+tryfinally$'}, {b'description': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'AGPL3', b'action__line': 86, b'word': b'AGPL3', b'menu_template': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+AGPL3$'}, {b'description': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'Last modified time', b'real_name': b'lastmod', b'action__line': 22, b'word': b'lastmod', b'menu_template': b'Last modified time', b'action__pattern': b'^snippet\\s\\+lastmod$'}, {b'description': b'echomsg string(${1:TARGET})${0}', b'snip': b'echomsg string(${1:TARGET})${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'echomsg string(${1: })${0}', b'real_name': b'echomsg', b'action__line': 68, b'word': b'log', b'menu_template': b'echomsg string(${1: })${0}', b'action__pattern': b'^snippet\\s\\+echomsg$'}, {b'description': b'python3 << EOF\n${0}\nEOF', b'snip': b'python3 << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python3 <<EOF | EOF', b'real_name': b'python3', b'action__line': 177, b'word': b'python3', b'menu_template': b'python3 <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python3$'}, {b'description': b"let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", b'snip': b"let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'neobundle hooks', b'real_name': b'bundle_hooks', b'action__line': 112, b'word': b'bundle_hooks', b'menu_template': b'neobundle hooks', b'action__pattern': b'^snippet\\s\\+bundle_hooks$'}, {b'description': b"let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", b'snip': b"let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use register save', b'real_name': b'save_register', b'action__line': 202, b'word': b'save_register', b'menu_template': b'use register save', b'action__pattern': b'^snippet\\s\\+save_register$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b's:save_cpo', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b'command! ${1:#:command_name} call ${2:#:func_name}', b'snip': b'command! ${1:#:command_name} call ${2:#:func_name}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'command call function', b'real_name': b'command', b'action__line': 73, b'word': b'command', b'menu_template': b'command call function', b'action__pattern': b'^snippet\\s\\+command$'}, {b'description': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'Last modified time', b'real_name': b'lastmod', b'action__line': 22, b'word': b'lmod', b'menu_template': b'Last modified time', b'action__pattern': b'^snippet\\s\\+lastmod$'}, {b'description': b'while ${1:#:condition}\n${0:TARGET}\nendwhile', b'snip': b'while ${1:#:condition}\n${0:TARGET}\nendwhile', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'while endwhile', b'real_name': b'while', b'action__line': 29, b'word': b'while', b'menu_template': b'while endwhile', b'action__pattern': b'^snippet\\s\\+while$'}, {b'description': b'if ${1:#:condition}\n${0:TARGET}\nendif', b'snip': b'if ${1:#:condition}\n${0:TARGET}\nendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'if endif', b'real_name': b'if', b'action__line': 1, b'word': b'if', b'menu_template': b'if endif', b'action__pattern': b'^snippet\\s\\+if$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'afunc', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b'`strftime("%d %b %Y")`${0}', b'snip': b'`strftime("%d %b %Y")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%d %b %Y")`${0}', b'real_name': b'date_english', b'action__line': 3, b'word': b'date_english', b'menu_template': b'`strftime("%d %b %Y")`${0}', b'action__pattern': b'^snippet\\s\\+date_english$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date_iso8601', b'action__line': 12, b'word': b'dd', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date_iso8601$'}, {b'description': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'snip': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if exists('g:loaded_{plugin-name}')", b'real_name': b'g:loaded', b'action__line': 140, b'word': b'loaded', b'menu_template': b"if exists('g:loaded_{plugin-name}')", b'action__pattern': b'^snippet\\s\\+g:loaded$'}, {b'description': b'`strftime("%B %d, %Y")`${0}', b'snip': b'`strftime("%B %d, %Y")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%B %d, %Y")`${0}', b'real_name': b'ddate', b'action__line': 8, b'word': b'ddate', b'menu_template': b'`strftime("%B %d, %Y")`${0}', b'action__pattern': b'^snippet\\s\\+ddate$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\tThe views and conclusions contained in the software and documentation\n\tare those of the authors and should not be interpreted as representing\n\tofficial policies, either expressed or implied, of $2.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\tThe views and conclusions contained in the software and documentation\n\tare those of the authors and should not be interpreted as representing\n\tofficial policies, either expressed or implied, of $2.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   The views and conclusions contained in the software and documentation  are those of the authors and should not be interpreted as representing  official policies, either expressed or implied, of $2.  ${0}', b'real_name': b'BSD2', b'action__line': 112, b'word': b'BSD2', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   The views and conclusions contained in the software and documentation  are those of the authors and should not be interpreted as representing  official policies, either expressed or implied, of $2.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD2$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. Neither the name of the ${3:organization} nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. Neither the name of the ${3:organization} nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. Neither the name of the ${3:organization} nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'real_name': b'BSD3', b'action__line': 140, b'word': b'BSD3', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. Neither the name of the ${3:organization} nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD3$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. All advertising materials mentioning features or use of this software\n\tmust display the following acknowledgement:\n\tThis product includes software developed by the ${3:organization}.\n\t4. Neither the name of the $3 nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. All advertising materials mentioning features or use of this software\n\tmust display the following acknowledgement:\n\tThis product includes software developed by the ${3:organization}.\n\t4. Neither the name of the $3 nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. All advertising materials mentioning features or use of this software  must display the following acknowledgement:  This product includes software developed by the ${3:organization}.  4. Neither the name of the $3 nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'real_name': b'BSD4', b'action__line': 167, b'word': b'BSD4', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. All advertising materials mentioning features or use of this software  must display the following acknowledgement:  This product includes software developed by the ${3:organization}.  4. Neither the name of the $3 nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD4$'}, {b'description': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'snip': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if exists('g:loaded_{plugin-name}')", b'real_name': b'g:loaded', b'action__line': 140, b'word': b'g:loaded', b'menu_template': b"if exists('g:loaded_{plugin-name}')", b'action__pattern': b'^snippet\\s\\+g:loaded$'}, {b'description': b'python3 << EOF\n${0}\nEOF', b'snip': b'python3 << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python3 <<EOF | EOF', b'real_name': b'python3', b'action__line': 177, b'word': b'py3', b'menu_template': b'python3 <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python3$'}, {b'description': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'snip': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'real_name': b'datetime', b'action__line': 14, b'word': b'datetime', b'menu_template': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'action__pattern': b'^snippet\\s\\+datetime$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'real_name': b'filename_lower_camel', b'action__line': 50, b'word': b'fnamelc', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_lower_camel$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}\n\n\tPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}\n\n\tPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}   Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ${0}', b'real_name': b'ISC', b'action__line': 281, b'word': b'ISC', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}   Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ${0}', b'action__pattern': b'^snippet\\s\\+ISC$'}, {b'description': b'if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif', b'snip': b'if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'if else endif', b'real_name': b'ifelse', b'action__line': 13, b'word': b'ifelse', b'menu_template': b'if else endif', b'action__pattern': b'^snippet\\s\\+ifelse$'}, {b'description': b'redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END', b'snip': b'redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'redir => var', b'real_name': b'redir', b'action__line': 93, b'word': b'redir', b'menu_template': b'redir => var', b'action__pattern': b'^snippet\\s\\+redir$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program  is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program  is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.', b'real_name': b'AGPL', b'action__line': 265, b'word': b'AGPL', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.', b'action__pattern': b'^snippet\\s\\+AGPL$'}, {b'description': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'snip': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try ... finally ... endtry', b'real_name': b'tryfinally', b'action__line': 53, b'word': b'tryf', b'menu_template': b'try ... finally ... endtry', b'action__pattern': b'^snippet\\s\\+tryfinally$'}, {b'description': b"call ${1:s:V}.load('${2:#:module_name}')${0}", b'snip': b"call ${1:s:V}.load('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"call s:V.load('...')", b'real_name': b'vital_load', b'action__line': 23, b'word': b'vital_load', b'menu_template': b"call s:V.load('...')", b'action__pattern': b'^snippet\\s\\+vital_load$'}, {b'description': b'elseif ${1:#:condition}\n${0:TARGET}', b'snip': b'elseif ${1:#:condition}\n${0:TARGET}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'elseif ${1:#:condition} ${0: }', b'real_name': b'elseif', b'action__line': 8, b'word': b'elseif', b'menu_template': b'elseif ${1:#:condition} ${0: }', b'action__pattern': b'^snippet\\s\\+elseif$'}, {b'description': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'snip': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundle ''", b'real_name': b'NeoBundle', b'action__line': 100, b'word': b'NeoBundle', b'menu_template': b"NeoBundle ''", b'action__pattern': b'^snippet\\s\\+NeoBundle$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'datetime_iso8601', b'action__line': 7, b'word': b'datetime_iso8601', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+datetime_iso8601$'}, {b'description': b'augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END', b'snip': b'augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'augroup with autocmds', b'real_name': b'augroup', b'action__line': 85, b'word': b'augroup', b'menu_template': b'augroup with autocmds', b'action__pattern': b'^snippet\\s\\+augroup$'}, {b'description': b"let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", b'snip': b"let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use pos save', b'real_name': b'save_pos', b'action__line': 192, b'word': b'save_pos', b'menu_template': b'use pos save', b'action__pattern': b'^snippet\\s\\+save_pos$'}, {b'description': b"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", b'snip': b"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'customlist complete function', b'real_name': b'customlist', b'action__line': 78, b'word': b'customlist', b'menu_template': b'customlist complete function', b'action__pattern': b'^snippet\\s\\+customlist$'}, {b'description': b'try\n\t\t${1:${VISUAL}}\n\tcatch ${2}\n\t\t${0}\n\tendtry', b'snip': b'try\n\t\t${1:${VISUAL}}\n\tcatch ${2}\n\t\t${0}\n\tendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'try ... catch statement', b'real_name': b't_try_catch_statement', b'action__line': 15, b'word': b't_try_catch_statement', b'menu_template': b'try ... catch statement', b'action__pattern': b'^snippet\\s\\+t_try_catch_statement$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.  ${0}', b'real_name': b'APACHE', b'action__line': 219, b'word': b'APACHE', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.  ${0}', b'action__pattern': b'^snippet\\s\\+APACHE$'}, {b'description': b"has('patch-${1}')${0}", b'snip': b"has('patch-${1}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'vim-version-check-new', b'real_name': b'version_new', b'action__line': 233, b'word': b'version_new', b'menu_template': b'vim-version-check-new', b'action__pattern': b'^snippet\\s\\+version_new$'}]
2017-08-08 04:25:26,847 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,866 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 13, 'nvim_get_option', ('isfname',)]
2017-08-08 04:25:26,867 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\r\xafnvim_get_option\x91\xa7isfname''
2017-08-08 04:25:26,867 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,867 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,868 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 12, None, b'/Users/AMC/.vim/init.vim']
2017-08-08 04:25:26,868 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'/Users/AMC/.vim/init.vim'
2017-08-08 04:25:26,868 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:26,868 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 14, 'nvim_get_option', ('runtimepath',)]
2017-08-08 04:25:26,869 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x0e\xafnvim_get_option\x91\xabruntimepath''
2017-08-08 04:25:26,869 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,869 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,869 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,869 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,869 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 13, None, b'@,48-57,/,.,-,_,+,,,#,$,%,~']
2017-08-08 04:25:26,869 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'@,48-57,/,.,-,_,+,,,#,$,%,~'
2017-08-08 04:25:26,870 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,870 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 15, 'nvim_call_function', ('deoplete#util#vimoption2python_not', ['@,48-57,/,.,-,_,+,,,#,$,%,~'])]
2017-08-08 04:25:26,870 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x0f\xb2nvim_call_function\x92\xda\x00"deoplete#util#vimoption2python_not\x91\xbb@,48-57,/,.,-,_,+,,,#,$,%,~''
2017-08-08 04:25:26,870 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,870 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,870 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 14, None, b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/']
2017-08-08 04:25:26,870 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/'
2017-08-08 04:25:26,870 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:26,897 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 16, 'nvim_call_function', ('exists', [':Rm'])]
2017-08-08 04:25:26,898 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x10\xb2nvim_call_function\x92\xa6exists\x91\xa3:Rm''
2017-08-08 04:25:26,898 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,898 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,898 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,898 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,898 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 15, None, b'[^a-zA-Z@0-9/._+,#$%~-]']
2017-08-08 04:25:26,899 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'[^a-zA-Z@0-9/._+,#$%~-]'
2017-08-08 04:25:26,899 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,899 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 17, 'nvim_call_function', ('exists', ['*neoinclude#include#get_tag_files'])]
2017-08-08 04:25:26,899 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x11\xb2nvim_call_function\x92\xa6exists\x91\xda\x00!*neoinclude#include#get_tag_files''
2017-08-08 04:25:26,899 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,899 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,899 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 16, None, 0]
2017-08-08 04:25:26,899 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:26,899 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:26,900 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 18, 'nvim_call_function', ('executable', ['rmtrash'])]
2017-08-08 04:25:26,900 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x12\xb2nvim_call_function\x92\xaaexecutable\x91\xa7rmtrash''
2017-08-08 04:25:26,900 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,900 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,900 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,900 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,900 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 17, None, 0]
2017-08-08 04:25:26,900 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:26,901 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,901 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 19, 'nvim_call_function', ('tagfiles', [])]
2017-08-08 04:25:26,901 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x13\xb2nvim_call_function\x92\xa8tagfiles\x90''
2017-08-08 04:25:26,901 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,901 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,901 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 18, None, 0]
2017-08-08 04:25:26,901 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:26,901 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:26,925 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 20, 'nvim_get_option', ('runtimepath',)]
2017-08-08 04:25:26,925 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x14\xafnvim_get_option\x91\xabruntimepath''
2017-08-08 04:25:26,925 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,925 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,925 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,925 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,925 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 19, None, []]
2017-08-08 04:25:26,926 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, []
2017-08-08 04:25:26,926 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,926 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 21, 'nvim_call_function', ('map', [[], 'fnamemodify(v:val, ":p")'])]
2017-08-08 04:25:26,926 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x15\xb2nvim_call_function\x92\xa3map\x92\x90\xb8fnamemodify(v:val, ":p")''
2017-08-08 04:25:26,926 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,926 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,926 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 20, None, b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/']
2017-08-08 04:25:26,926 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/'
2017-08-08 04:25:26,926 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:26,927 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 22, 'nvim_call_function', ('getcwd', [])]
2017-08-08 04:25:26,927 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x16\xb2nvim_call_function\x92\xa6getcwd\x90''
2017-08-08 04:25:26,927 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:26,927 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,927 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:26,927 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,927 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 21, None, []]
2017-08-08 04:25:26,928 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, []
2017-08-08 04:25:26,928 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:26,928 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 23, 'nvim_get_current_buf', ()]
2017-08-08 04:25:26,928 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x17\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:26,928 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:26,928 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:26,928 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 22, None, b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site']
2017-08-08 04:25:26,928 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'
2017-08-08 04:25:26,929 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,040 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 24, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,041 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x18\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,041 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,041 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,041 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,042 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,042 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 23, None, ExtType(code=0, data=b'\x01')]
2017-08-08 04:25:27,042 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x01')
2017-08-08 04:25:27,042 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:27,042 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 25, 'nvim_buf_get_option', (ExtType(code=0, data=b'\x01'), 'filetype')]
2017-08-08 04:25:27,043 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x19\xb3nvim_buf_get_option\x92\xd4\x00\x01\xa8filetype''
2017-08-08 04:25:27,043 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:27,043 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,043 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 24, None, ExtType(code=0, data=b'\x01')]
2017-08-08 04:25:27,043 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x01')
2017-08-08 04:25:27,043 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,044 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 26, 'nvim_call_function', ('getcurpos', [])]
2017-08-08 04:25:27,044 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x1a\xb2nvim_call_function\x92\xa9getcurpos\x90''
2017-08-08 04:25:27,044 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,044 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,044 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,045 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,045 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 25, None, b'vim']
2017-08-08 04:25:27,045 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'vim'
2017-08-08 04:25:27,045 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:27,045 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 27, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,045 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x1b\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,045 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:27,046 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,046 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 26, None, [0, 329, 1, 0, 1]]
2017-08-08 04:25:27,046 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [0, 329, 1, 0, 1]
2017-08-08 04:25:27,046 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,046 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 28, 'nvim_call_function', ('exists', ['*getwininfo'])]
2017-08-08 04:25:27,046 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x1c\xb2nvim_call_function\x92\xa6exists\x91\xab*getwininfo''
2017-08-08 04:25:27,047 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,047 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,047 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,047 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,047 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 27, None, ExtType(code=0, data=b'\x01')]
2017-08-08 04:25:27,047 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x01')
2017-08-08 04:25:27,047 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:27,048 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 29, 'buffer_line_count', (ExtType(code=0, data=b'\x01'),)]
2017-08-08 04:25:27,048 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x1d\xb1buffer_line_count\x91\xd4\x00\x01''
2017-08-08 04:25:27,048 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:27,048 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,049 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 28, None, 1]
2017-08-08 04:25:27,049 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,049 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,049 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 30, 'nvim_call_function', ('win_getid', [])]
2017-08-08 04:25:27,049 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x1e\xb2nvim_call_function\x92\xa9win_getid\x90''
2017-08-08 04:25:27,049 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,050 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,050 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,050 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,050 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 29, None, 968]
2017-08-08 04:25:27,050 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 968
2017-08-08 04:25:27,050 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:27,050 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 31, 'nvim_call_function', ('getline', [1, 968])]
2017-08-08 04:25:27,051 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x1f\xb2nvim_call_function\x92\xa7getline\x92\x01\xcd\x03\xc8''
2017-08-08 04:25:27,051 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:27,051 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,051 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 30, None, 1000]
2017-08-08 04:25:27,051 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1000
2017-08-08 04:25:27,051 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,051 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 32, 'nvim_call_function', ('getwininfo', [1000])]
2017-08-08 04:25:27,051 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00 \xb2nvim_call_function\x92\xaagetwininfo\x91\xcd\x03\xe8''
2017-08-08 04:25:27,052 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,052 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,052 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,052 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,052 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,052 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,053 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,053 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,053 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,053 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,053 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,053 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,053 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 31, None, [b'""      \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84    \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84     \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x84   \xe2\x96\x84\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""    \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x84  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x80   \xe2\x96\x80\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80   \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x80', b'""                                                         \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88              "', b'" Author: Mr. Corvi', b'" we are good', b'', b'" Setup dein  ---------------------------------------------------------------{{{', b'  if (!isdirectory(expand("$HOME/.config/nvim/repos/github.com/Shougo/dein.vim")))', b'    call system(expand("mkdir -p $HOME/.config/nvim/repos/github.com"))', b'    call system(expand("git clone https://github.com/Shougo/dein.vim $HOME/.config/nvim/repos/github.com/Shougo/dein.vim"))', b'  endif', b'', b'  set runtimepath+=~/.config/nvim/repos/github.com/Shougo/dein.vim/', b"  call dein#begin(expand('~/.config/nvim'))", b"  call dein#add('Shougo/dein.vim')", b"  call dein#add('haya14busa/dein-command.vim')", b'" syntax', b"  call dein#add('othree/html5.vim')", b"  call dein#add('othree/yajs.vim')", b"  call dein#add('othree/jsdoc-syntax.vim')", b"  call dein#add('heavenshell/vim-jsdoc')", b"  call dein#add('elzr/vim-json')", b"  call dein#add('HerringtonDarkholme/yats.vim')", b"  call dein#add('skwp/vim-html-escape')", b"  call dein#add('hail2u/vim-css3-syntax')", b"  call dein#add('ap/vim-css-color')", b"  call dein#add('tpope/vim-markdown', {'on_ft': 'markdown'})", b"  call dein#add('dhruvasagar/vim-table-mode')", b"  call dein#add('nelstrom/vim-markdown-folding', {'on_ft': 'markdown'})", b"  call dein#add('rhysd/vim-grammarous')", b"  call dein#add('tmhedberg/SimpylFold', {'on_ft': 'python'})", b"  call dein#add('tmux-plugins/vim-tmux')", b"  call dein#add('itmammoth/doorboy.vim')", b"  call dein#add('valloric/MatchTagAlways', {'on_ft': 'html'})", b"  call dein#add('tpope/vim-fugitive')", b"  call dein#add('tpope/vim-rhubarb')", b"  call dein#add('chemzqm/vim-easygit')", b"  call dein#add('jreybert/vimagit', {'on_cmd': ['Magit', 'MagitOnly']})", b"  call dein#add('sgeb/vim-diff-fold')", b"  call dein#add('airblade/vim-gitgutter')", b"  call dein#add('junegunn/gv.vim')", b"  call dein#add('lambdalisue/gina.vim')", b"  call dein#add('scrooloose/nerdtree')", b"  call dein#add('Xuyuanp/nerdtree-git-plugin')", b"  call dein#add('tpope/vim-repeat')", b"  call dein#add('tpope/vim-unimpaired')", b"  call dein#add('neomake/neomake', {'on_cmd': 'Neomake'})", b"  call dein#add('digitaltoad/vim-pug')", b"  call dein#add('editorconfig/editorconfig-vim')", b"  call dein#add('rhysd/vim-color-spring-night')", b"  call dein#add('AndrewRadev/switch.vim')", b"  call dein#add('christoomey/vim-tmux-navigator')", b"  call dein#add('vim-airline/vim-airline')", b"  call dein#add('tpope/vim-surround')", b"  call dein#add('tomtom/tcomment_vim')", b"  call dein#add('mattn/emmet-vim')", b"  call dein#add('sbdchd/neoformat')", b'  " theme', b"  call dein#add('bluz71/vim-moonfly-colors')", b"  call dein#add('smancill/darkglass')", b"  call dein#add('roosta/vim-srcery')", b"  call dein#add('sonjapeterson/1989.vim')", b"  call dein#add('vim-scripts/turbo.vim')", b"  call dein#add('stulzer/heroku-colorscheme')", b"  call dein#add('vim-scripts/proton')", b"  call dein#add('MaxSt/FlatColor')", b"  call dein#add('vim-scripts/pink')", b"  call dein#add('vim-scripts/synic.vim')", b"  call dein#add('vim-airline/vim-airline-themes')", b'" deoplete stuff', b"  call dein#add('Shougo/deoplete.nvim')", b"  call dein#add('Shougo/deol.nvim')", b'', b"  call dein#add('Shougo/denite.nvim')", b"  call dein#add('jremmen/vim-ripgrep')", b'  " call dein#add(\'ctrlpvim/ctrlp.vim\')', b'', b"  call dein#add('Shougo/neomru.vim')", b"  call dein#add('Shougo/context_filetype.vim')", b"  call dein#add('chemzqm/denite-git')", b"  call dein#add('ternjs/tern_for_vim', {'build': 'npm install'})", b"  call dein#add('carlitux/deoplete-ternjs')", b"  call dein#add('artur-shaik/vim-javacomplete2')", b"  call dein#add('Shougo/neco-vim')", b"  call dein#add('Shougo/neoinclude.vim')", b'  "  dein#add(\'ujihisa/neco-look\')', b"  call dein#add('davidhalter/jedi-vim', {'on_ft': 'python'})", b"  call dein#add('zchee/deoplete-jedi')", b'  " call dein#add(\'zchee/nvim-go\', {\'build\': \'gb build\', \'on_ft\': \'go\'})', b"  call dein#add('zchee/deoplete-go', {'build': 'make'})", b'  " call dein#add(\'nsf/gocode\')', b"  call dein#add('junegunn/limelight.vim')", b"  call dein#add('Konfekt/FastFold')", b"  call dein#add('Shougo/neosnippet.vim')", b"  call dein#add('Shougo/neosnippet-snippets')", b"  call dein#add('Shougo/echodoc.vim')", b"  call dein#add('honza/vim-snippets')", b"  call dein#add('mhinz/vim-sayonara')", b"  call dein#add('mattn/webapi-vim')", b"  call dein#add('mattn/gist-vim')", b"  call dein#add('pocari/vim-denite-gists')", b"  call dein#add('vim-scripts/SyntaxRange')", b"  call dein#add('terryma/vim-multiple-cursors')", b"  call dein#add('MartinLafreniere/vim-PairTools')", b"  call dein#add('Shougo/vimfiler.vim')", b"  call dein#add('Shougo/unite.vim')", b"  call dein#add('junegunn/gv.vim')", b"  call dein#local('~/GitHub', {},['vim-folds'])", b"  call dein#local('~/GitHub', {},['oceanic-next'])", b'  " call dein#local(\'~/GitHub\', {},[\'operator-next\'])', b"  call dein#local('~/GitHub', {},['nvim-typescript'])", b"  call dein#add('chemzqm/denite-git')", b"  call dein#add('sjl/vitality.vim')", b"  call dein#add('ryanoasis/vim-devicons')", b"  call dein#add('tiagofumo/vim-nerdtree-syntax-highlight')", b'  " call dein#add(\'suan/vim-instant-markdown\')', b"  call dein#add('JamshedVesuna/vim-markdown-preview')", b"  call dein#add('vingorius/pug-beautifier')", b'  call dein#add("flowtype/vim-flow")', b'  if dein#check_install()', b'    call dein#install()', b'    let pluginsExist=1', b'  endif', b'', b'  call dein#end()', b'  filetype plugin indent on', b'  filetype plugin on', b'" }}}', b'', b'" System Settings  ----------------------------------------------------------{{{', b'', b'  " source ~/.local.vim', b'" Neovim Settings', b'  set termguicolors', b'  let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1', b'  set clipboard+=unnamedplus', b'  set pastetoggle=<f6>', b'  set nopaste', b'  autocmd BufWritePre * %s/\\s\\+$//e', b'  set noshowmode', b'  set noswapfile', b'  filetype on', b'  set  number', b'  set relativenumber', b'  set numberwidth=1', b'  set tabstop=4 shiftwidth=4 expandtab', b'  set conceallevel=0', b'  set virtualedit=', b'  set wildmenu', b'  set laststatus=2', b'  set wrap linebreak nolist', b'  set wildmode=full', b'  set autoread', b'  set smartcase', b'  set ignorecase', b'" leader is ,', b"  let mapleader = ';'", b'  " set undofile', b'  " set undodir="$HOME/.VIM_UNDO_FILES"', b'', b'  try', b'      set undodir=$HOME/undodir', b'      set undofile', b'  catch', b'  endtry', b'', b'" Remember cursor position between vim sessions', b' autocmd BufReadPost *', b'             \\ if line("\'\\"") > 0 && line ("\'\\"") <= line("$") |', b'             \\   exe "normal! g\'\\"" |', b'             \\ endif', b'             " center buffer around cursor when opening files', b'  autocmd BufRead * normal zz', b'  " set updatetime=500', b'  set complete=.,w,b,u,t,k', b'  autocmd InsertEnter * let save_cwd = getcwd() | set autochdir', b"  autocmd InsertLeave * set noautochdir | execute 'cd' fnameescape(save_cwd)", b'  set formatoptions+=t', b'  set inccommand=nosplit', b'  set shortmess=atIc', b'  set isfname-==', b'  set nospell', b'', b'  set breakindent', b'" }}}', b'', b'" System mappings  ----------------------------------------------------------{{{', b'', b'', b'"Refresh vim', b'  nnoremap <f5> :so $MYVIMRC<CR>', b'', b'" No need for ex mode', b'  nnoremap Q <nop>', b'  vnoremap // y/<C-R>"<CR>', b'', b'', b'" Use enter to make new lines', b'  nmap <CR> o<Esc>', b'  nmap <S-CR> O<Esc>', b'', b'" Use <A-o> <Shift><A-o> in order to create new line above  or below in normal mode', b'  nmap \xc3\xb8 o<esc>', b'  nmap \xc3\x98 O<esc>', b'', b'" Use <A-o> <Shift><A-o> in order to create new line above  or below in normal mode', b'  inoremap \xc3\xb8 <cr>', b'  inoremap \xc3\x98 <esc>O', b'', b'" Pressing ,ss will toggle and untoggle spell checking', b'  map <leader>ss :setlocal spell!<cr>', b'', b'  " Save via leader+w', b'  nnoremap <leader>w :w<cr>', b'', b'" press i twice for normal mode', b'  inoremap ii <esc>', b'', b'" Select all', b'  nnoremap \xc3\xa5 ggVG', b'', b'" Navigate between display lines', b'  noremap  <silent> <Up>   gk', b'  noremap  <silent> <Down> gj', b'  noremap  <silent> k gk', b'  noremap  <silent> j gj', b'  noremap  <silent> <Home> g<Home>', b'  noremap  <silent> <End>  g<End>', b'  inoremap <silent> <Home> <C-o>g<Home>', b'  inoremap <silent> <End>  <C-o>g<End>', b'  inoremap \xe2\x88\x86 <Down>', b'  inoremap \xcb\x9a <Up>', b'  inoremap \xc2\xac <Right>', b'  inoremap \xcb\x99 <Left>', b'', b'" Add semicolon to end of line', b'  nnoremap \xe2\x80\xa6 A;<esc>', b'', b'" Toggle Neomake globally', b'  nnoremap <leader>nt :NeomakeToggle<cr>', b'', b'" Vertical Split', b'  nnoremap <leader>sp :sp<CR>', b'" Horizontal Split', b'  nnoremap <leader>vs :vs<CR>', b'" Close All Window Except Current', b'  nnoremap <leader>on :on<CR>', b'" Close Current Window', b'  nnoremap <leader>clo :clo<CR>', b'" Close current buffer', b'  nnoremap <leader>bd :bd<CR>', b'" Update Buffer', b'  noremap <leader>ct :checktime<CR>', b'', b'" copy current files path to clipboard', b'  nmap cp :let @+= expand("%") <cr>', b'" Neovim terminal mapping', b'" terminal \'normal mode\'', b'  tmap <esc> <c-\\><c-n><esc><cr>', b'" exit insert, dd line, enter insert', b'  inoremap <c-d> <esc>ddi', b'  noremap H ^', b'  noremap L g_', b'  noremap J 5j', b'  noremap K 5k', b'', b'', b'', b'" this is the best, let me tell you why', b'" how annoying is that everytime you want to do something in vim', b'" you have to do shift-; to get :, can\'t we just do ;?', b'" Plus what does ; do anyways??', b'" if you do have a plugin that needs ;, you can just swap the mapping', b'" nnoremap : ;', b'" " give it a try and you will like it', b'"   nnoremap ; :', b'', b'" Toggle file type completion', b'  inoremap <c-f> <c-x><c-f>', b'', b'" Copy to osx clipboard', b'  vnoremap <C-c> "*y<CR>', b'  " vnoremap y "*y<CR>', b'  " nnoremap Y "*Y<CR>', b'  " vnoremap y myy`y', b' vnoremap Y myY`y', b"  let g:multi_cursor_next_key='<C-n>'", b"  let g:multi_cursor_prev_key='<C-p>'", b"  let g:multi_cursor_skip_key='<C-x>'", b'" let g:multi_cursor_quit_key=\'<Esc>\'', b'', b'  " Commenting', b'  nnoremap <leader>lc :TComment<cr>', b'  vnoremap <leader>lc :TComment<cr>', b'  vnoremap <leader>mc :TCommentBlock<cr>', b'  vnoremap <leader>lbc :TCommentInline<cr>', b'', b'', b'" Align blocks of text and keep them selected', b'  vmap < <gv', b'  vmap > >gv', b'  nnoremap <leader>d "_d', b'  vnoremap <leader>d "_d', b'  nnoremap <silent> <esc> :noh<cr>', b'', b'  nnoremap <leader>e :call <SID>SynStack()<CR>', b'  function! <SID>SynStack()', b'    if !exists("*synstack")', b'      return', b'    endif', b'    echo map(synstack(line(\'.\'), col(\'.\')), \'synIDattr(v:val, "name")\')', b'  endfunc', b'', b'  function! s:PlaceholderImgTag(size)', b"    let url = 'http://dummyimage.com/' . a:size . '/000000/555555'", b"    let [width,height] = split(a:size, 'x')", b'    execute "normal a<img src=\\"".url."\\" width=\\"".width."\\" height=\\"".height."\\" />"', b'    endfunction', b'  command! -nargs=1 PlaceholderImgTag call s:PlaceholderImgTag(<f-args>)', b'', b'"}}}"', b'', b'" , Commands, etc  ----------------------------------------------------{{{', b'  syntax on', b'  colorscheme spring-night', b'  " let g:OceanicNext_italic = 1', b'', b'  "Colorscheme', b'  set background=dark', b'', b'  " Remove \'|\' character fom split window border (note blank space after', b'  " back slash)', b'  set fillchars+=vert:\\', b'', b'  " Change split window bar color', b'  hi VertSplit ctermfg=NONE ctermbg=NONE cterm=NONE', b'  hi VertSplit guifg=NONE guibg=NONE gui=NONE', b'', b'', b'  " Change color of Search Highlight', b'  hi Search cterm=NONE ctermfg=NONE ctermbg=red', b'  hi Search gui=NONE guifg=red guibg=lightgreen', b'  hi CursorLineNr cterm=NONE ctermfg=yellow ctermbg=red', b'  hi CursorLineNr gui=NONE guifg=yellow guibg=red', b'', b'  " Neomake sign colors', b'  hi NeomakeErrorSign guifg=red', b'  hi NeomakeWarningSign guifg=yellow', b'  hi NeomakeErrorSign guibg=bg', b'  hi NeomakeWarningSign guibg=bg', b'  hi NeomakeErrorSign ctermfg=red', b'  hi NeomakeWarningSign ctermfg=yellow', b'', b'', b'"}}}', b'', b'" MarkDown ------------------------------------------------------------------{{{', b'', b'  noremap <leader>TM :TableModeToggle<CR>', b'  let g:table_mode_corner="|"', b'', b'  let g:neomake_markdown_proselint_maker = {', b"      \\ 'errorformat': '%W%f:%l:%c: %m',", b"      \\ 'postprocess': function('neomake#postprocess#GenericLengthPostprocess'),", b'      \\}', b"  let g:neomake_markdown_enabled_makers = ['alex', 'proselint']", b'', b'', b'', b'  let g:instant_markdown_autostart = 0', b'  let g:instant_markdown_slow = 1', b'  let vim_markdown_preview_github=1', b'"}}}', b'', b'" Javascript ----------------------------------------------------------------{{{', b'', b'', b'  " let g:neoformat_enabled_javascript = [\'jsbeautfy\']', b'  " let g:neomake_highlight_columns = 1', b'  " let g:neomake_open_list = 1', b"  let g:neomake_javascript_enabled_makers = ['eslint']", b'  let g:neomake_verbose = 1', b'  let g:neomake_javascript_eslint_maker = {', b"    \\ 'args': ['--no-color', '--format', 'compact'],", b"    \\ 'errorformat': '%f: line %l\\, col %c\\, %m'", b'    \\ }', b"  let g:eslint_path = system('PATH=$(npm bin):$PATH && which eslint')", b"  let g:neomake_javascript_eslint_exe=substitute(g:eslint_path, '^\\n*\\s*\\(.\\{-}\\)\\n*\\s*$', '\\1', '')", b'', b'', b'  " Mapping for jsdoc Documentation', b'   autocmd FileType javascript nnoremap <leader>dc :JsDoc<CR>', b'', b'    " To disable this, set to 0 in your ~/.vimrc, like so:', b'    let g:flow#enable = 0', b'', b'  let g:jsx_ext_required = 1', b'  let g:jsdoc_allow_input_prompt = 1', b'  let g:jsdoc_input_description = 1', b'  let g:vim_json_syntax_conceal = 0', b"  let g:tern#command = ['tern']", b"  let g:tern#arguments = ['--persistent']", b'', b'  " let g:nvim_typescript#signature_complete=1', b'  " let g:nvim_typescript#type_info_on_hold=1', b'  " let g:nvim_typescript#max_completion_detail=100', b'  "', b'  let g:neomake_typescript_tsc_maker = {', b"            \\ 'append_file': 0,", b"            \\ 'args': ['--project', getcwd() . '/tsconfig.json', '--noEmit'],", b"            \\ 'errorformat':", b"            \\   '%E%f %#(%l\\,%c): error %m,' .", b"            \\   '%E%f %#(%l\\,%c): %m,' .", b"            \\   '%Eerror %m,' .", b"            \\   '%C%\\s%\\+%m'", b'            \\}', b'', b"  let g:neomake_typescript_enabled_makers = ['tsc']", b'  map <silent> <leader>gd :TSDoc <cr>', b'  map <silent> <leader>gt :TSType <cr>', b'  map <silent> <leader>@ :Denite -buffer-name=TSDocumentSymbol TSDocumentSymbol <cr>', b'  " autocmd FileType typescript setl omnifunc=TSComplete', b'  let g:nvim_typescript#kind_symbols = {', b"      \\ 'keyword': 'keyword',", b"      \\ 'class': '\xef\x83\xa8',", b"      \\ 'interface': 'interface',", b"      \\ 'script': 'script',", b"      \\ 'module': '\xef\x86\xb2',", b"      \\ 'local class': 'local class',", b"      \\ 'type': 'type',", b"      \\ 'enum': '\xef\x87\xa0',", b"      \\ 'enum member': '\xef\x86\xb2',", b"      \\ 'alias': '\xef\x87\x8b',", b"      \\ 'type parameter': 'type param',", b"      \\ 'primitive type': 'primitive type',", b"      \\ 'var': '\xef\x84\xa1',", b"      \\ 'local var': '\xef\x84\xa1',", b"      \\ 'property': '\xef\x82\xad',", b"      \\ 'let': '\xef\x84\xa1',", b"      \\ 'const': '\xef\x84\xa1',", b"      \\ 'label': 'label',", b"      \\ 'parameter': 'param',", b"      \\ 'index': 'index',", b"      \\ 'function': '\xef\x80\x93',", b"      \\ 'local function': 'local function',", b"      \\ 'method': '\xef\x83\xa7',", b"      \\ 'getter': '\xef\x82\xad',", b"      \\ 'setter': '\xef\x82\xad',", b"      \\ 'call': 'call',", b"      \\ 'constructor': '\xef\x86\xb2',", b'      \\}', b'" }}}', b'', b'" Java ----------------------------------------------------------------------{{{', b'', b'  autocmd FileType java setlocal omnifunc=javacomplete#Complete', b'', b'"}}}', b'', b'" HTML ----------------------------------------------------------------------{{{', b'  let g:neomake_html_enabled_makers = []', b"  let g:neoformat_enabled_pug = ['pug-beautifier']", b'', b'" }}}', b'', b'" Go ------------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" CSS -----------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" Lua -----------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" Python --------------------------------------------------------------------{{{', b'', b'  " let g:python_host_prog = \'/usr/local/bin/python2\'', b"  let g:python3_host_prog = '/usr/local/bin/python3'", b"  let $NVIM_PYTHON_LOG_FILE='nvim-python.log'", b'  let g:jedi#auto_vim_configuration = 0', b'  let g:jedi#documentation_command = "<leader>k"', b'', b'', b'  " let g:neoformat_enabled_htmldjango = [\'html-beautify\']', b'', b'" }}}', b'', b'" Fold, gets it\'s own section  ----------------------------------------------{{{', b'', b'  function! MyFoldText() " {{{', b'      let line = getline(v:foldstart)', b'      let nucolwidth = &fdc + &number * &numberwidth', b'      let windowwidth = winwidth(0) - nucolwidth - 3', b'      let foldedlinecount = v:foldend - v:foldstart', b'', b'      " expand tabs into spaces', b'      " let onetab = strpart(\'          \', 0, &tabstop)', b'      " let line = substitute(line, \'\\t\', onetab, \'g\')', b'', b'      let line = strpart(line, 0, windowwidth - 2 -len(foldedlinecount))', b'      " let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - len(\'lines\')', b'      " let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - len(\'lines   \')', b'      let fillcharcount = windowwidth - len(line)', b'      " return line . \'\xe2\x80\xa6\' . repeat(" ",fillcharcount) . foldedlinecount . \' Lines\'', b'      return line . \'\xe2\x80\xa6\' . repeat(" ",fillcharcount)', b'  endfunction " }}}', b'', b'', b'  set foldtext=MyFoldText()', b'', b"  autocmd InsertEnter * if !exists('w:last_fdm') | let w:last_fdm=&foldmethod | setlocal foldmethod=manual | endif", b"  autocmd InsertLeave,WinLeave * if exists('w:last_fdm') | let &l:foldmethod=w:last_fdm | unlet w:last_fdm | endif", b'', b'  autocmd FileType vim setlocal fdc=1', b'  set foldlevel=99', b'', b'  " Space to toggle folds.', b'  nnoremap <Space> za', b'  vnoremap <Space> za', b'  autocmd FileType vim setlocal foldmethod=marker', b'  autocmd FileType vim setlocal foldlevel=0', b'', b'  autocmd FileType javascript,html,css,scss,typescript setlocal foldlevel=99', b'', b'  autocmd FileType css,scss,json setlocal foldmethod=marker', b'  autocmd FileType css,scss,json setlocal foldmarker={,}', b'', b'  autocmd FileType coffee setl foldmethod=indent', b'  let g:xml_syntax_folding = 1', b'  autocmd FileType xml setl foldmethod=syntax', b'', b'  autocmd FileType html setl foldmethod=expr', b'  autocmd FileType html setl foldexpr=HTMLFolds()', b'', b'  autocmd FileType javascript,typescript,json setl foldmethod=syntax', b'', b'" }}}', b'', b'" Git -----------------------------------------------------------------------{{{', b'', b'  let g:gitgutter_sign_column_always = 1', b'', b'" }}}', b'', b'" NERDTree ------------------------------------------------------------------{{{', b'', b'  let g:vimfiler_ignore_pattern = ""', b'  " map <silent> - :VimFiler<CR>', b"\tlet g:vimfiler_tree_leaf_icon = ''", b"\tlet g:vimfiler_tree_opened_icon = '\xef\x81\xb8'", b"\tlet g:vimfiler_tree_closed_icon = '\xef\x81\x94'", b"\tlet g:vimfiler_file_icon = ''", b"\tlet g:vimfiler_marked_file_icon = '*'", b'  let g:vimfiler_expand_jump_to_first_child = 0', b'  " let g:vimfiler_as_default_explorer = 1', b"  call unite#custom#profile('default', 'context', {", b"              \\'direction': 'botright',", b'              \\ })', b"  call vimfiler#custom#profile('default', 'context', {", b"              \\ 'explorer' : 1,", b"              \\ 'winwidth' : 35,", b"              \\ 'winminwidth' : 35,", b"              \\ 'toggle' : 1,", b"              \\ 'auto_expand': 0,", b"              \\ 'parent': 1,", b"              \\ 'explorer_columns': 'devicons:git',", b"              \\ 'status' : 0,", b"              \\ 'safe' : 0,", b"              \\ 'split' : 1,", b"              \\ 'hidden': 1,", b"              \\ 'no_quit' : 1,", b"              \\ 'force_hide' : 0,", b'              \\ })', b'  augroup vfinit', b'  autocmd FileType vimfiler call s:vimfilerinit()', b'  augroup END', b'  function! s:vimfilerinit()', b'      set nonumber', b'      set norelativenumber', b'      nmap <silent><buffer><expr> <CR> vimfiler#smart_cursor_map(', b'            \\ "\\<Plug>(vimfiler_expand_tree)",', b'            \\ "\\<Plug>(vimfiler_edit_file)"', b'            \\)', b'      nmap <silent> m :call NerdUnite()<cr>', b'      nmap <silent> r <Plug>(vimfiler_redraw_screen)', b'  endf', b'  " let g:vimfiler_ignore_pattern = \'^\\%(\\.git\\|\\.DS_Store\\)$\'', b'  let g:webdevicons_enable_vimfiler = 0', b'  let g:vimfiler_no_default_key_mappings=1', b'  function! NerdUnite() abort "{{{', b'    let marked_files =  vimfiler#get_file(b:vimfiler)', b"    call unite#start(['nerd'], {'file': marked_files})", b'\tendfunction "}}}', b'', b'  map <silent> - :NERDTreeToggle<CR>', b'  augroup ntinit', b'  autocmd FileType nerdtree call s:nerdtreeinit()', b'  augroup END', b'  function! s:nerdtreeinit()', b'      nunmap <buffer> K', b'      nunmap <buffer> J', b'  endf', b'  let NERDTreeShowHidden=1', b'  let NERDTreeHijackNetrw=0', b'  let g:WebDevIconsUnicodeDecorateFolderNodes = 1', b'  let g:NERDTreeWinSize=30', b"  let NERDTreeWinPos = 'right'", b'  let g:NERDTreeAutoDeleteBuffer=1', b"  let g:WebDevIconsOS = 'Darwin'", b'  let NERDTreeMinimalUI=1', b'  let NERDTreeCascadeSingleChildDir=1', b"  let g:NERDTreeHeader = 'hello'", b'', b'', b'" let g:webdevicons_conceal_nerdtree_brackets = 0', b'  " let g:WebDevIconsNerdTreeAfterGlyphPadding = \'\'', b'  " \xef\x90\x81', b'  let g:NERDTreeShowIgnoredStatus = 0', b'  " let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = 1', b'  " let g:NERDTreeDirArrows = 1', b"  let g:NERDTreeDirArrowExpandable = '\xef\x81\x94'", b"  let g:NERDTreeDirArrowCollapsible = '\xef\x81\xb8'", b"  let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = '\xef\x90\x93'", b'"}}}', b'', b'" Nvim terminal -------------------------------------------------------------{{{', b'', b"  au BufEnter * if &buftype == 'terminal' | :startinsert | endif", b'  autocmd BufEnter term://* startinsert', b'  autocmd TermOpen * set bufhidden=hide', b'', b'" }}}', b'', b'" Vim-Devicons -------------------------------------------------------------0{{{', b'', b'  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {} " needed', b"  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['js'] = '\xee\x9e\x81'", b"  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['vim'] = '\xee\x98\xab'", b'', b'" }}}', b'', b'" Code formatting -----------------------------------------------------------{{{', b'', b'" ,f to format code, requires formatters: read the docs', b'  noremap <silent> <leader>f :Neoformat<CR>', b'', b'" }}}', b'', b'" Snipppets -----------------------------------------------------------------{{{', b'', b'" Enable snipMate compatibility feature.', b'  let g:neosnippet#enable_snipmate_compatibility = 1', b'  let g:neosnippet#expand_word_boundary = 1', b'  imap <C-x> <Plug>(neosnippet_expand_or_jump)', b'  smap <C-x> <Plug>(neosnippet_expand_or_jump)', b'  xmap <C-x> <Plug>(neosnippet_expand_target)', b'', b'" SuperTab like snippets behavior.', b'  imap <expr><TAB> neosnippet#expandable_or_jumpable() ?', b'  \\ "\\<Plug>(neosnippet_expand_or_jump)"', b'  \\: pumvisible() ? "\\<C-n>" : "\\<TAB>"', b'  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?', b'  \\ "\\<Plug>(neosnippet_expand_or_jump)"', b'  \\: "\\<TAB>"', b'', b'"}}}', b'', b'" Deoplete ------------------------------------------------------------------{{{', b'', b'" enable deoplete', b'  let g:deoplete#enable_at_startup = 1', b'  let g:echodoc_enable_at_startup=1', b'  set splitbelow', b'  set splitright', b'  set completeopt+=noselect', b'  set completeopt-=preview', b'  autocmd CompleteDone * pclose', b'', b'  function! Multiple_cursors_before()', b'    let b:deoplete_disable_auto_complete=2', b'  endfunction', b'  function! Multiple_cursors_after()', b'    let b:deoplete_disable_auto_complete=0', b'  endfunction', b'  let g:deoplete#file#enable_buffer_path=1', b'', b"  call deoplete#custom#set('buffer', 'mark', '\xe2\x84\xac')", b"  call deoplete#custom#set('ternjs', 'mark', '\xee\x98\x8c')", b"  call deoplete#custom#set('omni', 'mark', '\xe2\x8c\xbe')", b"  call deoplete#custom#set('file', 'mark', 'file')", b"  call deoplete#custom#set('jedi', 'mark', '\xee\x98\x86')", b"  call deoplete#custom#set('typescript', 'mark', '\xee\x98\xa8')", b"  call deoplete#custom#set('neosnippet', 'mark', '\xef\x80\xbc')", b'', b"  call deoplete#custom#set('typescript',  'rank', 630)", b'  " let g:deoplete#omni_patterns = {}', b'  " let g:deoplete#omni_patterns.html = \'\'', b'  function! Preview_func()', b'    if &pvw', b'      setlocal nonumber norelativenumber', b'     endif', b'  endfunction', b'  autocmd WinEnter * call Preview_func()', b'  let g:deoplete#ignore_sources = {}', b"  let g:deoplete#ignore_sources._ = ['around']", b'', b'  " let g:deoplete#enable_debug = 1', b'  " call deoplete#enable_logging(\'DEBUG\', \'deoplete.log\')', b'  " call deoplete#custom#set(\'typescript\', \'debug_enabled\', 1)', b'"}}}', b'', b'" Emmet customization -------------------------------------------------------{{{', b'', b'', b'"  " 1. Expand abbreviation *emmet-expand-abbr', b'"   nnoremap <leader>em, <C-y>,', b'"', b'" " 2. Expand abbreviation *emmet-expand-word* *<C-y>;*', b'"   nnoremap <leader>emt <C-y>;', b'"', b'" " 3. Update tag *emmet-update-tag* *<C-y>u*', b'"   nnoremap <leader>emu <c-y>u', b'"', b'" " 4. Wrap with abbreviation *emmet-wrap-with-abbreviation* *v_<C-y>,*', b'"   vnoremap <leader>em, v_<C-y>,', b'', b'', b'" Remapping <C-y>, just doesn\'t cut it.', b'  function! s:expand_html_tab()', b'" try to determine if we\'re within quotes or tags.', b'" if so, assume we\'re in an emmet fill area.', b"   let line = getline('.')", b"   if col('.') < len(line)", b'     let line = matchstr(line, \'[">][^<"]*\\%\'.col(\'.\').\'c[^>"]*[<"]\')', b'     if len(line) >= 2', b'        return "\\<C-n>"', b'     endif', b'   endif', b'" expand anything emmet thinks is expandable.', b'  if emmet#isExpandable()', b'    return emmet#expandAbbrIntelligent("\\<tab>")', b'    " return "\\<C-y>,"', b'  endif', b'" return a regular tab character', b'  return "\\<tab>"', b'  endfunction', b'  " let g:user_emmet_expandabbr_key=\'<Tab>\'', b'  " imap <expr> <tab> emmet#expandAbbrIntelligent("\\<tab>")', b'', b'  autocmd FileType html,css,scss imap <silent><buffer><expr><tab> <sid>expand_html_tab()', b"  let g:user_emmet_mode='a'", b'  let g:user_emmet_complete_tag = 0', b'  let g:user_emmet_install_global = 0', b'  autocmd FileType html,css,scss EmmetInstall', b'"}}}', b'', b'" Denite --------------------------------------------------------------------{{{', b'', b'  let g:webdevicons_enable_denite = 0', b'  let s:menus = {}', b'', b"  call denite#custom#option('_', {", b"        \\ 'prompt': '\xe2\x9d\xaf',", b"        \\ 'winheight': 10,", b"        \\ 'reversed': 1,", b"        \\ 'highlight_matched_char': 'Underlined',", b"        \\ 'highlight_mode_normal': 'CursorLine',", b"        \\ 'updatetime': 1,", b"        \\ 'auto_resize': 1,", b'        \\})', b"  call denite#custom#option('TSDocumentSymbol', {", b"        \\ 'prompt': ' @' ,", b"        \\ 'reversed': 0,", b'        \\})', b"  call denite#custom#var('file_rec', 'command',", b"    \\ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])", b"  call denite#custom#source('file_rec', 'vars', {", b"        \\ 'command': [", b"        \\ 'ag', '--follow','--nogroup','--hidden', '--column', '-g', '', '--ignore', '.git', '--ignore', '*.png'", b'        \\] })', b'', b"  call denite#custom#var('grep', 'command', ['ag'])", b"\tcall denite#custom#var('grep', 'default_opts',", b"\t\t\t\\ ['-i', '--vimgrep'])", b"\tcall denite#custom#var('grep', 'recursive_opts', [])", b"\tcall denite#custom#var('grep', 'pattern_opt', [])", b"\tcall denite#custom#var('grep', 'separator', ['--'])", b"\tcall denite#custom#var('grep', 'final_opts', [])", b'', b'', b'  " nnoremap <silent> <c-p> :Denite file_rec<CR>', b'  nnoremap <silent> <leader>j :Denite file_rec<CR>', b'  nnoremap <silent> <leader>h :Denite  help<CR>', b'  nnoremap <silent> <leader>c :Denite colorscheme<CR>', b'  nnoremap <silent> <leader>b :Denite buffer<CR>', b'  nnoremap <silent> <leader>a :Denite grep:::!<CR>', b'  nnoremap <silent> <leader>u :call dein#update()<CR>', b'  nnoremap <silent> <Leader>i :Denite menu:ionic <CR>', b"  call denite#custom#map('insert','<C-n>','<denite:move_to_next_line>','noremap')", b"\tcall denite#custom#map('insert','<C-N>','<denite:move_to_previous_line>','noremap')", b"  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',", b"    \\ [ '.git/', '.ropeproject/', '__pycache__/',", b"    \\   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])", b"  call denite#custom#var('menu', 'menus', s:menus)", b'', b'"}}}', b'', b'" Git from denite...ERMERGERD -----------------------------------------------{{{', b'  let s:menus.git = {', b"    \\ 'description' : 'Fugitive interface',", b'    \\}', b'  let s:menus.git.command_candidates = [', b"    \\[' git status', 'Gstatus'],", b"    \\[' git diff', 'Gvdiff'],", b"    \\[' git commit', 'Gcommit'],", b"    \\[' git stage/add', 'Gwrite'],", b"    \\[' git checkout', 'Gread'],", b"    \\[' git rm', 'Gremove'],", b"    \\[' git cd', 'Gcd'],", b'    \\[\' git push\', \'exe "Git! push " input("remote/branch: ")\'],', b'    \\[\' git pull\', \'exe "Git! pull " input("remote/branch: ")\'],', b'    \\[\' git pull rebase\', \'exe "Git! pull --rebase " input("branch: ")\'],', b'    \\[\' git checkout branch\', \'exe "Git! checkout " input("branch: ")\'],', b"    \\[' git fetch', 'Gfetch'],", b"    \\[' git merge', 'Gmerge'],", b"    \\[' git browse', 'Gbrowse'],", b"    \\[' git head', 'Gedit HEAD^'],", b"    \\[' git parent', 'edit %:h'],", b"    \\[' git log commit buffers', 'Glog --'],", b"    \\[' git log current file', 'Glog -- %'],", b'    \\[\' git log last n commits\', \'exe "Glog -" input("num: ")\'],', b'    \\[\' git log first n commits\', \'exe "Glog --reverse -" input("num: ")\'],', b'    \\[\' git log until date\', \'exe "Glog --until=" input("day: ")\'],', b'    \\[\' git log grep commits\',  \'exe "Glog --grep= " input("string: ")\'],', b'    \\[\' git log pickaxe\',  \'exe "Glog -S" input("string: ")\'],', b'    \\[\' git index\', \'exe "Gedit " input("branchname\\:filename: ")\'],', b'    \\[\' git mv\', \'exe "Gmove " input("destination: ")\'],', b'    \\[\' git grep\',  \'exe "Ggrep " input("string: ")\'],', b'    \\[\' git prompt\', \'exe "Git! " input("command: ")\'],', b'    \\] " Append \' --\' after log to get commit info commit buffers', b'"}}}', b'', b'" Ionic denite source -------------------------------------------------------{{{', b'', b'  function! Ionic(job) abort', b'    if a:job ==# "serve"', b'      enew!', b"      let filename = 'Ionic:\\ '. a:job", b"      call termopen('ionic '. a:job)", b"      exe 'file 'filename", b'      startinsert', b'    else', b"      let platform = input('platform: ')", b'      enew!', b"      let filename = 'Ionic:\\ '. a:job", b"      call termopen('ionic '. a:job . ' ' . platform)", b"      exe 'file 'filename", b'      startinsert', b'    endif', b'  endfunction', b'', b'  function ExitHandle()', b'    echom self', b'  endfunction', b'', b'  let s:menus.ionic = {', b"    \\ 'description' : 'some rando ionic stuff',", b'    \\}', b'  let s:menus.ionic.command_candidates = [', b'    \\[\' serve\', \'call Ionic("serve")\' ],', b'    \\[\' run device\', \'call Ionic("run")\'],', b'    \\[\' emulate device\', \'call Ionic("emulate")\'],', b'    \\]', b'"}}}', b'', b'" Navigate between vim buffers and tmux panels ------------------------------{{{', b'', b'  let g:tmux_navigator_no_mappings = 1', b'  nnoremap <silent> <C-j> :TmuxNavigateDown<cr>', b'  nnoremap <silent> <C-k> :TmuxNavigateUp<cr>', b'  nnoremap <silent> <C-l> :TmuxNavigateRight<cr>', b'  nnoremap <silent> <C-h> :TmuxNavigateLeft<CR>', b'  nnoremap <silent> <C-;> :TmuxNavigatePrevious<cr>', b'  tmap <C-j> <C-\\><C-n>:TmuxNavigateDown<cr>', b'  tmap <C-k> <C-\\><C-n>:TmuxNavigateUp<cr>', b'  tmap <C-l> <C-\\><C-n>:TmuxNavigateRight<cr>', b'  tmap <C-h> <C-\\><C-n>:TmuxNavigateLeft<CR>', b'  tmap <C-;> <C-\\><C-n>:TmuxNavigatePrevious<cr>', b'', b'  " Cycle between vim buffer', b'  map <silent> <leader>h :bp<CR>', b'  map <silent> <leader>l :bn<CR>', b'', b'', b'"}}}', b'', b'" vim-airline ---------------------------------------------------------------{{{', b'', b"  if !exists('g:airline_symbols')", b'    let g:airline_symbols = {}', b'  endif', b'  let g:airline#extensions#tabline#enabled = 1', b'  let g:airline#extensions#mike#enabled = 0', b'  set hidden', b"  let g:airline#extensions#tabline#fnamemod = ':t'", b'  let g:airline#extensions#tabline#buffer_idx_mode = 1', b'  let g:airline_powerline_fonts = 1', b"  let g:airline#extensions#neomake#error_symbol='\xe2\x80\xa2 '", b"  let g:airline#extensions#neomake#warning_symbol='\xe2\x80\xa2  '", b"  let g:airline_symbols.branch = '\xef\x90\x98'", b"  let g:airline_theme='solarized'", b'  cnoreabbrev <silent> <expr> x getcmdtype() == ":" && getcmdline() == \'x\' ? \'Sayonara\' : \'x\'', b'  tmap <leader>x <c-\\><c-n>:bp! <BAR> bd! #<CR>', b'  nmap <leader>t :term<cr>', b'  nmap <leader>, :bnext<CR>', b'  tmap <leader>, <C-\\><C-n>:bnext<cr>', b'  nmap <leader>. :bprevious<CR>', b'  tmap <leader>. <C-\\><C-n>:bprevious<CR>', b'  tmap <leader>1  <C-\\><C-n><Plug>AirlineSelectTab1', b'  tmap <leader>2  <C-\\><C-n><Plug>AirlineSelectTab2', b'  tmap <leader>3  <C-\\><C-n><Plug>AirlineSelectTab3', b'  tmap <leader>4  <C-\\><C-n><Plug>AirlineSelectTab4', b'  tmap <leader>5  <C-\\><C-n><Plug>AirlineSelectTab5', b'  tmap <leader>6  <C-\\><C-n><Plug>AirlineSelectTab6', b'  tmap <leader>7  <C-\\><C-n><Plug>AirlineSelectTab7', b'  tmap <leader>8  <C-\\><C-n><Plug>AirlineSelectTab8', b'  tmap <leader>9  <C-\\><C-n><Plug>AirlineSelectTab9', b'  nmap <leader>1 <Plug>AirlineSelectTab1', b'  nmap <leader>2 <Plug>AirlineSelectTab2', b'  nmap <leader>3 <Plug>AirlineSelectTab3', b'  nmap <leader>4 <Plug>AirlineSelectTab4', b'  nmap <leader>5 <Plug>AirlineSelectTab5', b'  nmap <leader>6 <Plug>AirlineSelectTab6', b'  nmap <leader>7 <Plug>AirlineSelectTab7', b'  nmap <leader>8 <Plug>AirlineSelectTab8', b'  nmap <leader>9 <Plug>AirlineSelectTab9', b'  let g:airline#extensions#tabline#buffer_idx_format = {', b"        \\ '0': '0 ',", b"        \\ '1': '1 ',", b"        \\ '2': '2 ',", b"        \\ '3': '3 ',", b"        \\ '4': '4 ',", b"        \\ '5': '5 ',", b"        \\ '6': '6 ',", b"        \\ '7': '7 ',", b"        \\ '8': '8 ',", b"        \\ '9': '9 ',", b'        \\}', b'', b'"}}}', b'', b'" Linting -------------------------------------------------------------------{{{', b'', b'  autocmd! BufWinEnter * NeomakeDisable', b'  autocmd! BufWritePost * Neomake', b"  let g:neomake_warning_sign = {'text': '!!'}", b"  let g:neomake_error_sign = {'text': 'X'}", b'', b'"}}}']]
2017-08-08 04:25:27,054 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [b'""      \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84    \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84     \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x84   \xe2\x96\x84\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""    \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x84  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x80   \xe2\x96\x80\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80   \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x80', b'""                                                         \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88              "', b'" Author: Mr. Corvi', b'" we are good', b'', b'" Setup dein  ---------------------------------------------------------------{{{', b'  if (!isdirectory(expand("$HOME/.config/nvim/repos/github.com/Shougo/dein.vim")))', b'    call system(expand("mkdir -p $HOME/.config/nvim/repos/github.com"))', b'    call system(expand("git clone https://github.com/Shougo/dein.vim $HOME/.config/nvim/repos/github.com/Shougo/dein.vim"))', b'  endif', b'', b'  set runtimepath+=~/.config/nvim/repos/github.com/Shougo/dein.vim/', b"  call dein#begin(expand('~/.config/nvim'))", b"  call dein#add('Shougo/dein.vim')", b"  call dein#add('haya14busa/dein-command.vim')", b'" syntax', b"  call dein#add('othree/html5.vim')", b"  call dein#add('othree/yajs.vim')", b"  call dein#add('othree/jsdoc-syntax.vim')", b"  call dein#add('heavenshell/vim-jsdoc')", b"  call dein#add('elzr/vim-json')", b"  call dein#add('HerringtonDarkholme/yats.vim')", b"  call dein#add('skwp/vim-html-escape')", b"  call dein#add('hail2u/vim-css3-syntax')", b"  call dein#add('ap/vim-css-color')", b"  call dein#add('tpope/vim-markdown', {'on_ft': 'markdown'})", b"  call dein#add('dhruvasagar/vim-table-mode')", b"  call dein#add('nelstrom/vim-markdown-folding', {'on_ft': 'markdown'})", b"  call dein#add('rhysd/vim-grammarous')", b"  call dein#add('tmhedberg/SimpylFold', {'on_ft': 'python'})", b"  call dein#add('tmux-plugins/vim-tmux')", b"  call dein#add('itmammoth/doorboy.vim')", b"  call dein#add('valloric/MatchTagAlways', {'on_ft': 'html'})", b"  call dein#add('tpope/vim-fugitive')", b"  call dein#add('tpope/vim-rhubarb')", b"  call dein#add('chemzqm/vim-easygit')", b"  call dein#add('jreybert/vimagit', {'on_cmd': ['Magit', 'MagitOnly']})", b"  call dein#add('sgeb/vim-diff-fold')", b"  call dein#add('airblade/vim-gitgutter')", b"  call dein#add('junegunn/gv.vim')", b"  call dein#add('lambdalisue/gina.vim')", b"  call dein#add('scrooloose/nerdtree')", b"  call dein#add('Xuyuanp/nerdtree-git-plugin')", b"  call dein#add('tpope/vim-repeat')", b"  call dein#add('tpope/vim-unimpaired')", b"  call dein#add('neomake/neomake', {'on_cmd': 'Neomake'})", b"  call dein#add('digitaltoad/vim-pug')", b"  call dein#add('editorconfig/editorconfig-vim')", b"  call dein#add('rhysd/vim-color-spring-night')", b"  call dein#add('AndrewRadev/switch.vim')", b"  call dein#add('christoomey/vim-tmux-navigator')", b"  call dein#add('vim-airline/vim-airline')", b"  call dein#add('tpope/vim-surround')", b"  call dein#add('tomtom/tcomment_vim')", b"  call dein#add('mattn/emmet-vim')", b"  call dein#add('sbdchd/neoformat')", b'  " theme', b"  call dein#add('bluz71/vim-moonfly-colors')", b"  call dein#add('smancill/darkglass')", b"  call dein#add('roosta/vim-srcery')", b"  call dein#add('sonjapeterson/1989.vim')", b"  call dein#add('vim-scripts/turbo.vim')", b"  call dein#add('stulzer/heroku-colorscheme')", b"  call dein#add('vim-scripts/proton')", b"  call dein#add('MaxSt/FlatColor')", b"  call dein#add('vim-scripts/pink')", b"  call dein#add('vim-scripts/synic.vim')", b"  call dein#add('vim-airline/vim-airline-themes')", b'" deoplete stuff', b"  call dein#add('Shougo/deoplete.nvim')", b"  call dein#add('Shougo/deol.nvim')", b'', b"  call dein#add('Shougo/denite.nvim')", b"  call dein#add('jremmen/vim-ripgrep')", b'  " call dein#add(\'ctrlpvim/ctrlp.vim\')', b'', b"  call dein#add('Shougo/neomru.vim')", b"  call dein#add('Shougo/context_filetype.vim')", b"  call dein#add('chemzqm/denite-git')", b"  call dein#add('ternjs/tern_for_vim', {'build': 'npm install'})", b"  call dein#add('carlitux/deoplete-ternjs')", b"  call dein#add('artur-shaik/vim-javacomplete2')", b"  call dein#add('Shougo/neco-vim')", b"  call dein#add('Shougo/neoinclude.vim')", b'  "  dein#add(\'ujihisa/neco-look\')', b"  call dein#add('davidhalter/jedi-vim', {'on_ft': 'python'})", b"  call dein#add('zchee/deoplete-jedi')", b'  " call dein#add(\'zchee/nvim-go\', {\'build\': \'gb build\', \'on_ft\': \'go\'})', b"  call dein#add('zchee/deoplete-go', {'build': 'make'})", b'  " call dein#add(\'nsf/gocode\')', b"  call dein#add('junegunn/limelight.vim')", b"  call dein#add('Konfekt/FastFold')", b"  call dein#add('Shougo/neosnippet.vim')", b"  call dein#add('Shougo/neosnippet-snippets')", b"  call dein#add('Shougo/echodoc.vim')", b"  call dein#add('honza/vim-snippets')", b"  call dein#add('mhinz/vim-sayonara')", b"  call dein#add('mattn/webapi-vim')", b"  call dein#add('mattn/gist-vim')", b"  call dein#add('pocari/vim-denite-gists')", b"  call dein#add('vim-scripts/SyntaxRange')", b"  call dein#add('terryma/vim-multiple-cursors')", b"  call dein#add('MartinLafreniere/vim-PairTools')", b"  call dein#add('Shougo/vimfiler.vim')", b"  call dein#add('Shougo/unite.vim')", b"  call dein#add('junegunn/gv.vim')", b"  call dein#local('~/GitHub', {},['vim-folds'])", b"  call dein#local('~/GitHub', {},['oceanic-next'])", b'  " call dein#local(\'~/GitHub\', {},[\'operator-next\'])', b"  call dein#local('~/GitHub', {},['nvim-typescript'])", b"  call dein#add('chemzqm/denite-git')", b"  call dein#add('sjl/vitality.vim')", b"  call dein#add('ryanoasis/vim-devicons')", b"  call dein#add('tiagofumo/vim-nerdtree-syntax-highlight')", b'  " call dein#add(\'suan/vim-instant-markdown\')', b"  call dein#add('JamshedVesuna/vim-markdown-preview')", b"  call dein#add('vingorius/pug-beautifier')", b'  call dein#add("flowtype/vim-flow")', b'  if dein#check_install()', b'    call dein#install()', b'    let pluginsExist=1', b'  endif', b'', b'  call dein#end()', b'  filetype plugin indent on', b'  filetype plugin on', b'" }}}', b'', b'" System Settings  ----------------------------------------------------------{{{', b'', b'  " source ~/.local.vim', b'" Neovim Settings', b'  set termguicolors', b'  let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1', b'  set clipboard+=unnamedplus', b'  set pastetoggle=<f6>', b'  set nopaste', b'  autocmd BufWritePre * %s/\\s\\+$//e', b'  set noshowmode', b'  set noswapfile', b'  filetype on', b'  set  number', b'  set relativenumber', b'  set numberwidth=1', b'  set tabstop=4 shiftwidth=4 expandtab', b'  set conceallevel=0', b'  set virtualedit=', b'  set wildmenu', b'  set laststatus=2', b'  set wrap linebreak nolist', b'  set wildmode=full', b'  set autoread', b'  set smartcase', b'  set ignorecase', b'" leader is ,', b"  let mapleader = ';'", b'  " set undofile', b'  " set undodir="$HOME/.VIM_UNDO_FILES"', b'', b'  try', b'      set undodir=$HOME/undodir', b'      set undofile', b'  catch', b'  endtry', b'', b'" Remember cursor position between vim sessions', b' autocmd BufReadPost *', b'             \\ if line("\'\\"") > 0 && line ("\'\\"") <= line("$") |', b'             \\   exe "normal! g\'\\"" |', b'             \\ endif', b'             " center buffer around cursor when opening files', b'  autocmd BufRead * normal zz', b'  " set updatetime=500', b'  set complete=.,w,b,u,t,k', b'  autocmd InsertEnter * let save_cwd = getcwd() | set autochdir', b"  autocmd InsertLeave * set noautochdir | execute 'cd' fnameescape(save_cwd)", b'  set formatoptions+=t', b'  set inccommand=nosplit', b'  set shortmess=atIc', b'  set isfname-==', b'  set nospell', b'', b'  set breakindent', b'" }}}', b'', b'" System mappings  ----------------------------------------------------------{{{', b'', b'', b'"Refresh vim', b'  nnoremap <f5> :so $MYVIMRC<CR>', b'', b'" No need for ex mode', b'  nnoremap Q <nop>', b'  vnoremap // y/<C-R>"<CR>', b'', b'', b'" Use enter to make new lines', b'  nmap <CR> o<Esc>', b'  nmap <S-CR> O<Esc>', b'', b'" Use <A-o> <Shift><A-o> in order to create new line above  or below in normal mode', b'  nmap \xc3\xb8 o<esc>', b'  nmap \xc3\x98 O<esc>', b'', b'" Use <A-o> <Shift><A-o> in order to create new line above  or below in normal mode', b'  inoremap \xc3\xb8 <cr>', b'  inoremap \xc3\x98 <esc>O', b'', b'" Pressing ,ss will toggle and untoggle spell checking', b'  map <leader>ss :setlocal spell!<cr>', b'', b'  " Save via leader+w', b'  nnoremap <leader>w :w<cr>', b'', b'" press i twice for normal mode', b'  inoremap ii <esc>', b'', b'" Select all', b'  nnoremap \xc3\xa5 ggVG', b'', b'" Navigate between display lines', b'  noremap  <silent> <Up>   gk', b'  noremap  <silent> <Down> gj', b'  noremap  <silent> k gk', b'  noremap  <silent> j gj', b'  noremap  <silent> <Home> g<Home>', b'  noremap  <silent> <End>  g<End>', b'  inoremap <silent> <Home> <C-o>g<Home>', b'  inoremap <silent> <End>  <C-o>g<End>', b'  inoremap \xe2\x88\x86 <Down>', b'  inoremap \xcb\x9a <Up>', b'  inoremap \xc2\xac <Right>', b'  inoremap \xcb\x99 <Left>', b'', b'" Add semicolon to end of line', b'  nnoremap \xe2\x80\xa6 A;<esc>', b'', b'" Toggle Neomake globally', b'  nnoremap <leader>nt :NeomakeToggle<cr>', b'', b'" Vertical Split', b'  nnoremap <leader>sp :sp<CR>', b'" Horizontal Split', b'  nnoremap <leader>vs :vs<CR>', b'" Close All Window Except Current', b'  nnoremap <leader>on :on<CR>', b'" Close Current Window', b'  nnoremap <leader>clo :clo<CR>', b'" Close current buffer', b'  nnoremap <leader>bd :bd<CR>', b'" Update Buffer', b'  noremap <leader>ct :checktime<CR>', b'', b'" copy current files path to clipboard', b'  nmap cp :let @+= expand("%") <cr>', b'" Neovim terminal mapping', b'" terminal \'normal mode\'', b'  tmap <esc> <c-\\><c-n><esc><cr>', b'" exit insert, dd line, enter insert', b'  inoremap <c-d> <esc>ddi', b'  noremap H ^', b'  noremap L g_', b'  noremap J 5j', b'  noremap K 5k', b'', b'', b'', b'" this is the best, let me tell you why', b'" how annoying is that everytime you want to do something in vim', b'" you have to do shift-; to get :, can\'t we just do ;?', b'" Plus what does ; do anyways??', b'" if you do have a plugin that needs ;, you can just swap the mapping', b'" nnoremap : ;', b'" " give it a try and you will like it', b'"   nnoremap ; :', b'', b'" Toggle file type completion', b'  inoremap <c-f> <c-x><c-f>', b'', b'" Copy to osx clipboard', b'  vnoremap <C-c> "*y<CR>', b'  " vnoremap y "*y<CR>', b'  " nnoremap Y "*Y<CR>', b'  " vnoremap y myy`y', b' vnoremap Y myY`y', b"  let g:multi_cursor_next_key='<C-n>'", b"  let g:multi_cursor_prev_key='<C-p>'", b"  let g:multi_cursor_skip_key='<C-x>'", b'" let g:multi_cursor_quit_key=\'<Esc>\'', b'', b'  " Commenting', b'  nnoremap <leader>lc :TComment<cr>', b'  vnoremap <leader>lc :TComment<cr>', b'  vnoremap <leader>mc :TCommentBlock<cr>', b'  vnoremap <leader>lbc :TCommentInline<cr>', b'', b'', b'" Align blocks of text and keep them selected', b'  vmap < <gv', b'  vmap > >gv', b'  nnoremap <leader>d "_d', b'  vnoremap <leader>d "_d', b'  nnoremap <silent> <esc> :noh<cr>', b'', b'  nnoremap <leader>e :call <SID>SynStack()<CR>', b'  function! <SID>SynStack()', b'    if !exists("*synstack")', b'      return', b'    endif', b'    echo map(synstack(line(\'.\'), col(\'.\')), \'synIDattr(v:val, "name")\')', b'  endfunc', b'', b'  function! s:PlaceholderImgTag(size)', b"    let url = 'http://dummyimage.com/' . a:size . '/000000/555555'", b"    let [width,height] = split(a:size, 'x')", b'    execute "normal a<img src=\\"".url."\\" width=\\"".width."\\" height=\\"".height."\\" />"', b'    endfunction', b'  command! -nargs=1 PlaceholderImgTag call s:PlaceholderImgTag(<f-args>)', b'', b'"}}}"', b'', b'" , Commands, etc  ----------------------------------------------------{{{', b'  syntax on', b'  colorscheme spring-night', b'  " let g:OceanicNext_italic = 1', b'', b'  "Colorscheme', b'  set background=dark', b'', b'  " Remove \'|\' character fom split window border (note blank space after', b'  " back slash)', b'  set fillchars+=vert:\\', b'', b'  " Change split window bar color', b'  hi VertSplit ctermfg=NONE ctermbg=NONE cterm=NONE', b'  hi VertSplit guifg=NONE guibg=NONE gui=NONE', b'', b'', b'  " Change color of Search Highlight', b'  hi Search cterm=NONE ctermfg=NONE ctermbg=red', b'  hi Search gui=NONE guifg=red guibg=lightgreen', b'  hi CursorLineNr cterm=NONE ctermfg=yellow ctermbg=red', b'  hi CursorLineNr gui=NONE guifg=yellow guibg=red', b'', b'  " Neomake sign colors', b'  hi NeomakeErrorSign guifg=red', b'  hi NeomakeWarningSign guifg=yellow', b'  hi NeomakeErrorSign guibg=bg', b'  hi NeomakeWarningSign guibg=bg', b'  hi NeomakeErrorSign ctermfg=red', b'  hi NeomakeWarningSign ctermfg=yellow', b'', b'', b'"}}}', b'', b'" MarkDown ------------------------------------------------------------------{{{', b'', b'  noremap <leader>TM :TableModeToggle<CR>', b'  let g:table_mode_corner="|"', b'', b'  let g:neomake_markdown_proselint_maker = {', b"      \\ 'errorformat': '%W%f:%l:%c: %m',", b"      \\ 'postprocess': function('neomake#postprocess#GenericLengthPostprocess'),", b'      \\}', b"  let g:neomake_markdown_enabled_makers = ['alex', 'proselint']", b'', b'', b'', b'  let g:instant_markdown_autostart = 0', b'  let g:instant_markdown_slow = 1', b'  let vim_markdown_preview_github=1', b'"}}}', b'', b'" Javascript ----------------------------------------------------------------{{{', b'', b'', b'  " let g:neoformat_enabled_javascript = [\'jsbeautfy\']', b'  " let g:neomake_highlight_columns = 1', b'  " let g:neomake_open_list = 1', b"  let g:neomake_javascript_enabled_makers = ['eslint']", b'  let g:neomake_verbose = 1', b'  let g:neomake_javascript_eslint_maker = {', b"    \\ 'args': ['--no-color', '--format', 'compact'],", b"    \\ 'errorformat': '%f: line %l\\, col %c\\, %m'", b'    \\ }', b"  let g:eslint_path = system('PATH=$(npm bin):$PATH && which eslint')", b"  let g:neomake_javascript_eslint_exe=substitute(g:eslint_path, '^\\n*\\s*\\(.\\{-}\\)\\n*\\s*$', '\\1', '')", b'', b'', b'  " Mapping for jsdoc Documentation', b'   autocmd FileType javascript nnoremap <leader>dc :JsDoc<CR>', b'', b'    " To disable this, set to 0 in your ~/.vimrc, like so:', b'    let g:flow#enable = 0', b'', b'  let g:jsx_ext_required = 1', b'  let g:jsdoc_allow_input_prompt = 1', b'  let g:jsdoc_input_description = 1', b'  let g:vim_json_syntax_conceal = 0', b"  let g:tern#command = ['tern']", b"  let g:tern#arguments = ['--persistent']", b'', b'  " let g:nvim_typescript#signature_complete=1', b'  " let g:nvim_typescript#type_info_on_hold=1', b'  " let g:nvim_typescript#max_completion_detail=100', b'  "', b'  let g:neomake_typescript_tsc_maker = {', b"            \\ 'append_file': 0,", b"            \\ 'args': ['--project', getcwd() . '/tsconfig.json', '--noEmit'],", b"            \\ 'errorformat':", b"            \\   '%E%f %#(%l\\,%c): error %m,' .", b"            \\   '%E%f %#(%l\\,%c): %m,' .", b"            \\   '%Eerror %m,' .", b"            \\   '%C%\\s%\\+%m'", b'            \\}', b'', b"  let g:neomake_typescript_enabled_makers = ['tsc']", b'  map <silent> <leader>gd :TSDoc <cr>', b'  map <silent> <leader>gt :TSType <cr>', b'  map <silent> <leader>@ :Denite -buffer-name=TSDocumentSymbol TSDocumentSymbol <cr>', b'  " autocmd FileType typescript setl omnifunc=TSComplete', b'  let g:nvim_typescript#kind_symbols = {', b"      \\ 'keyword': 'keyword',", b"      \\ 'class': '\xef\x83\xa8',", b"      \\ 'interface': 'interface',", b"      \\ 'script': 'script',", b"      \\ 'module': '\xef\x86\xb2',", b"      \\ 'local class': 'local class',", b"      \\ 'type': 'type',", b"      \\ 'enum': '\xef\x87\xa0',", b"      \\ 'enum member': '\xef\x86\xb2',", b"      \\ 'alias': '\xef\x87\x8b',", b"      \\ 'type parameter': 'type param',", b"      \\ 'primitive type': 'primitive type',", b"      \\ 'var': '\xef\x84\xa1',", b"      \\ 'local var': '\xef\x84\xa1',", b"      \\ 'property': '\xef\x82\xad',", b"      \\ 'let': '\xef\x84\xa1',", b"      \\ 'const': '\xef\x84\xa1',", b"      \\ 'label': 'label',", b"      \\ 'parameter': 'param',", b"      \\ 'index': 'index',", b"      \\ 'function': '\xef\x80\x93',", b"      \\ 'local function': 'local function',", b"      \\ 'method': '\xef\x83\xa7',", b"      \\ 'getter': '\xef\x82\xad',", b"      \\ 'setter': '\xef\x82\xad',", b"      \\ 'call': 'call',", b"      \\ 'constructor': '\xef\x86\xb2',", b'      \\}', b'" }}}', b'', b'" Java ----------------------------------------------------------------------{{{', b'', b'  autocmd FileType java setlocal omnifunc=javacomplete#Complete', b'', b'"}}}', b'', b'" HTML ----------------------------------------------------------------------{{{', b'  let g:neomake_html_enabled_makers = []', b"  let g:neoformat_enabled_pug = ['pug-beautifier']", b'', b'" }}}', b'', b'" Go ------------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" CSS -----------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" Lua -----------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" Python --------------------------------------------------------------------{{{', b'', b'  " let g:python_host_prog = \'/usr/local/bin/python2\'', b"  let g:python3_host_prog = '/usr/local/bin/python3'", b"  let $NVIM_PYTHON_LOG_FILE='nvim-python.log'", b'  let g:jedi#auto_vim_configuration = 0', b'  let g:jedi#documentation_command = "<leader>k"', b'', b'', b'  " let g:neoformat_enabled_htmldjango = [\'html-beautify\']', b'', b'" }}}', b'', b'" Fold, gets it\'s own section  ----------------------------------------------{{{', b'', b'  function! MyFoldText() " {{{', b'      let line = getline(v:foldstart)', b'      let nucolwidth = &fdc + &number * &numberwidth', b'      let windowwidth = winwidth(0) - nucolwidth - 3', b'      let foldedlinecount = v:foldend - v:foldstart', b'', b'      " expand tabs into spaces', b'      " let onetab = strpart(\'          \', 0, &tabstop)', b'      " let line = substitute(line, \'\\t\', onetab, \'g\')', b'', b'      let line = strpart(line, 0, windowwidth - 2 -len(foldedlinecount))', b'      " let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - len(\'lines\')', b'      " let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - len(\'lines   \')', b'      let fillcharcount = windowwidth - len(line)', b'      " return line . \'\xe2\x80\xa6\' . repeat(" ",fillcharcount) . foldedlinecount . \' Lines\'', b'      return line . \'\xe2\x80\xa6\' . repeat(" ",fillcharcount)', b'  endfunction " }}}', b'', b'', b'  set foldtext=MyFoldText()', b'', b"  autocmd InsertEnter * if !exists('w:last_fdm') | let w:last_fdm=&foldmethod | setlocal foldmethod=manual | endif", b"  autocmd InsertLeave,WinLeave * if exists('w:last_fdm') | let &l:foldmethod=w:last_fdm | unlet w:last_fdm | endif", b'', b'  autocmd FileType vim setlocal fdc=1', b'  set foldlevel=99', b'', b'  " Space to toggle folds.', b'  nnoremap <Space> za', b'  vnoremap <Space> za', b'  autocmd FileType vim setlocal foldmethod=marker', b'  autocmd FileType vim setlocal foldlevel=0', b'', b'  autocmd FileType javascript,html,css,scss,typescript setlocal foldlevel=99', b'', b'  autocmd FileType css,scss,json setlocal foldmethod=marker', b'  autocmd FileType css,scss,json setlocal foldmarker={,}', b'', b'  autocmd FileType coffee setl foldmethod=indent', b'  let g:xml_syntax_folding = 1', b'  autocmd FileType xml setl foldmethod=syntax', b'', b'  autocmd FileType html setl foldmethod=expr', b'  autocmd FileType html setl foldexpr=HTMLFolds()', b'', b'  autocmd FileType javascript,typescript,json setl foldmethod=syntax', b'', b'" }}}', b'', b'" Git -----------------------------------------------------------------------{{{', b'', b'  let g:gitgutter_sign_column_always = 1', b'', b'" }}}', b'', b'" NERDTree ------------------------------------------------------------------{{{', b'', b'  let g:vimfiler_ignore_pattern = ""', b'  " map <silent> - :VimFiler<CR>', b"\tlet g:vimfiler_tree_leaf_icon = ''", b"\tlet g:vimfiler_tree_opened_icon = '\xef\x81\xb8'", b"\tlet g:vimfiler_tree_closed_icon = '\xef\x81\x94'", b"\tlet g:vimfiler_file_icon = ''", b"\tlet g:vimfiler_marked_file_icon = '*'", b'  let g:vimfiler_expand_jump_to_first_child = 0', b'  " let g:vimfiler_as_default_explorer = 1', b"  call unite#custom#profile('default', 'context', {", b"              \\'direction': 'botright',", b'              \\ })', b"  call vimfiler#custom#profile('default', 'context', {", b"              \\ 'explorer' : 1,", b"              \\ 'winwidth' : 35,", b"              \\ 'winminwidth' : 35,", b"              \\ 'toggle' : 1,", b"              \\ 'auto_expand': 0,", b"              \\ 'parent': 1,", b"              \\ 'explorer_columns': 'devicons:git',", b"              \\ 'status' : 0,", b"              \\ 'safe' : 0,", b"              \\ 'split' : 1,", b"              \\ 'hidden': 1,", b"              \\ 'no_quit' : 1,", b"              \\ 'force_hide' : 0,", b'              \\ })', b'  augroup vfinit', b'  autocmd FileType vimfiler call s:vimfilerinit()', b'  augroup END', b'  function! s:vimfilerinit()', b'      set nonumber', b'      set norelativenumber', b'      nmap <silent><buffer><expr> <CR> vimfiler#smart_cursor_map(', b'            \\ "\\<Plug>(vimfiler_expand_tree)",', b'            \\ "\\<Plug>(vimfiler_edit_file)"', b'            \\)', b'      nmap <silent> m :call NerdUnite()<cr>', b'      nmap <silent> r <Plug>(vimfiler_redraw_screen)', b'  endf', b'  " let g:vimfiler_ignore_pattern = \'^\\%(\\.git\\|\\.DS_Store\\)$\'', b'  let g:webdevicons_enable_vimfiler = 0', b'  let g:vimfiler_no_default_key_mappings=1', b'  function! NerdUnite() abort "{{{', b'    let marked_files =  vimfiler#get_file(b:vimfiler)', b"    call unite#start(['nerd'], {'file': marked_files})", b'\tendfunction "}}}', b'', b'  map <silent> - :NERDTreeToggle<CR>', b'  augroup ntinit', b'  autocmd FileType nerdtree call s:nerdtreeinit()', b'  augroup END', b'  function! s:nerdtreeinit()', b'      nunmap <buffer> K', b'      nunmap <buffer> J', b'  endf', b'  let NERDTreeShowHidden=1', b'  let NERDTreeHijackNetrw=0', b'  let g:WebDevIconsUnicodeDecorateFolderNodes = 1', b'  let g:NERDTreeWinSize=30', b"  let NERDTreeWinPos = 'right'", b'  let g:NERDTreeAutoDeleteBuffer=1', b"  let g:WebDevIconsOS = 'Darwin'", b'  let NERDTreeMinimalUI=1', b'  let NERDTreeCascadeSingleChildDir=1', b"  let g:NERDTreeHeader = 'hello'", b'', b'', b'" let g:webdevicons_conceal_nerdtree_brackets = 0', b'  " let g:WebDevIconsNerdTreeAfterGlyphPadding = \'\'', b'  " \xef\x90\x81', b'  let g:NERDTreeShowIgnoredStatus = 0', b'  " let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = 1', b'  " let g:NERDTreeDirArrows = 1', b"  let g:NERDTreeDirArrowExpandable = '\xef\x81\x94'", b"  let g:NERDTreeDirArrowCollapsible = '\xef\x81\xb8'", b"  let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = '\xef\x90\x93'", b'"}}}', b'', b'" Nvim terminal -------------------------------------------------------------{{{', b'', b"  au BufEnter * if &buftype == 'terminal' | :startinsert | endif", b'  autocmd BufEnter term://* startinsert', b'  autocmd TermOpen * set bufhidden=hide', b'', b'" }}}', b'', b'" Vim-Devicons -------------------------------------------------------------0{{{', b'', b'  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {} " needed', b"  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['js'] = '\xee\x9e\x81'", b"  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['vim'] = '\xee\x98\xab'", b'', b'" }}}', b'', b'" Code formatting -----------------------------------------------------------{{{', b'', b'" ,f to format code, requires formatters: read the docs', b'  noremap <silent> <leader>f :Neoformat<CR>', b'', b'" }}}', b'', b'" Snipppets -----------------------------------------------------------------{{{', b'', b'" Enable snipMate compatibility feature.', b'  let g:neosnippet#enable_snipmate_compatibility = 1', b'  let g:neosnippet#expand_word_boundary = 1', b'  imap <C-x> <Plug>(neosnippet_expand_or_jump)', b'  smap <C-x> <Plug>(neosnippet_expand_or_jump)', b'  xmap <C-x> <Plug>(neosnippet_expand_target)', b'', b'" SuperTab like snippets behavior.', b'  imap <expr><TAB> neosnippet#expandable_or_jumpable() ?', b'  \\ "\\<Plug>(neosnippet_expand_or_jump)"', b'  \\: pumvisible() ? "\\<C-n>" : "\\<TAB>"', b'  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?', b'  \\ "\\<Plug>(neosnippet_expand_or_jump)"', b'  \\: "\\<TAB>"', b'', b'"}}}', b'', b'" Deoplete ------------------------------------------------------------------{{{', b'', b'" enable deoplete', b'  let g:deoplete#enable_at_startup = 1', b'  let g:echodoc_enable_at_startup=1', b'  set splitbelow', b'  set splitright', b'  set completeopt+=noselect', b'  set completeopt-=preview', b'  autocmd CompleteDone * pclose', b'', b'  function! Multiple_cursors_before()', b'    let b:deoplete_disable_auto_complete=2', b'  endfunction', b'  function! Multiple_cursors_after()', b'    let b:deoplete_disable_auto_complete=0', b'  endfunction', b'  let g:deoplete#file#enable_buffer_path=1', b'', b"  call deoplete#custom#set('buffer', 'mark', '\xe2\x84\xac')", b"  call deoplete#custom#set('ternjs', 'mark', '\xee\x98\x8c')", b"  call deoplete#custom#set('omni', 'mark', '\xe2\x8c\xbe')", b"  call deoplete#custom#set('file', 'mark', 'file')", b"  call deoplete#custom#set('jedi', 'mark', '\xee\x98\x86')", b"  call deoplete#custom#set('typescript', 'mark', '\xee\x98\xa8')", b"  call deoplete#custom#set('neosnippet', 'mark', '\xef\x80\xbc')", b'', b"  call deoplete#custom#set('typescript',  'rank', 630)", b'  " let g:deoplete#omni_patterns = {}', b'  " let g:deoplete#omni_patterns.html = \'\'', b'  function! Preview_func()', b'    if &pvw', b'      setlocal nonumber norelativenumber', b'     endif', b'  endfunction', b'  autocmd WinEnter * call Preview_func()', b'  let g:deoplete#ignore_sources = {}', b"  let g:deoplete#ignore_sources._ = ['around']", b'', b'  " let g:deoplete#enable_debug = 1', b'  " call deoplete#enable_logging(\'DEBUG\', \'deoplete.log\')', b'  " call deoplete#custom#set(\'typescript\', \'debug_enabled\', 1)', b'"}}}', b'', b'" Emmet customization -------------------------------------------------------{{{', b'', b'', b'"  " 1. Expand abbreviation *emmet-expand-abbr', b'"   nnoremap <leader>em, <C-y>,', b'"', b'" " 2. Expand abbreviation *emmet-expand-word* *<C-y>;*', b'"   nnoremap <leader>emt <C-y>;', b'"', b'" " 3. Update tag *emmet-update-tag* *<C-y>u*', b'"   nnoremap <leader>emu <c-y>u', b'"', b'" " 4. Wrap with abbreviation *emmet-wrap-with-abbreviation* *v_<C-y>,*', b'"   vnoremap <leader>em, v_<C-y>,', b'', b'', b'" Remapping <C-y>, just doesn\'t cut it.', b'  function! s:expand_html_tab()', b'" try to determine if we\'re within quotes or tags.', b'" if so, assume we\'re in an emmet fill area.', b"   let line = getline('.')", b"   if col('.') < len(line)", b'     let line = matchstr(line, \'[">][^<"]*\\%\'.col(\'.\').\'c[^>"]*[<"]\')', b'     if len(line) >= 2', b'        return "\\<C-n>"', b'     endif', b'   endif', b'" expand anything emmet thinks is expandable.', b'  if emmet#isExpandable()', b'    return emmet#expandAbbrIntelligent("\\<tab>")', b'    " return "\\<C-y>,"', b'  endif', b'" return a regular tab character', b'  return "\\<tab>"', b'  endfunction', b'  " let g:user_emmet_expandabbr_key=\'<Tab>\'', b'  " imap <expr> <tab> emmet#expandAbbrIntelligent("\\<tab>")', b'', b'  autocmd FileType html,css,scss imap <silent><buffer><expr><tab> <sid>expand_html_tab()', b"  let g:user_emmet_mode='a'", b'  let g:user_emmet_complete_tag = 0', b'  let g:user_emmet_install_global = 0', b'  autocmd FileType html,css,scss EmmetInstall', b'"}}}', b'', b'" Denite --------------------------------------------------------------------{{{', b'', b'  let g:webdevicons_enable_denite = 0', b'  let s:menus = {}', b'', b"  call denite#custom#option('_', {", b"        \\ 'prompt': '\xe2\x9d\xaf',", b"        \\ 'winheight': 10,", b"        \\ 'reversed': 1,", b"        \\ 'highlight_matched_char': 'Underlined',", b"        \\ 'highlight_mode_normal': 'CursorLine',", b"        \\ 'updatetime': 1,", b"        \\ 'auto_resize': 1,", b'        \\})', b"  call denite#custom#option('TSDocumentSymbol', {", b"        \\ 'prompt': ' @' ,", b"        \\ 'reversed': 0,", b'        \\})', b"  call denite#custom#var('file_rec', 'command',", b"    \\ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])", b"  call denite#custom#source('file_rec', 'vars', {", b"        \\ 'command': [", b"        \\ 'ag', '--follow','--nogroup','--hidden', '--column', '-g', '', '--ignore', '.git', '--ignore', '*.png'", b'        \\] })', b'', b"  call denite#custom#var('grep', 'command', ['ag'])", b"\tcall denite#custom#var('grep', 'default_opts',", b"\t\t\t\\ ['-i', '--vimgrep'])", b"\tcall denite#custom#var('grep', 'recursive_opts', [])", b"\tcall denite#custom#var('grep', 'pattern_opt', [])", b"\tcall denite#custom#var('grep', 'separator', ['--'])", b"\tcall denite#custom#var('grep', 'final_opts', [])", b'', b'', b'  " nnoremap <silent> <c-p> :Denite file_rec<CR>', b'  nnoremap <silent> <leader>j :Denite file_rec<CR>', b'  nnoremap <silent> <leader>h :Denite  help<CR>', b'  nnoremap <silent> <leader>c :Denite colorscheme<CR>', b'  nnoremap <silent> <leader>b :Denite buffer<CR>', b'  nnoremap <silent> <leader>a :Denite grep:::!<CR>', b'  nnoremap <silent> <leader>u :call dein#update()<CR>', b'  nnoremap <silent> <Leader>i :Denite menu:ionic <CR>', b"  call denite#custom#map('insert','<C-n>','<denite:move_to_next_line>','noremap')", b"\tcall denite#custom#map('insert','<C-N>','<denite:move_to_previous_line>','noremap')", b"  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',", b"    \\ [ '.git/', '.ropeproject/', '__pycache__/',", b"    \\   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])", b"  call denite#custom#var('menu', 'menus', s:menus)", b'', b'"}}}', b'', b'" Git from denite...ERMERGERD -----------------------------------------------{{{', b'  let s:menus.git = {', b"    \\ 'description' : 'Fugitive interface',", b'    \\}', b'  let s:menus.git.command_candidates = [', b"    \\[' git status', 'Gstatus'],", b"    \\[' git diff', 'Gvdiff'],", b"    \\[' git commit', 'Gcommit'],", b"    \\[' git stage/add', 'Gwrite'],", b"    \\[' git checkout', 'Gread'],", b"    \\[' git rm', 'Gremove'],", b"    \\[' git cd', 'Gcd'],", b'    \\[\' git push\', \'exe "Git! push " input("remote/branch: ")\'],', b'    \\[\' git pull\', \'exe "Git! pull " input("remote/branch: ")\'],', b'    \\[\' git pull rebase\', \'exe "Git! pull --rebase " input("branch: ")\'],', b'    \\[\' git checkout branch\', \'exe "Git! checkout " input("branch: ")\'],', b"    \\[' git fetch', 'Gfetch'],", b"    \\[' git merge', 'Gmerge'],", b"    \\[' git browse', 'Gbrowse'],", b"    \\[' git head', 'Gedit HEAD^'],", b"    \\[' git parent', 'edit %:h'],", b"    \\[' git log commit buffers', 'Glog --'],", b"    \\[' git log current file', 'Glog -- %'],", b'    \\[\' git log last n commits\', \'exe "Glog -" input("num: ")\'],', b'    \\[\' git log first n commits\', \'exe "Glog --reverse -" input("num: ")\'],', b'    \\[\' git log until date\', \'exe "Glog --until=" input("day: ")\'],', b'    \\[\' git log grep commits\',  \'exe "Glog --grep= " input("string: ")\'],', b'    \\[\' git log pickaxe\',  \'exe "Glog -S" input("string: ")\'],', b'    \\[\' git index\', \'exe "Gedit " input("branchname\\:filename: ")\'],', b'    \\[\' git mv\', \'exe "Gmove " input("destination: ")\'],', b'    \\[\' git grep\',  \'exe "Ggrep " input("string: ")\'],', b'    \\[\' git prompt\', \'exe "Git! " input("command: ")\'],', b'    \\] " Append \' --\' after log to get commit info commit buffers', b'"}}}', b'', b'" Ionic denite source -------------------------------------------------------{{{', b'', b'  function! Ionic(job) abort', b'    if a:job ==# "serve"', b'      enew!', b"      let filename = 'Ionic:\\ '. a:job", b"      call termopen('ionic '. a:job)", b"      exe 'file 'filename", b'      startinsert', b'    else', b"      let platform = input('platform: ')", b'      enew!', b"      let filename = 'Ionic:\\ '. a:job", b"      call termopen('ionic '. a:job . ' ' . platform)", b"      exe 'file 'filename", b'      startinsert', b'    endif', b'  endfunction', b'', b'  function ExitHandle()', b'    echom self', b'  endfunction', b'', b'  let s:menus.ionic = {', b"    \\ 'description' : 'some rando ionic stuff',", b'    \\}', b'  let s:menus.ionic.command_candidates = [', b'    \\[\' serve\', \'call Ionic("serve")\' ],', b'    \\[\' run device\', \'call Ionic("run")\'],', b'    \\[\' emulate device\', \'call Ionic("emulate")\'],', b'    \\]', b'"}}}', b'', b'" Navigate between vim buffers and tmux panels ------------------------------{{{', b'', b'  let g:tmux_navigator_no_mappings = 1', b'  nnoremap <silent> <C-j> :TmuxNavigateDown<cr>', b'  nnoremap <silent> <C-k> :TmuxNavigateUp<cr>', b'  nnoremap <silent> <C-l> :TmuxNavigateRight<cr>', b'  nnoremap <silent> <C-h> :TmuxNavigateLeft<CR>', b'  nnoremap <silent> <C-;> :TmuxNavigatePrevious<cr>', b'  tmap <C-j> <C-\\><C-n>:TmuxNavigateDown<cr>', b'  tmap <C-k> <C-\\><C-n>:TmuxNavigateUp<cr>', b'  tmap <C-l> <C-\\><C-n>:TmuxNavigateRight<cr>', b'  tmap <C-h> <C-\\><C-n>:TmuxNavigateLeft<CR>', b'  tmap <C-;> <C-\\><C-n>:TmuxNavigatePrevious<cr>', b'', b'  " Cycle between vim buffer', b'  map <silent> <leader>h :bp<CR>', b'  map <silent> <leader>l :bn<CR>', b'', b'', b'"}}}', b'', b'" vim-airline ---------------------------------------------------------------{{{', b'', b"  if !exists('g:airline_symbols')", b'    let g:airline_symbols = {}', b'  endif', b'  let g:airline#extensions#tabline#enabled = 1', b'  let g:airline#extensions#mike#enabled = 0', b'  set hidden', b"  let g:airline#extensions#tabline#fnamemod = ':t'", b'  let g:airline#extensions#tabline#buffer_idx_mode = 1', b'  let g:airline_powerline_fonts = 1', b"  let g:airline#extensions#neomake#error_symbol='\xe2\x80\xa2 '", b"  let g:airline#extensions#neomake#warning_symbol='\xe2\x80\xa2  '", b"  let g:airline_symbols.branch = '\xef\x90\x98'", b"  let g:airline_theme='solarized'", b'  cnoreabbrev <silent> <expr> x getcmdtype() == ":" && getcmdline() == \'x\' ? \'Sayonara\' : \'x\'', b'  tmap <leader>x <c-\\><c-n>:bp! <BAR> bd! #<CR>', b'  nmap <leader>t :term<cr>', b'  nmap <leader>, :bnext<CR>', b'  tmap <leader>, <C-\\><C-n>:bnext<cr>', b'  nmap <leader>. :bprevious<CR>', b'  tmap <leader>. <C-\\><C-n>:bprevious<CR>', b'  tmap <leader>1  <C-\\><C-n><Plug>AirlineSelectTab1', b'  tmap <leader>2  <C-\\><C-n><Plug>AirlineSelectTab2', b'  tmap <leader>3  <C-\\><C-n><Plug>AirlineSelectTab3', b'  tmap <leader>4  <C-\\><C-n><Plug>AirlineSelectTab4', b'  tmap <leader>5  <C-\\><C-n><Plug>AirlineSelectTab5', b'  tmap <leader>6  <C-\\><C-n><Plug>AirlineSelectTab6', b'  tmap <leader>7  <C-\\><C-n><Plug>AirlineSelectTab7', b'  tmap <leader>8  <C-\\><C-n><Plug>AirlineSelectTab8', b'  tmap <leader>9  <C-\\><C-n><Plug>AirlineSelectTab9', b'  nmap <leader>1 <Plug>AirlineSelectTab1', b'  nmap <leader>2 <Plug>AirlineSelectTab2', b'  nmap <leader>3 <Plug>AirlineSelectTab3', b'  nmap <leader>4 <Plug>AirlineSelectTab4', b'  nmap <leader>5 <Plug>AirlineSelectTab5', b'  nmap <leader>6 <Plug>AirlineSelectTab6', b'  nmap <leader>7 <Plug>AirlineSelectTab7', b'  nmap <leader>8 <Plug>AirlineSelectTab8', b'  nmap <leader>9 <Plug>AirlineSelectTab9', b'  let g:airline#extensions#tabline#buffer_idx_format = {', b"        \\ '0': '0 ',", b"        \\ '1': '1 ',", b"        \\ '2': '2 ',", b"        \\ '3': '3 ',", b"        \\ '4': '4 ',", b"        \\ '5': '5 ',", b"        \\ '6': '6 ',", b"        \\ '7': '7 ',", b"        \\ '8': '8 ',", b"        \\ '9': '9 ',", b'        \\}', b'', b'"}}}', b'', b'" Linting -------------------------------------------------------------------{{{', b'', b'  autocmd! BufWinEnter * NeomakeDisable', b'  autocmd! BufWritePost * Neomake', b"  let g:neomake_warning_sign = {'text': '!!'}", b"  let g:neomake_error_sign = {'text': 'X'}", b'', b'"}}}']
2017-08-08 04:25:27,055 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:27,068 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 33, 'nvim_set_var', ('deoplete#_channel_id', 1)]
2017-08-08 04:25:27,069 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00!\xacnvim_set_var\x92\xb4deoplete#_channel_id\x01''
2017-08-08 04:25:27,069 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1022c8898> to wait for response
2017-08-08 04:25:27,069 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,069 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 32, None, [{b'quickfix': 0, b'winid': 1000, b'height': 37, b'variables': {b'unite_window': {b'time': 1502180726, b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'}, b'airline_current_mode': b'NORMAL', b'airline_lastmode': b'normal', b'airline_section_y': b' %{&fenc . " " . WebDevIconsGetFileFormatSymbol()} ', b'airline_active': 1, b'airline_section_x': b'%{airline#util#wrap(airline#parts#filetype(),0)} %{WebDevIconsGetFileTypeSymbol()} '}, b'width': 78, b'bufnr': 1, b'tabnr': 1, b'loclist': 0, b'winnr': 1}]]
2017-08-08 04:25:27,069 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [{b'quickfix': 0, b'winid': 1000, b'height': 37, b'variables': {b'unite_window': {b'time': 1502180726, b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'}, b'airline_current_mode': b'NORMAL', b'airline_lastmode': b'normal', b'airline_section_y': b' %{&fenc . " " . WebDevIconsGetFileFormatSymbol()} ', b'airline_active': 1, b'airline_section_x': b'%{airline#util#wrap(airline#parts#filetype(),0)} %{WebDevIconsGetFileTypeSymbol()} '}, b'width': 78, b'bufnr': 1, b'tabnr': 1, b'loclist': 0, b'winnr': 1}]
2017-08-08 04:25:27,070 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,070 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 34, 'nvim_get_option', ('columns',)]
2017-08-08 04:25:27,070 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00"\xafnvim_get_option\x91\xa7columns''
2017-08-08 04:25:27,070 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,071 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,071 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,071 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,071 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 33, None, None]
2017-08-08 04:25:27,071 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,071 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x1022c8898>, switching back
2017-08-08 04:25:27,072 [DEBUG @ session.py:handler:208] 64726 - greenlet <greenlet.greenlet object at 0x1022c8898> finished executing
2017-08-08 04:25:27,072 [DEBUG @ session.py:handler:213] 64726 - greenlet <greenlet.greenlet object at 0x1022c8898> is now dying...
2017-08-08 04:25:27,072 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,072 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 34, None, 78]
2017-08-08 04:25:27,072 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 78
2017-08-08 04:25:27,072 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,072 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 35, 'nvim_get_option', ('lines',)]
2017-08-08 04:25:27,073 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00#\xafnvim_get_option\x91\xa5lines''
2017-08-08 04:25:27,073 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,073 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,073 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,073 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,073 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 35, None, 40]
2017-08-08 04:25:27,073 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 40
2017-08-08 04:25:27,074 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,074 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 36, 'nvim_call_function', ('tabpagebuflist', [])]
2017-08-08 04:25:27,074 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00$\xb2nvim_call_function\x92\xaetabpagebuflist\x90''
2017-08-08 04:25:27,074 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,074 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,074 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,075 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,075 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 36, None, [1]]
2017-08-08 04:25:27,075 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [1]
2017-08-08 04:25:27,075 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,075 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 37, 'nvim_call_function', ('winrestcmd', [])]
2017-08-08 04:25:27,075 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00%\xb2nvim_call_function\x92\xaawinrestcmd\x90''
2017-08-08 04:25:27,076 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,076 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,076 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,076 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,076 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 37, None, b'1resize 37|vert 1resize 78|']
2017-08-08 04:25:27,076 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'1resize 37|vert 1resize 78|'
2017-08-08 04:25:27,076 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,077 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 38, 'nvim_call_function', ('denite#util#execute_path', ['silent keepalt botright  new ', '[denite]'])]
2017-08-08 04:25:27,077 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00&\xb2nvim_call_function\x92\xb8denite#util#execute_path\x92\xbdsilent keepalt botright  new \xa8[denite]''
2017-08-08 04:25:27,077 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,077 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,077 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,146 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,146 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 38, None, 0]
2017-08-08 04:25:27,146 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,146 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,146 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 39, 'nvim_get_current_win', ()]
2017-08-08 04:25:27,147 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00'\xb4nvim_get_current_win\x90"'
2017-08-08 04:25:27,147 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,147 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,147 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,147 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,147 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 39, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:27,147 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:27,148 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,148 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 40, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:27,148 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00(\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:27,148 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,148 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,148 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,148 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,148 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 40, None, 18]
2017-08-08 04:25:27,149 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 18
2017-08-08 04:25:27,149 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,149 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 41, 'nvim_command', ('resize 10',)]
2017-08-08 04:25:27,149 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00)\xacnvim_command\x91\xa9resize 10''
2017-08-08 04:25:27,149 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,149 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,149 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,149 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,150 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 41, None, None]
2017-08-08 04:25:27,150 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,150 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,150 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 42, 'nvim_get_current_win', ()]
2017-08-08 04:25:27,150 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00*\xb4nvim_get_current_win\x90''
2017-08-08 04:25:27,150 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,150 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,150 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,150 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,151 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 42, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:27,151 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:27,151 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,151 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 43, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:27,151 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00+\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:27,151 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,151 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,151 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,151 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,152 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 43, None, 10]
2017-08-08 04:25:27,152 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:27,152 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,152 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 44, 'nvim_get_current_win', ()]
2017-08-08 04:25:27,152 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00,\xb4nvim_get_current_win\x90''
2017-08-08 04:25:27,152 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,152 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,152 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,153 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,153 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 44, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:27,153 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:27,153 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,153 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 45, 'nvim_win_get_width', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:27,153 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00-\xb2nvim_win_get_width\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:27,153 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,153 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,153 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,154 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,154 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 45, None, 78]
2017-08-08 04:25:27,154 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 78
2017-08-08 04:25:27,154 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,154 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 46, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,154 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00.\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,154 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,154 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,154 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,155 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,155 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 46, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,155 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,155 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,155 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 47, 'nvim_buf_set_option', (ExtType(code=0, data=b'\x02'), 'buftype', 'nofile')]
2017-08-08 04:25:27,155 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00/\xb3nvim_buf_set_option\x93\xd4\x00\x02\xa7buftype\xa6nofile''
2017-08-08 04:25:27,155 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,155 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,155 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,156 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,156 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 47, None, None]
2017-08-08 04:25:27,156 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,156 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,156 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 48, 'nvim_buf_set_option', (ExtType(code=0, data=b'\x02'), 'swapfile', False)]
2017-08-08 04:25:27,156 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x000\xb3nvim_buf_set_option\x93\xd4\x00\x02\xa8swapfile\xc2''
2017-08-08 04:25:27,156 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,156 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,157 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,157 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,157 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 48, None, None]
2017-08-08 04:25:27,157 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,157 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,157 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 49, 'nvim_buf_set_option', (ExtType(code=0, data=b'\x02'), 'buflisted', False)]
2017-08-08 04:25:27,157 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x001\xb3nvim_buf_set_option\x93\xd4\x00\x02\xa9buflisted\xc2''
2017-08-08 04:25:27,157 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,157 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,158 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,158 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,158 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 49, None, None]
2017-08-08 04:25:27,158 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,158 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,158 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 50, 'nvim_buf_set_option', (ExtType(code=0, data=b'\x02'), 'filetype', 'denite')]
2017-08-08 04:25:27,158 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x002\xb3nvim_buf_set_option\x93\xd4\x00\x02\xa8filetype\xa6denite''
2017-08-08 04:25:27,158 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,158 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,159 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,159 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,159 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 50, None, None]
2017-08-08 04:25:27,159 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,159 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,159 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 51, 'nvim_get_current_win', ()]
2017-08-08 04:25:27,159 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x003\xb4nvim_get_current_win\x90''
2017-08-08 04:25:27,159 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,160 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,160 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,160 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,160 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 51, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:27,160 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:27,160 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,160 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 52, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'conceallevel')]
2017-08-08 04:25:27,160 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x004\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xacconceallevel''
2017-08-08 04:25:27,160 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,161 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,161 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,161 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,161 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 52, None, 0]
2017-08-08 04:25:27,161 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,161 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,161 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 53, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'conceallevel', 3)]
2017-08-08 04:25:27,161 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x005\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xacconceallevel\x03''
2017-08-08 04:25:27,162 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,162 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,162 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,162 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,162 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 53, None, None]
2017-08-08 04:25:27,162 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,162 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,162 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 54, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'foldcolumn')]
2017-08-08 04:25:27,162 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x006\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xaafoldcolumn''
2017-08-08 04:25:27,163 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,163 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,163 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,163 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,163 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 54, None, 0]
2017-08-08 04:25:27,163 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,163 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,163 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 55, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'foldcolumn', 0)]
2017-08-08 04:25:27,163 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x007\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xaafoldcolumn\x00''
2017-08-08 04:25:27,164 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,164 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,164 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,164 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,164 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 55, None, None]
2017-08-08 04:25:27,164 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,164 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,164 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 56, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'cursorline')]
2017-08-08 04:25:27,164 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x008\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xaacursorline''
2017-08-08 04:25:27,165 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,165 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,165 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,165 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,165 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 56, None, False]
2017-08-08 04:25:27,165 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, False
2017-08-08 04:25:27,165 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,165 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 57, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'cursorline', True)]
2017-08-08 04:25:27,166 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x009\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xaacursorline\xc3''
2017-08-08 04:25:27,166 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,166 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,166 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,166 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,166 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 57, None, None]
2017-08-08 04:25:27,166 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,166 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,167 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 58, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'foldenable')]
2017-08-08 04:25:27,167 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00:\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xaafoldenable''
2017-08-08 04:25:27,167 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,167 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,167 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,167 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,167 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 58, None, True]
2017-08-08 04:25:27,168 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, True
2017-08-08 04:25:27,168 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,168 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 59, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'foldenable', False)]
2017-08-08 04:25:27,168 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00;\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xaafoldenable\xc2''
2017-08-08 04:25:27,168 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,168 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,168 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,169 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,169 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 59, None, None]
2017-08-08 04:25:27,169 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,169 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,169 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 60, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'number')]
2017-08-08 04:25:27,169 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00<\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xa6number''
2017-08-08 04:25:27,169 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,169 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,170 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,170 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,170 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 60, None, True]
2017-08-08 04:25:27,170 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, True
2017-08-08 04:25:27,171 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,171 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 61, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'number', False)]
2017-08-08 04:25:27,171 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00=\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xa6number\xc2''
2017-08-08 04:25:27,171 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,171 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,171 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,171 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,172 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 61, None, None]
2017-08-08 04:25:27,172 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,172 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,172 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 62, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'concealcursor')]
2017-08-08 04:25:27,172 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00>\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xadconcealcursor''
2017-08-08 04:25:27,172 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,172 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,173 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,173 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,173 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 62, None, b'']
2017-08-08 04:25:27,173 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b''
2017-08-08 04:25:27,173 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,173 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 63, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'concealcursor', 'n')]
2017-08-08 04:25:27,173 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00?\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xadconcealcursor\xa1n''
2017-08-08 04:25:27,174 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,174 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,174 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,174 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,174 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 63, None, None]
2017-08-08 04:25:27,174 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,174 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,174 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 64, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'list')]
2017-08-08 04:25:27,174 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00@\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xa4list''
2017-08-08 04:25:27,175 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,175 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,175 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,175 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,175 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 64, None, False]
2017-08-08 04:25:27,175 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, False
2017-08-08 04:25:27,175 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,175 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 65, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'list', False)]
2017-08-08 04:25:27,176 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00A\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xa4list\xc2''
2017-08-08 04:25:27,176 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,176 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,176 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,176 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,176 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 65, None, None]
2017-08-08 04:25:27,176 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,176 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,176 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 66, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'colorcolumn')]
2017-08-08 04:25:27,177 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00B\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xabcolorcolumn''
2017-08-08 04:25:27,177 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,177 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,177 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,177 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,177 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 66, None, b'']
2017-08-08 04:25:27,177 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b''
2017-08-08 04:25:27,177 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,177 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 67, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'colorcolumn', '')]
2017-08-08 04:25:27,178 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00C\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xabcolorcolumn\xa0''
2017-08-08 04:25:27,178 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,178 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,178 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,178 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,178 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 67, None, None]
2017-08-08 04:25:27,178 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,178 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,178 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 68, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'relativenumber')]
2017-08-08 04:25:27,179 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00D\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xaerelativenumber''
2017-08-08 04:25:27,179 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,179 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,179 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,179 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,179 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 68, None, True]
2017-08-08 04:25:27,179 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, True
2017-08-08 04:25:27,179 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,179 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 69, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'relativenumber', False)]
2017-08-08 04:25:27,180 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00E\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xaerelativenumber\xc2''
2017-08-08 04:25:27,180 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,180 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,180 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,180 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,180 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 69, None, None]
2017-08-08 04:25:27,180 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,180 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,181 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 70, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'wrap')]
2017-08-08 04:25:27,181 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00F\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xa4wrap''
2017-08-08 04:25:27,181 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,181 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,181 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,181 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,181 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 70, None, True]
2017-08-08 04:25:27,181 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, True
2017-08-08 04:25:27,181 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,182 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 71, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'wrap', False)]
2017-08-08 04:25:27,182 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00G\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xa4wrap\xc2''
2017-08-08 04:25:27,182 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,182 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,183 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,183 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,183 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 71, None, None]
2017-08-08 04:25:27,183 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,184 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,184 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 72, 'nvim_win_get_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'winfixheight')]
2017-08-08 04:25:27,184 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00H\xb3nvim_win_get_option\x92\xc7\x03\x01\xcd\x03\xe9\xacwinfixheight''
2017-08-08 04:25:27,184 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,184 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,184 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,184 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,184 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 72, None, False]
2017-08-08 04:25:27,185 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, False
2017-08-08 04:25:27,185 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,185 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 73, 'nvim_win_set_option', (ExtType(code=1, data=b'\xcd\x03\xe9'), 'winfixheight', True)]
2017-08-08 04:25:27,185 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00I\xb3nvim_win_set_option\x93\xc7\x03\x01\xcd\x03\xe9\xacwinfixheight\xc3''
2017-08-08 04:25:27,185 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,185 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,185 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,185 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,185 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 73, None, None]
2017-08-08 04:25:27,186 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,186 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,186 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 74, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,186 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00J\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,186 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,186 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,186 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,186 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,186 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 74, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,187 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,187 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,187 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 75, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,187 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00K\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,187 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,187 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,187 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,187 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,188 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 75, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,188 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,188 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,188 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 76, 'nvim_call_function', ('win_getid', [])]
2017-08-08 04:25:27,188 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00L\xb2nvim_call_function\x92\xa9win_getid\x90''
2017-08-08 04:25:27,188 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,188 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,188 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,189 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,189 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 76, None, 1001]
2017-08-08 04:25:27,189 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1001
2017-08-08 04:25:27,189 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,189 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 77, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_mode', '')]
2017-08-08 04:25:27,189 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00M\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_mode\xa0''
2017-08-08 04:25:27,189 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,189 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,189 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,190 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,190 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 77, None, None]
2017-08-08 04:25:27,190 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,190 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,190 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 78, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_sources', '')]
2017-08-08 04:25:27,190 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00N\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb9denite_statusline_sources\xa0''
2017-08-08 04:25:27,190 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,190 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,191 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,191 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,191 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 78, None, None]
2017-08-08 04:25:27,191 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,191 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,191 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 79, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_path', '')]
2017-08-08 04:25:27,191 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00O\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_path\xa0''
2017-08-08 04:25:27,192 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,192 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,192 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,192 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,192 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 79, None, None]
2017-08-08 04:25:27,192 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,192 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,192 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 80, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_linenr', '')]
2017-08-08 04:25:27,192 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00P\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb8denite_statusline_linenr\xa0''
2017-08-08 04:25:27,193 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,193 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,193 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,193 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,193 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 80, None, None]
2017-08-08 04:25:27,193 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,193 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,193 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 81, 'nvim_command', ('autocmd! denite',)]
2017-08-08 04:25:27,193 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00Q\xacnvim_command\x91\xafautocmd! denite''
2017-08-08 04:25:27,194 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,194 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,194 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,194 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,194 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 81, None, None]
2017-08-08 04:25:27,194 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,194 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,195 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 82, 'nvim_command', ('silent doautocmd WinEnter',)]
2017-08-08 04:25:27,195 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00R\xacnvim_command\x91\xb9silent doautocmd WinEnter''
2017-08-08 04:25:27,195 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,195 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,195 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,206 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,206 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 82, None, None]
2017-08-08 04:25:27,206 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,206 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,206 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 83, 'nvim_command', ('silent doautocmd BufWinEnter',)]
2017-08-08 04:25:27,206 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00S\xacnvim_command\x91\xbcsilent doautocmd BufWinEnter''
2017-08-08 04:25:27,206 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,206 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,207 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,208 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,208 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 83, None, None]
2017-08-08 04:25:27,208 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,208 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,208 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 84, 'nvim_command', ('silent doautocmd FileType denite',)]
2017-08-08 04:25:27,208 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00T\xacnvim_command\x91\xda\x00 silent doautocmd FileType denite''
2017-08-08 04:25:27,208 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,208 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,209 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,230 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,230 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 84, None, None]
2017-08-08 04:25:27,230 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,230 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,231 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 85, 'nvim_command', ('syntax case ignore',)]
2017-08-08 04:25:27,231 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00U\xacnvim_command\x91\xb2syntax case ignore''
2017-08-08 04:25:27,231 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,231 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,231 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,231 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,231 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 85, None, None]
2017-08-08 04:25:27,231 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,231 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,232 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 86, 'nvim_command', ('highlight default link deniteMode ModeMsg',)]
2017-08-08 04:25:27,232 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00V\xacnvim_command\x91\xda\x00)highlight default link deniteMode ModeMsg''
2017-08-08 04:25:27,232 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,232 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,232 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,232 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,232 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 86, None, None]
2017-08-08 04:25:27,233 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,233 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,233 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 87, 'nvim_command', ('highlight default link deniteMatchedRange Underlined',)]
2017-08-08 04:25:27,233 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00W\xacnvim_command\x91\xda\x004highlight default link deniteMatchedRange Underlined''
2017-08-08 04:25:27,233 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,233 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,234 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,234 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,234 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 87, None, None]
2017-08-08 04:25:27,234 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,234 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,234 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 88, 'nvim_command', ('highlight default link deniteMatchedChar Underlined',)]
2017-08-08 04:25:27,235 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00X\xacnvim_command\x91\xda\x003highlight default link deniteMatchedChar Underlined''
2017-08-08 04:25:27,235 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,235 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,235 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,235 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,235 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 88, None, None]
2017-08-08 04:25:27,235 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,235 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,236 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 89, 'nvim_command', ('highlight default link deniteStatusLinePath Comment',)]
2017-08-08 04:25:27,236 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00Y\xacnvim_command\x91\xda\x003highlight default link deniteStatusLinePath Comment''
2017-08-08 04:25:27,236 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,236 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,236 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,236 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,236 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 89, None, None]
2017-08-08 04:25:27,237 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,237 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,237 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 90, 'nvim_command', ('highlight default link deniteStatusLineNumber LineNR',)]
2017-08-08 04:25:27,237 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00Z\xacnvim_command\x91\xda\x004highlight default link deniteStatusLineNumber LineNR''
2017-08-08 04:25:27,237 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,238 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,238 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,238 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,238 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 90, None, None]
2017-08-08 04:25:27,238 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,238 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,238 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 91, 'nvim_command', ('highlight default link deniteSelectedLine Statement',)]
2017-08-08 04:25:27,239 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00[\xacnvim_command\x91\xda\x003highlight default link deniteSelectedLine Statement''
2017-08-08 04:25:27,239 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,239 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,239 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,239 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,239 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 91, None, None]
2017-08-08 04:25:27,239 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,239 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,239 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 92, 'nvim_command', ('syntax match deniteSelectedLine /^[*].*/ contains=deniteConcealedMark',)]
2017-08-08 04:25:27,240 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\\\xacnvim_command\x91\xda\x00Esyntax match deniteSelectedLine /^[*].*/ contains=deniteConcealedMark''
2017-08-08 04:25:27,240 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,240 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,240 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,240 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,240 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 92, None, None]
2017-08-08 04:25:27,241 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,241 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,241 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 93, 'nvim_command', ('syntax match deniteConcealedMark /^[ *]/ conceal contained',)]
2017-08-08 04:25:27,241 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00]\xacnvim_command\x91\xda\x00:syntax match deniteConcealedMark /^[ *]/ conceal contained''
2017-08-08 04:25:27,241 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,241 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,241 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,241 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,241 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 93, None, None]
2017-08-08 04:25:27,242 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,242 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,242 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 94, 'nvim_command', ('highlight default link deniteSourceLine_file_rec Type',)]
2017-08-08 04:25:27,242 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00^\xacnvim_command\x91\xda\x005highlight default link deniteSourceLine_file_rec Type''
2017-08-08 04:25:27,242 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,242 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,242 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,242 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,242 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 94, None, None]
2017-08-08 04:25:27,243 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,243 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,243 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 95, 'nvim_command', ('syntax match deniteSourceLine_file_rec /^ / nextgroup=deniteSource_file_rec keepend contains=deniteConcealedMark',)]
2017-08-08 04:25:27,243 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00_\xacnvim_command\x91\xda\x00psyntax match deniteSourceLine_file_rec /^ / nextgroup=deniteSource_file_rec keepend contains=deniteConcealedMark''
2017-08-08 04:25:27,243 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,244 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,244 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,244 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,244 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 95, None, None]
2017-08-08 04:25:27,244 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,244 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,244 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 96, 'nvim_command', ('syntax region deniteSource_file_rec start=// end=/$/ contains=deniteMatchedRange contained',)]
2017-08-08 04:25:27,244 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00`\xacnvim_command\x91\xda\x00Zsyntax region deniteSource_file_rec start=// end=/$/ contains=deniteMatchedRange contained''
2017-08-08 04:25:27,244 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,245 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,245 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,245 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,245 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 96, None, None]
2017-08-08 04:25:27,245 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,245 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,245 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 97, 'nvim_command', ('highlight! link CursorLine CursorLine',)]
2017-08-08 04:25:27,246 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00a\xacnvim_command\x91\xda\x00%highlight! link CursorLine CursorLine''
2017-08-08 04:25:27,246 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,246 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,246 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,246 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,246 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 97, None, None]
2017-08-08 04:25:27,246 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,246 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,249 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 98, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_mode', '-- INSERT -- ')]
2017-08-08 04:25:27,249 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00b\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_mode\xad-- INSERT -- ''
2017-08-08 04:25:27,249 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,249 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,249 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,249 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,250 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 98, None, None]
2017-08-08 04:25:27,250 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,250 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,250 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 99, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_sources', 'file_rec(19/19) ')]
2017-08-08 04:25:27,250 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00c\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb9denite_statusline_sources\xb0file_rec(19/19) ''
2017-08-08 04:25:27,250 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,250 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,250 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,251 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,251 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 99, None, None]
2017-08-08 04:25:27,251 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,251 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,251 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 100, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_path', '[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]')]
2017-08-08 04:25:27,251 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00d\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_path\xda\x00-[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]''
2017-08-08 04:25:27,251 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,251 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,251 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,252 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,252 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 100, None, None]
2017-08-08 04:25:27,252 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,252 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,252 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 101, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_linenr', ' 1/19')]
2017-08-08 04:25:27,252 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00e\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb8denite_statusline_linenr\xa5 1/19''
2017-08-08 04:25:27,252 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,252 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,253 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,253 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,253 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 101, None, None]
2017-08-08 04:25:27,253 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,253 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,253 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 102, 'nvim_command', ('redrawstatus',)]
2017-08-08 04:25:27,253 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00f\xacnvim_command\x91\xacredrawstatus''
2017-08-08 04:25:27,253 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,254 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,254 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,555 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,555 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 102, None, None]
2017-08-08 04:25:27,555 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,555 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,555 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 103, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,555 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00g\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,555 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,556 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,556 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,556 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,556 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 103, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,556 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,556 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,556 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 104, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:27,557 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00h\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:27,557 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,557 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,557 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,557 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,557 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 104, None, 1]
2017-08-08 04:25:27,557 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,557 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,558 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 105, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:27,558 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00i\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:27,558 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,558 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,558 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,558 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,558 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 105, None, None]
2017-08-08 04:25:27,558 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,559 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,559 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 106, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:27,559 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00j\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:27,559 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,559 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,559 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,559 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,559 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 106, None, 1]
2017-08-08 04:25:27,560 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,560 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,560 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 107, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:27,560 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00k\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:27,560 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,560 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,560 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,560 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,560 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 107, None, None]
2017-08-08 04:25:27,561 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,561 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,561 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 108, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,561 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00l\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,561 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,561 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,561 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,561 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,561 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 108, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,562 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,562 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,562 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 109, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [' wsgi.py', ' urls.py', ' settings.pyc', ' settings.py', ' nvim-python.log_py3_script', ' nvim-python.log_py3_rplugin', ' hosts.py', ' __pycache__/wsgi.cpython-36.pyc', ' __pycache__/wsgi.cpython-35.pyc', ' __pycache__/urls.cpython-36.pyc'])]
2017-08-08 04:25:27,562 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00m\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x9a\xa8 wsgi.py\xa8 urls.py\xad settings.pyc\xac settings.py\xbb nvim-python.log_py3_script\xbc nvim-python.log_py3_rplugin\xa9 hosts.py\xda\x00  __pycache__/wsgi.cpython-36.pyc\xda\x00  __pycache__/wsgi.cpython-35.pyc\xda\x00  __pycache__/urls.cpython-36.pyc''
2017-08-08 04:25:27,562 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,562 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,562 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,562 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,563 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 109, None, None]
2017-08-08 04:25:27,563 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,563 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,563 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 110, 'nvim_get_current_win', ()]
2017-08-08 04:25:27,563 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00n\xb4nvim_get_current_win\x90''
2017-08-08 04:25:27,563 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,563 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,563 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,563 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,564 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 110, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:27,564 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:27,564 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,564 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 111, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:27,564 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00o\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:27,564 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,564 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,564 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,564 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,565 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 111, None, 10]
2017-08-08 04:25:27,565 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:27,565 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,565 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 112, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:27,565 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00p\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:27,565 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,565 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,565 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,566 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,566 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 112, None, 10]
2017-08-08 04:25:27,566 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:27,566 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,566 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 113, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:27,566 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00q\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:27,566 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,566 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,566 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,567 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,567 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 113, None, 1]
2017-08-08 04:25:27,567 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,567 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,567 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 114, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,567 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00r\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,567 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,567 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,568 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,568 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,568 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 114, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,568 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,568 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,568 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 115, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_mode', '-- INSERT -- ')]
2017-08-08 04:25:27,568 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00s\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_mode\xad-- INSERT -- ''
2017-08-08 04:25:27,568 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,569 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,569 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,569 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,569 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 115, None, None]
2017-08-08 04:25:27,569 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,569 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,569 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 116, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_sources', 'file_rec(19/19) ')]
2017-08-08 04:25:27,569 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00t\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb9denite_statusline_sources\xb0file_rec(19/19) ''
2017-08-08 04:25:27,569 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,570 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,570 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,570 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,570 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 116, None, None]
2017-08-08 04:25:27,570 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,570 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,570 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 117, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_path', '[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]')]
2017-08-08 04:25:27,570 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00u\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_path\xda\x00-[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]''
2017-08-08 04:25:27,571 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,571 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,571 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,571 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,571 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 117, None, None]
2017-08-08 04:25:27,571 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,571 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,571 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 118, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_linenr', '19/19')]
2017-08-08 04:25:27,571 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00v\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb8denite_statusline_linenr\xa519/19''
2017-08-08 04:25:27,572 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,572 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,572 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,572 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,572 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 118, None, None]
2017-08-08 04:25:27,572 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,572 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,572 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 119, 'nvim_command', ('redrawstatus',)]
2017-08-08 04:25:27,572 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00w\xacnvim_command\x91\xacredrawstatus''
2017-08-08 04:25:27,573 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,573 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,573 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,582 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,582 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 119, None, None]
2017-08-08 04:25:27,582 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,583 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,583 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 120, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:27,583 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00x\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:27,583 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,583 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,583 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,583 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,583 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 120, None, 1]
2017-08-08 04:25:27,584 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,584 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,584 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 121, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:27,584 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00y\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:27,584 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,584 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,584 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,584 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,584 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 121, None, None]
2017-08-08 04:25:27,585 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,585 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,585 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 122, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:27,585 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00z\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:27,585 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,585 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,585 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,585 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,585 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 122, None, 1]
2017-08-08 04:25:27,586 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,586 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,586 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 123, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:27,586 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00{\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:27,586 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,586 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,586 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,586 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,586 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 123, None, None]
2017-08-08 04:25:27,587 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,587 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,587 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 124, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,587 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00|\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,587 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,587 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,587 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,587 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,587 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 124, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,588 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,588 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,588 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 125, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [' __pycache__/urls.cpython-36.pyc', ' __pycache__/urls.cpython-35.pyc', ' __pycache__/settings.cpython-36.pyc', ' __pycache__/settings.cpython-35.pyc', ' __pycache__/hosts.cpython-36.pyc', ' __pycache__/hosts.cpython-35.pyc', ' __pycache__/__init__.cpython-36.pyc', ' __pycache__/__init__.cpython-35.pyc', ' __init__.pyc', ' __init__.py'])]
2017-08-08 04:25:27,588 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00}\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x9a\xda\x00  __pycache__/urls.cpython-36.pyc\xda\x00  __pycache__/urls.cpython-35.pyc\xda\x00$ __pycache__/settings.cpython-36.pyc\xda\x00$ __pycache__/settings.cpython-35.pyc\xda\x00! __pycache__/hosts.cpython-36.pyc\xda\x00! __pycache__/hosts.cpython-35.pyc\xda\x00$ __pycache__/__init__.cpython-36.pyc\xda\x00$ __pycache__/__init__.cpython-35.pyc\xad __init__.pyc\xac __init__.py''
2017-08-08 04:25:27,588 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,589 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,589 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,589 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,589 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 125, None, None]
2017-08-08 04:25:27,589 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,589 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,589 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 126, 'nvim_get_current_win', ()]
2017-08-08 04:25:27,590 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00~\xb4nvim_get_current_win\x90''
2017-08-08 04:25:27,590 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,590 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,590 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,590 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,590 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 126, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:27,590 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:27,590 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,591 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 127, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:27,591 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\x7f\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:27,591 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,591 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,591 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,592 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,592 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 127, None, 10]
2017-08-08 04:25:27,592 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:27,592 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,592 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 128, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:27,592 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x80\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:27,592 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,592 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,593 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,593 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,593 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 128, None, 10]
2017-08-08 04:25:27,593 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:27,593 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,593 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 129, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:27,594 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x81\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:27,594 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,594 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,594 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,594 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,594 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 129, None, 1]
2017-08-08 04:25:27,594 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,594 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,595 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 130, 'nvim_call_function', ('cursor', [[10, 1]])]
2017-08-08 04:25:27,595 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x82\xb2nvim_call_function\x92\xa6cursor\x91\x92\n\x01''
2017-08-08 04:25:27,595 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,595 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,595 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,595 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,596 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 130, None, 0]
2017-08-08 04:25:27,596 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,596 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,596 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 131, 'nvim_command', ('normal! zb',)]
2017-08-08 04:25:27,596 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x83\xacnvim_command\x91\xaanormal! zb''
2017-08-08 04:25:27,596 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,596 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,596 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,597 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,597 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 131, None, None]
2017-08-08 04:25:27,597 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,597 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,597 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 132, 'nvim_get_option', ('timeout',)]
2017-08-08 04:25:27,597 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x84\xafnvim_get_option\x91\xa7timeout''
2017-08-08 04:25:27,597 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,598 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,598 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,598 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,598 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 132, None, True]
2017-08-08 04:25:27,598 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, True
2017-08-08 04:25:27,598 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,598 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 133, 'nvim_get_option', ('timeoutlen',)]
2017-08-08 04:25:27,598 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x85\xafnvim_get_option\x91\xaatimeoutlen''
2017-08-08 04:25:27,599 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,599 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,599 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,599 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,599 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 133, None, 1000]
2017-08-08 04:25:27,599 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1000
2017-08-08 04:25:27,599 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,600 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 134, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ""|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:27,600 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x86\xacnvim_command\x91\xda\x00lredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ""|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:27,600 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,600 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,600 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,603 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,603 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 134, None, None]
2017-08-08 04:25:27,603 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,603 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,604 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 135, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,604 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x87\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,604 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,604 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,604 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,604 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,605 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 135, None, 0]
2017-08-08 04:25:27,605 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,605 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,617 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 136, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,617 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x88\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,617 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,617 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,617 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,618 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,618 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 136, None, 0]
2017-08-08 04:25:27,618 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,618 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,629 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 137, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,629 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x89\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,629 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,629 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,629 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,631 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,632 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 137, None, 0]
2017-08-08 04:25:27,632 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,632 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,644 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 138, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,645 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x8a\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,645 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,645 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,645 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,646 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,646 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 138, None, 0]
2017-08-08 04:25:27,646 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,646 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,658 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 139, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,659 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x8b\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,659 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,659 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,659 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,659 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,659 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 139, None, 0]
2017-08-08 04:25:27,660 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,660 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,671 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 140, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,671 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x8c\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,671 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,671 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,672 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,672 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,672 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 140, None, 0]
2017-08-08 04:25:27,672 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,672 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,685 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 141, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,685 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x8d\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,685 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,685 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,686 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,686 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,686 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 141, None, 0]
2017-08-08 04:25:27,686 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,686 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,698 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 142, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,698 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x8e\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,698 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,698 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,699 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,699 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,699 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 142, None, 0]
2017-08-08 04:25:27,699 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,699 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,710 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 143, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,710 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x8f\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,710 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,710 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,710 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,711 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,711 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 143, None, 0]
2017-08-08 04:25:27,711 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,711 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,722 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 144, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,722 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x90\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,722 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,723 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,723 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,723 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,723 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 144, None, 0]
2017-08-08 04:25:27,723 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,723 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,735 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 145, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,735 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x91\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,735 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,735 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,735 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,735 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,736 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 145, None, 0]
2017-08-08 04:25:27,736 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,736 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,747 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 146, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,747 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x92\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,748 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,748 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,748 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,748 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,748 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 146, None, 0]
2017-08-08 04:25:27,748 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,749 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,760 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 147, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,760 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x93\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,760 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,760 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,761 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,761 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,761 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 147, None, 0]
2017-08-08 04:25:27,761 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,761 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,772 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 148, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,772 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x94\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,772 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,772 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,772 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,773 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,773 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 148, None, 0]
2017-08-08 04:25:27,773 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,773 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,784 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 149, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,784 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x95\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,785 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,785 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,785 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,785 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,785 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 149, None, 0]
2017-08-08 04:25:27,785 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,785 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,798 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 150, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,798 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x96\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,798 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,799 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,799 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,799 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,799 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 150, None, 0]
2017-08-08 04:25:27,799 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,799 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,812 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 151, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,812 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x97\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,812 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,813 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,813 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,813 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,814 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 151, None, 0]
2017-08-08 04:25:27,814 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,814 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,826 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 152, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,826 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x98\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,826 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,826 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,826 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,826 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,827 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 152, None, 0]
2017-08-08 04:25:27,827 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,827 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,837 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 153, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,837 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x99\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,838 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,838 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,838 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,838 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,838 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 153, None, 0]
2017-08-08 04:25:27,838 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,838 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,849 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 154, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,849 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x9a\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,849 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,849 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,850 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,850 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,850 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 154, None, 59]
2017-08-08 04:25:27,850 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 59
2017-08-08 04:25:27,850 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,851 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 155, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ";"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:27,851 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x9b\xacnvim_command\x91\xda\x00mredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ";"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:27,851 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,851 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,851 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,852 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,852 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 155, None, None]
2017-08-08 04:25:27,852 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,852 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,853 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 156, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,853 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x9c\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,854 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,854 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,854 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,854 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,854 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 156, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,854 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,854 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,855 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 157, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_mode', '-- INSERT -- ')]
2017-08-08 04:25:27,855 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x9d\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_mode\xad-- INSERT -- ''
2017-08-08 04:25:27,855 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,855 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,855 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,855 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,855 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 157, None, None]
2017-08-08 04:25:27,856 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,856 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,856 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 158, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_sources', 'file_rec(0/19) ')]
2017-08-08 04:25:27,856 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x9e\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb9denite_statusline_sources\xaffile_rec(0/19) ''
2017-08-08 04:25:27,856 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,856 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,856 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,857 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,857 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 158, None, None]
2017-08-08 04:25:27,857 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,857 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,857 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 159, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_path', '[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]')]
2017-08-08 04:25:27,857 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\x9f\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_path\xda\x00-[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]''
2017-08-08 04:25:27,857 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,857 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,857 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,858 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,858 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 159, None, None]
2017-08-08 04:25:27,858 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,858 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,858 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 160, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_linenr', '1/0')]
2017-08-08 04:25:27,858 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa0\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb8denite_statusline_linenr\xa31/0''
2017-08-08 04:25:27,858 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,858 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,858 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,859 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,859 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 160, None, None]
2017-08-08 04:25:27,859 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,859 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,859 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 161, 'nvim_command', ('redrawstatus',)]
2017-08-08 04:25:27,859 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa1\xacnvim_command\x91\xacredrawstatus''
2017-08-08 04:25:27,859 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,859 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,859 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,860 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,860 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 161, None, None]
2017-08-08 04:25:27,860 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,860 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,861 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 162, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:27,861 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa2\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:27,861 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,861 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,861 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,862 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,864 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 162, None, 1]
2017-08-08 04:25:27,864 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,864 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,864 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 163, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:27,865 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcc\xa3\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:27,865 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,865 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,865 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,865 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,865 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 163, None, None]
2017-08-08 04:25:27,865 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,866 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,866 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 164, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:27,866 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa4\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:27,866 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,866 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,866 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,866 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,867 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 164, None, 1]
2017-08-08 04:25:27,867 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,867 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,867 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 165, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:27,868 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa5\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:27,868 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,868 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,868 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,868 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,868 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 165, None, None]
2017-08-08 04:25:27,868 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,868 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,869 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 166, 'nvim_command', ('silent! syntax match deniteMatchedRange /\\v;/ contained',)]
2017-08-08 04:25:27,869 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa6\xacnvim_command\x91\xda\x007silent! syntax match deniteMatchedRange /\\v;/ contained''
2017-08-08 04:25:27,869 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,869 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,869 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,869 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,870 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 166, None, None]
2017-08-08 04:25:27,870 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,870 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,870 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 167, 'nvim_command', ('silent! syntax match deniteMatchedChar /[;]/ containedin=deniteMatchedRange contained',)]
2017-08-08 04:25:27,870 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa7\xacnvim_command\x91\xda\x00Usilent! syntax match deniteMatchedChar /[;]/ containedin=deniteMatchedRange contained''
2017-08-08 04:25:27,871 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,871 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,871 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,871 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,871 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 167, None, None]
2017-08-08 04:25:27,871 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,871 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,871 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 168, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,871 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa8\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,872 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,872 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,872 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,872 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,872 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 168, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,872 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,872 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,872 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 169, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [])]
2017-08-08 04:25:27,873 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xa9\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x90''
2017-08-08 04:25:27,873 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,873 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,873 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,873 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,873 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 169, None, None]
2017-08-08 04:25:27,873 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,873 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,874 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 170, 'nvim_get_current_win', ()]
2017-08-08 04:25:27,874 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xaa\xb4nvim_get_current_win\x90''
2017-08-08 04:25:27,874 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,874 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,874 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,874 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,874 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 170, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:27,874 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:27,874 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,875 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 171, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:27,875 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xab\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:27,875 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,875 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,875 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,875 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,875 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 171, None, 10]
2017-08-08 04:25:27,875 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:27,875 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,876 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 172, 'nvim_command', ('resize 0',)]
2017-08-08 04:25:27,876 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xac\xacnvim_command\x91\xa8resize 0''
2017-08-08 04:25:27,876 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,876 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,876 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,876 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,876 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 172, None, None]
2017-08-08 04:25:27,876 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,876 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,877 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 173, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:27,877 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xad\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:27,877 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,877 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,877 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,877 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,877 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 173, None, 1]
2017-08-08 04:25:27,877 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,877 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,878 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 174, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:27,878 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xae\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:27,878 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,878 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,878 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,878 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,878 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 174, None, 1]
2017-08-08 04:25:27,879 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,879 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,879 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 175, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ";"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:27,880 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xaf\xacnvim_command\x91\xda\x00mredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ";"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:27,880 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,880 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,880 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,899 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,899 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 175, None, None]
2017-08-08 04:25:27,899 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,899 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,899 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 176, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,899 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,899 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,900 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,900 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,900 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,900 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 176, None, 0]
2017-08-08 04:25:27,900 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,900 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,911 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 177, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,911 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,911 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,911 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,911 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,911 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,912 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 177, None, 0]
2017-08-08 04:25:27,912 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,912 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,923 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 178, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,924 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb2\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,924 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,924 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,924 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,925 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,925 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 178, None, 0]
2017-08-08 04:25:27,925 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,925 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,937 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 179, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,938 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb3\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,938 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,938 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,938 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,939 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,939 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 179, None, 0]
2017-08-08 04:25:27,939 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,939 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,952 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 180, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,952 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb4\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,952 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,952 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,953 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,953 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,953 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 180, None, 0]
2017-08-08 04:25:27,953 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,953 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,965 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 181, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,965 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb5\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,965 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,966 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,966 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,966 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,966 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 181, None, 0]
2017-08-08 04:25:27,966 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,966 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,977 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 182, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,978 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb6\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,978 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,978 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,978 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,978 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,978 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 182, None, 0]
2017-08-08 04:25:27,978 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:27,978 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,989 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 183, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:27,990 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb7\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:27,990 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,990 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,990 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,990 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,991 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 183, None, 106]
2017-08-08 04:25:27,991 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 106
2017-08-08 04:25:27,991 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,991 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 184, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ";j"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:27,991 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb8\xacnvim_command\x91\xda\x00nredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ";j"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:27,992 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,992 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,992 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,992 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,992 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 184, None, None]
2017-08-08 04:25:27,993 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:27,993 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,993 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 185, 'nvim_get_current_buf', ()]
2017-08-08 04:25:27,994 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xb9\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:27,994 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,994 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,994 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,994 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,994 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 185, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:27,994 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:27,995 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,997 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 186, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:27,997 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xba\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:27,997 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,997 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,998 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,998 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,998 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 186, None, 1]
2017-08-08 04:25:27,998 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:27,998 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:27,999 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 187, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:27,999 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcc\xbb\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:27,999 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:27,999 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,999 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:27,999 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:27,999 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 187, None, None]
2017-08-08 04:25:28,001 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,002 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,002 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 188, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:28,002 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xbc\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:28,002 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,002 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,002 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,002 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,003 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 188, None, 1]
2017-08-08 04:25:28,003 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,003 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,003 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 189, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:28,003 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xbd\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:28,003 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,003 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,003 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,004 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,004 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 189, None, None]
2017-08-08 04:25:28,004 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,004 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,004 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 190, 'nvim_command', ('silent! syntax match deniteMatchedRange /\\v;j/ contained',)]
2017-08-08 04:25:28,004 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xbe\xacnvim_command\x91\xda\x008silent! syntax match deniteMatchedRange /\\v;j/ contained''
2017-08-08 04:25:28,004 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,004 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,005 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,005 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,005 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 190, None, None]
2017-08-08 04:25:28,005 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,005 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,005 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 191, 'nvim_command', ('silent! syntax match deniteMatchedChar /[;j]/ containedin=deniteMatchedRange contained',)]
2017-08-08 04:25:28,005 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xbf\xacnvim_command\x91\xda\x00Vsilent! syntax match deniteMatchedChar /[;j]/ containedin=deniteMatchedRange contained''
2017-08-08 04:25:28,005 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,005 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,006 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,006 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,006 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 191, None, None]
2017-08-08 04:25:28,006 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,006 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,006 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 192, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,006 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc0\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,007 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,007 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,007 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,007 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,007 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 192, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,007 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,007 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,007 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 193, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [])]
2017-08-08 04:25:28,008 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc1\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x90''
2017-08-08 04:25:28,008 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,008 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,008 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,008 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,008 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 193, None, None]
2017-08-08 04:25:28,008 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,008 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,009 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 194, 'nvim_get_current_win', ()]
2017-08-08 04:25:28,009 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc2\xb4nvim_get_current_win\x90''
2017-08-08 04:25:28,009 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,009 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,009 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,009 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,009 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 194, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:28,010 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:28,010 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,010 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 195, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:28,010 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc3\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:28,010 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,010 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,010 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,010 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,010 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 195, None, 1]
2017-08-08 04:25:28,011 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,011 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,011 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 196, 'nvim_command', ('resize 0',)]
2017-08-08 04:25:28,011 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc4\xacnvim_command\x91\xa8resize 0''
2017-08-08 04:25:28,011 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,011 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,012 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,012 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,012 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 196, None, None]
2017-08-08 04:25:28,012 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,012 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,012 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 197, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:28,012 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc5\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:28,013 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,013 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,013 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,013 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,013 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 197, None, 1]
2017-08-08 04:25:28,013 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,013 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,014 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 198, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:28,014 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc6\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:28,014 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,014 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,014 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,014 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,014 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 198, None, 1]
2017-08-08 04:25:28,014 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,014 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,015 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 199, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ";j"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:28,015 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc7\xacnvim_command\x91\xda\x00nredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ";j"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:28,015 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,015 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,015 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,026 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,026 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 199, None, None]
2017-08-08 04:25:28,026 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,026 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,027 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 200, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,027 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc8\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,027 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,027 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,027 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,027 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,027 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 200, None, 0]
2017-08-08 04:25:28,027 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,028 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,041 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 201, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,041 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xc9\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,041 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,041 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,042 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,042 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,042 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 201, None, 0]
2017-08-08 04:25:28,042 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,043 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,053 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 202, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,053 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xca\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,054 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,054 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,054 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,054 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,054 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 202, None, 0]
2017-08-08 04:25:28,055 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,055 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,067 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 203, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,067 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xcb\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,067 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,068 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,068 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,068 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,068 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 203, None, 0]
2017-08-08 04:25:28,068 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,068 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,081 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 204, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,081 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xcc\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,081 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,081 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,081 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,082 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,082 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 204, None, 0]
2017-08-08 04:25:28,082 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,082 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,100 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 205, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,100 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xcd\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,101 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,101 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,101 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,101 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,101 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 205, None, 0]
2017-08-08 04:25:28,101 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,101 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,113 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 206, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,113 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xce\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,113 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,114 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,114 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,114 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,114 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 206, None, 0]
2017-08-08 04:25:28,114 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,114 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,129 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 207, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,130 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xcf\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,130 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,130 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,130 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,131 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,131 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 207, None, 0]
2017-08-08 04:25:28,131 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,131 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,143 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 208, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,143 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,144 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,144 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,144 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,145 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,145 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 208, None, 0]
2017-08-08 04:25:28,145 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,145 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,157 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 209, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,158 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,158 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,158 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,158 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,158 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,159 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 209, None, 0]
2017-08-08 04:25:28,159 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,159 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,171 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 210, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,171 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd2\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,171 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,171 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,171 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,172 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,172 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 210, None, 0]
2017-08-08 04:25:28,172 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,172 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,183 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 211, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,183 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd3\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,183 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,183 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,183 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,184 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,184 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 211, None, 0]
2017-08-08 04:25:28,184 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,184 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,197 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 212, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,197 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd4\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,198 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,198 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,198 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,198 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,198 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 212, None, 0]
2017-08-08 04:25:28,198 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,199 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,210 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 213, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,211 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd5\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,213 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,213 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,213 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,213 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,214 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 213, None, 0]
2017-08-08 04:25:28,214 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,214 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,229 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 214, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,229 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd6\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,230 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,230 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,230 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,230 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,231 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 214, None, 0]
2017-08-08 04:25:28,231 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,231 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,244 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 215, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,246 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd7\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,247 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,247 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,247 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,247 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,247 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 215, None, 0]
2017-08-08 04:25:28,248 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,248 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,260 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 216, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,260 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd8\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,260 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,262 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,263 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,263 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,263 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 216, None, 0]
2017-08-08 04:25:28,263 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,263 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,275 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 217, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,275 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xd9\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,275 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,276 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,276 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,276 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,276 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 217, None, 0]
2017-08-08 04:25:28,277 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,277 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,290 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 218, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,290 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xda\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,290 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,291 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,291 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,291 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,291 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 218, None, 0]
2017-08-08 04:25:28,292 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,292 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,304 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 219, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,305 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xdb\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,305 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,305 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,305 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,306 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,306 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 219, None, 0]
2017-08-08 04:25:28,306 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,306 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,317 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 220, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,317 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xdc\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,318 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,318 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,318 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,318 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,318 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 220, None, 0]
2017-08-08 04:25:28,319 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,319 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,331 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 221, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,332 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xdd\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,332 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,333 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,333 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,333 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,333 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 221, None, 0]
2017-08-08 04:25:28,333 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,334 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,346 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 222, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,346 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xde\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,346 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,347 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,347 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,347 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,347 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 222, None, 0]
2017-08-08 04:25:28,347 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,347 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,360 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 223, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,360 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xdf\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,360 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,363 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,363 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,363 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,364 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 223, None, 0]
2017-08-08 04:25:28,364 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,364 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,376 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 224, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,377 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,377 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,377 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,377 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,379 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,379 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 224, None, 0]
2017-08-08 04:25:28,380 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,380 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,391 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 225, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,391 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,392 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,392 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,392 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,392 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,392 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 225, None, 0]
2017-08-08 04:25:28,393 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,393 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,406 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 226, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,406 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe2\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,406 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,406 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,406 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,407 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,407 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 226, None, 0]
2017-08-08 04:25:28,407 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,407 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,418 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 227, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,418 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe3\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,418 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,418 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,418 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,419 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,419 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 227, None, 0]
2017-08-08 04:25:28,419 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,419 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,429 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 228, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,430 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe4\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,430 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,430 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,430 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,430 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,430 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 228, None, 0]
2017-08-08 04:25:28,431 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,431 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,444 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 229, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,445 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe5\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,445 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,445 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,445 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,446 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,446 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 229, None, 0]
2017-08-08 04:25:28,446 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,446 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,462 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 230, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,462 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe6\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,462 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,462 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,463 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,463 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,463 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 230, None, 0]
2017-08-08 04:25:28,464 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,464 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,476 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 231, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,476 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe7\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,477 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,480 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,480 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,480 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,480 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 231, None, 0]
2017-08-08 04:25:28,481 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,481 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,494 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 232, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,495 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe8\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,495 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,495 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,495 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,496 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,496 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 232, None, 0]
2017-08-08 04:25:28,496 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,497 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,514 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 233, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,514 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xe9\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,514 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,515 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,515 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,515 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,515 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 233, None, 0]
2017-08-08 04:25:28,515 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,516 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,528 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 234, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,528 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xea\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,528 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,528 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,528 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,529 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,529 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 234, None, 0]
2017-08-08 04:25:28,529 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,529 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,541 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 235, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,541 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xeb\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,541 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,541 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,542 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,542 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,542 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 235, None, 0]
2017-08-08 04:25:28,542 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,542 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,555 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 236, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,556 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xec\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,556 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,556 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,556 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,556 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,557 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 236, None, 0]
2017-08-08 04:25:28,557 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,557 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,569 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 237, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,569 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xed\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,569 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,569 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,570 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,570 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,570 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 237, None, 0]
2017-08-08 04:25:28,570 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,570 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,582 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 238, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,582 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xee\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,582 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,583 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,583 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,583 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,583 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 238, None, 0]
2017-08-08 04:25:28,583 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,583 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,594 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 239, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,595 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xef\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,595 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,595 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,595 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,595 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,596 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 239, None, 0]
2017-08-08 04:25:28,596 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,596 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,607 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 240, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,607 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,608 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,608 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,609 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,609 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,609 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 240, None, 0]
2017-08-08 04:25:28,609 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,609 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,622 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 241, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,622 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,622 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,623 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,623 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,623 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,623 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 241, None, 0]
2017-08-08 04:25:28,623 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,624 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,634 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 242, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,635 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf2\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,635 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,635 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,635 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,635 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,635 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 242, None, b'\x80kb']
2017-08-08 04:25:28,636 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'\x80kb'
2017-08-08 04:25:28,636 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,636 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 243, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ";"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:28,636 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf3\xacnvim_command\x91\xda\x00mredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ";"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:28,636 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,637 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,637 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,637 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,637 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 243, None, None]
2017-08-08 04:25:28,637 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,637 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,638 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 244, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,638 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf4\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,638 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,638 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,638 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,638 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,638 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 244, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,639 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,639 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,639 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 245, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:28,639 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf5\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:28,639 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,639 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,639 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,639 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,640 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 245, None, 1]
2017-08-08 04:25:28,640 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,640 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,640 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 246, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:28,640 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcc\xf6\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:28,640 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,640 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,640 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,641 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,641 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 246, None, None]
2017-08-08 04:25:28,641 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,641 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,641 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 247, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:28,641 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf7\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:28,641 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,641 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,641 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,642 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,642 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 247, None, 1]
2017-08-08 04:25:28,642 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,642 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,642 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 248, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:28,642 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf8\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:28,642 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,642 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,642 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,643 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,643 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 248, None, None]
2017-08-08 04:25:28,643 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,643 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,643 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 249, 'nvim_command', ('silent! syntax match deniteMatchedRange /\\v;/ contained',)]
2017-08-08 04:25:28,643 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xf9\xacnvim_command\x91\xda\x007silent! syntax match deniteMatchedRange /\\v;/ contained''
2017-08-08 04:25:28,643 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,644 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,644 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,644 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,644 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 249, None, None]
2017-08-08 04:25:28,644 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,644 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,645 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 250, 'nvim_command', ('silent! syntax match deniteMatchedChar /[;]/ containedin=deniteMatchedRange contained',)]
2017-08-08 04:25:28,645 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xfa\xacnvim_command\x91\xda\x00Usilent! syntax match deniteMatchedChar /[;]/ containedin=deniteMatchedRange contained''
2017-08-08 04:25:28,645 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,645 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,645 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,645 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,645 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 250, None, None]
2017-08-08 04:25:28,646 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,646 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,646 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 251, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,646 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xfb\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,646 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,646 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,646 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,647 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,647 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 251, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,647 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,647 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,647 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 252, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [])]
2017-08-08 04:25:28,647 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xfc\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x90''
2017-08-08 04:25:28,647 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,648 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,648 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,648 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,648 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 252, None, None]
2017-08-08 04:25:28,648 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,648 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,648 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 253, 'nvim_get_current_win', ()]
2017-08-08 04:25:28,649 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xfd\xb4nvim_get_current_win\x90''
2017-08-08 04:25:28,649 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,649 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,649 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,649 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,649 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 253, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:28,649 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:28,649 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,650 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 254, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:28,650 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xfe\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:28,650 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,650 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,651 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,651 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,651 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 254, None, 1]
2017-08-08 04:25:28,651 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,651 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,651 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 255, 'nvim_command', ('resize 0',)]
2017-08-08 04:25:28,651 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcc\xff\xacnvim_command\x91\xa8resize 0''
2017-08-08 04:25:28,651 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,652 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,652 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,652 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,652 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 255, None, None]
2017-08-08 04:25:28,652 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,652 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,652 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 256, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:28,652 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x00\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:28,652 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,653 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,653 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,653 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,653 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 256, None, 1]
2017-08-08 04:25:28,653 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,653 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,653 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 257, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:28,653 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x01\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:28,653 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,654 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,654 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,654 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,654 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 257, None, 1]
2017-08-08 04:25:28,654 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,654 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,654 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 258, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ";"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:28,654 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x02\xacnvim_command\x91\xda\x00mredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ";"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:28,655 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,655 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,655 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,667 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,667 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 258, None, None]
2017-08-08 04:25:28,667 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,667 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,667 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 259, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,667 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x03\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,668 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,668 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,668 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,668 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,668 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 259, None, 0]
2017-08-08 04:25:28,668 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,668 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,680 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 260, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,680 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x04\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,681 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,681 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,681 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,681 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,682 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 260, None, 0]
2017-08-08 04:25:28,682 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,682 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,695 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 261, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,695 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x05\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,695 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,695 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,695 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,696 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,696 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 261, None, 0]
2017-08-08 04:25:28,696 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,696 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,708 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 262, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,708 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x06\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,709 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,711 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,711 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,712 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,712 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 262, None, 0]
2017-08-08 04:25:28,712 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,712 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,724 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 263, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,725 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x07\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,725 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,726 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,726 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,726 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,728 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 263, None, 0]
2017-08-08 04:25:28,728 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,728 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,741 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 264, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,741 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x08\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,741 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,741 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,742 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,742 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,742 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 264, None, 0]
2017-08-08 04:25:28,742 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,742 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,754 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 265, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,755 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\t\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,755 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,755 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,755 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,756 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,756 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 265, None, 0]
2017-08-08 04:25:28,756 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,756 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,767 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 266, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,768 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\n\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,768 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,768 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,768 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,769 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,769 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 266, None, 0]
2017-08-08 04:25:28,769 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,769 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,780 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 267, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,780 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x0b\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,781 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,781 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,781 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,781 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,781 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 267, None, b'\x80kb']
2017-08-08 04:25:28,781 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'\x80kb'
2017-08-08 04:25:28,782 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,782 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 268, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ""|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:28,782 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x0c\xacnvim_command\x91\xda\x00lredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ""|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:28,782 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,783 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,783 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,783 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,784 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 268, None, None]
2017-08-08 04:25:28,784 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,784 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,784 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 269, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,784 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\r\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,785 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,785 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,785 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,785 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,785 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 269, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,785 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,785 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,785 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 270, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_mode', '-- INSERT -- ')]
2017-08-08 04:25:28,786 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x0e\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_mode\xad-- INSERT -- ''
2017-08-08 04:25:28,786 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,786 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,786 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,786 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,786 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 270, None, None]
2017-08-08 04:25:28,786 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,786 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,787 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 271, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_sources', 'file_rec(19/19) ')]
2017-08-08 04:25:28,787 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x0f\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb9denite_statusline_sources\xb0file_rec(19/19) ''
2017-08-08 04:25:28,787 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,787 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,787 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,787 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,787 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 271, None, None]
2017-08-08 04:25:28,787 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,787 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,788 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 272, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_path', '[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]')]
2017-08-08 04:25:28,788 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x10\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_path\xda\x00-[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]''
2017-08-08 04:25:28,788 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,788 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,788 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,788 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,788 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 272, None, None]
2017-08-08 04:25:28,788 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,788 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,789 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 273, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_linenr', '19/19')]
2017-08-08 04:25:28,789 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x11\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb8denite_statusline_linenr\xa519/19''
2017-08-08 04:25:28,789 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,789 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,789 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,789 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,789 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 273, None, None]
2017-08-08 04:25:28,789 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,789 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,790 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 274, 'nvim_command', ('redrawstatus',)]
2017-08-08 04:25:28,790 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x12\xacnvim_command\x91\xacredrawstatus''
2017-08-08 04:25:28,790 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,790 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,790 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,790 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,791 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 274, None, None]
2017-08-08 04:25:28,791 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,791 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,791 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 275, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:28,791 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x13\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:28,792 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,792 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,792 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,794 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,795 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 275, None, 1]
2017-08-08 04:25:28,795 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,795 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,795 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 276, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:28,795 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcd\x01\x14\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:28,795 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,795 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,795 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,796 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,796 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 276, None, None]
2017-08-08 04:25:28,796 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,796 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,796 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 277, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:28,797 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x15\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:28,797 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,797 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,797 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,797 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,797 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 277, None, 1]
2017-08-08 04:25:28,797 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,797 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,798 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 278, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:28,798 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x16\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:28,798 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,798 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,798 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,798 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,798 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 278, None, None]
2017-08-08 04:25:28,798 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,799 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,799 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 279, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,799 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x17\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,799 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,799 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,799 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,799 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,799 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 279, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,800 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,800 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,800 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 280, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [' __pycache__/urls.cpython-36.pyc', ' __pycache__/urls.cpython-35.pyc', ' __pycache__/settings.cpython-36.pyc', ' __pycache__/settings.cpython-35.pyc', ' __pycache__/hosts.cpython-36.pyc', ' __pycache__/hosts.cpython-35.pyc', ' __pycache__/__init__.cpython-36.pyc', ' __pycache__/__init__.cpython-35.pyc', ' __init__.pyc', ' __init__.py'])]
2017-08-08 04:25:28,800 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x18\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x9a\xda\x00  __pycache__/urls.cpython-36.pyc\xda\x00  __pycache__/urls.cpython-35.pyc\xda\x00$ __pycache__/settings.cpython-36.pyc\xda\x00$ __pycache__/settings.cpython-35.pyc\xda\x00! __pycache__/hosts.cpython-36.pyc\xda\x00! __pycache__/hosts.cpython-35.pyc\xda\x00$ __pycache__/__init__.cpython-36.pyc\xda\x00$ __pycache__/__init__.cpython-35.pyc\xad __init__.pyc\xac __init__.py''
2017-08-08 04:25:28,800 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,800 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,800 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,801 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,801 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 280, None, None]
2017-08-08 04:25:28,801 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,801 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,802 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 281, 'nvim_get_current_win', ()]
2017-08-08 04:25:28,802 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x19\xb4nvim_get_current_win\x90''
2017-08-08 04:25:28,802 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,802 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,802 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,802 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,802 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 281, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:28,802 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:28,803 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,803 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 282, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:28,803 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x1a\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:28,803 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,803 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,803 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,803 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,804 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 282, None, 1]
2017-08-08 04:25:28,804 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,804 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,804 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 283, 'nvim_command', ('resize 10',)]
2017-08-08 04:25:28,804 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x1b\xacnvim_command\x91\xa9resize 10''
2017-08-08 04:25:28,804 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,804 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,804 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,805 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,805 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 283, None, None]
2017-08-08 04:25:28,805 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,805 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,805 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 284, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:28,805 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x1c\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:28,806 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,806 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,806 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,806 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,806 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 284, None, 10]
2017-08-08 04:25:28,806 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:28,806 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,806 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 285, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:28,807 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x1d\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:28,807 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,807 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,807 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,807 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,807 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 285, None, 1]
2017-08-08 04:25:28,807 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,807 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,808 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 286, 'nvim_call_function', ('cursor', [[10, 1]])]
2017-08-08 04:25:28,809 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x1e\xb2nvim_call_function\x92\xa6cursor\x91\x92\n\x01''
2017-08-08 04:25:28,809 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,809 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,809 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,810 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,810 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 286, None, 0]
2017-08-08 04:25:28,810 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,810 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,810 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 287, 'nvim_command', ('normal! zb',)]
2017-08-08 04:25:28,810 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x1f\xacnvim_command\x91\xaanormal! zb''
2017-08-08 04:25:28,810 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,811 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,811 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,811 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,811 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 287, None, None]
2017-08-08 04:25:28,811 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,811 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,811 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 288, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,811 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01 \xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,811 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,812 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,812 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,812 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,812 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 288, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,812 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,812 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,812 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 289, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:28,812 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01!\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:28,813 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,813 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,813 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,813 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,813 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 289, None, 1]
2017-08-08 04:25:28,813 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,813 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,813 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 290, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:28,813 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01"\xacnvim_command\x91\xda\x00\'silent! syntax clear deniteMatchedRange''
2017-08-08 04:25:28,814 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,814 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,814 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,814 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,814 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 290, None, None]
2017-08-08 04:25:28,814 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,814 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,814 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 291, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:28,814 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01#\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:28,815 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,815 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,815 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,815 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,815 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 291, None, 1]
2017-08-08 04:25:28,815 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,815 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,815 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 292, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:28,815 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01$\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:28,816 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,816 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,816 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,816 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,816 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 292, None, None]
2017-08-08 04:25:28,816 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,816 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,816 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 293, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,816 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01%\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,817 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,817 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,817 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,817 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,817 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 293, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,817 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,817 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,817 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 294, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [' __pycache__/urls.cpython-36.pyc', ' __pycache__/urls.cpython-35.pyc', ' __pycache__/settings.cpython-36.pyc', ' __pycache__/settings.cpython-35.pyc', ' __pycache__/hosts.cpython-36.pyc', ' __pycache__/hosts.cpython-35.pyc', ' __pycache__/__init__.cpython-36.pyc', ' __pycache__/__init__.cpython-35.pyc', ' __init__.pyc', ' __init__.py'])]
2017-08-08 04:25:28,818 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01&\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x9a\xda\x00  __pycache__/urls.cpython-36.pyc\xda\x00  __pycache__/urls.cpython-35.pyc\xda\x00$ __pycache__/settings.cpython-36.pyc\xda\x00$ __pycache__/settings.cpython-35.pyc\xda\x00! __pycache__/hosts.cpython-36.pyc\xda\x00! __pycache__/hosts.cpython-35.pyc\xda\x00$ __pycache__/__init__.cpython-36.pyc\xda\x00$ __pycache__/__init__.cpython-35.pyc\xad __init__.pyc\xac __init__.py''
2017-08-08 04:25:28,818 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,818 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,818 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,818 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,818 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 294, None, None]
2017-08-08 04:25:28,818 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,818 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,818 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 295, 'nvim_get_current_win', ()]
2017-08-08 04:25:28,819 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcd\x01'\xb4nvim_get_current_win\x90"'
2017-08-08 04:25:28,819 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,819 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,819 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,819 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,819 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 295, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:28,819 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:28,819 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,820 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 296, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:28,820 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01(\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:28,820 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,820 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,820 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,820 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,820 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 296, None, 10]
2017-08-08 04:25:28,820 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:28,820 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,821 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 297, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:28,821 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01)\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:28,821 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,821 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,821 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,821 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,821 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 297, None, 10]
2017-08-08 04:25:28,821 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:28,821 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,822 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 298, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:28,822 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01*\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:28,822 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,822 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,822 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,822 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,822 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 298, None, 10]
2017-08-08 04:25:28,822 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:28,822 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,823 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 299, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,823 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01+\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,823 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,823 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,823 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,823 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,823 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 299, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,823 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,824 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,824 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 300, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:28,824 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01,\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:28,824 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,824 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,824 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,824 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,824 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 300, None, 1]
2017-08-08 04:25:28,825 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,825 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,825 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 301, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:28,825 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcd\x01-\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:28,825 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,825 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,825 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,825 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,826 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 301, None, None]
2017-08-08 04:25:28,826 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,826 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,826 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 302, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:28,826 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01.\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:28,826 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,826 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,826 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,827 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,827 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 302, None, 1]
2017-08-08 04:25:28,827 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:28,827 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,827 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 303, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:28,827 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01/\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:28,827 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,828 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,828 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,828 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,828 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 303, None, None]
2017-08-08 04:25:28,828 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,828 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,828 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 304, 'nvim_get_current_buf', ()]
2017-08-08 04:25:28,828 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x010\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:28,828 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,829 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,829 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,829 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,829 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 304, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:28,829 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:28,829 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,829 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 305, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [' __pycache__/urls.cpython-36.pyc', ' __pycache__/urls.cpython-35.pyc', ' __pycache__/settings.cpython-36.pyc', ' __pycache__/settings.cpython-35.pyc', ' __pycache__/hosts.cpython-36.pyc', ' __pycache__/hosts.cpython-35.pyc', ' __pycache__/__init__.cpython-36.pyc', ' __pycache__/__init__.cpython-35.pyc', ' __init__.pyc', ' __init__.py'])]
2017-08-08 04:25:28,829 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x011\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x9a\xda\x00  __pycache__/urls.cpython-36.pyc\xda\x00  __pycache__/urls.cpython-35.pyc\xda\x00$ __pycache__/settings.cpython-36.pyc\xda\x00$ __pycache__/settings.cpython-35.pyc\xda\x00! __pycache__/hosts.cpython-36.pyc\xda\x00! __pycache__/hosts.cpython-35.pyc\xda\x00$ __pycache__/__init__.cpython-36.pyc\xda\x00$ __pycache__/__init__.cpython-35.pyc\xad __init__.pyc\xac __init__.py''
2017-08-08 04:25:28,830 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,830 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,830 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,830 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,830 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 305, None, None]
2017-08-08 04:25:28,830 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,830 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,830 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 306, 'nvim_get_current_win', ()]
2017-08-08 04:25:28,831 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x012\xb4nvim_get_current_win\x90''
2017-08-08 04:25:28,831 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,831 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,831 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,831 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,831 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 306, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:28,831 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:28,831 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,832 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 307, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:28,832 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x013\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:28,832 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,832 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,832 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,832 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,832 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 307, None, 10]
2017-08-08 04:25:28,832 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:28,832 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,833 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 308, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:28,833 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x014\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:28,833 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,833 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,833 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,833 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,833 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 308, None, 10]
2017-08-08 04:25:28,833 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:28,833 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,834 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 309, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:28,834 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x015\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:28,834 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,834 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,834 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,834 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,834 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 309, None, 10]
2017-08-08 04:25:28,834 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:28,834 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,835 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 310, 'nvim_command', ('normal! zb',)]
2017-08-08 04:25:28,835 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x016\xacnvim_command\x91\xaanormal! zb''
2017-08-08 04:25:28,835 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,835 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,835 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,835 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,835 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 310, None, None]
2017-08-08 04:25:28,835 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,835 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,836 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 311, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon ""|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:28,836 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x017\xacnvim_command\x91\xda\x00lredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon ""|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:28,836 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,836 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,836 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,845 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,846 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 311, None, None]
2017-08-08 04:25:28,846 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:28,846 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,846 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 312, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,847 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x018\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,847 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,848 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,848 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,848 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,848 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 312, None, 0]
2017-08-08 04:25:28,848 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,848 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,859 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 313, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,859 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x019\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,860 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,860 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,860 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,860 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,860 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 313, None, 0]
2017-08-08 04:25:28,860 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,861 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,873 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 314, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,873 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01:\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,874 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,874 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,874 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,874 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,874 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 314, None, 0]
2017-08-08 04:25:28,875 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,875 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,887 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 315, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,887 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01;\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,888 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,888 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,888 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,888 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,888 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 315, None, 0]
2017-08-08 04:25:28,889 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,889 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,901 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 316, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,901 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01<\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,901 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,901 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,901 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,902 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,902 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 316, None, 0]
2017-08-08 04:25:28,902 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,902 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,912 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 317, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,913 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01=\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,913 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,913 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,913 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,913 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,913 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 317, None, 0]
2017-08-08 04:25:28,913 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,914 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,924 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 318, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,925 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01>\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,925 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,925 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,926 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,926 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,926 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 318, None, 0]
2017-08-08 04:25:28,926 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,926 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,939 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 319, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,939 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01?\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,940 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,940 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,940 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,940 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,941 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 319, None, 0]
2017-08-08 04:25:28,941 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,941 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,952 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 320, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,952 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01@\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,952 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,952 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,953 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,953 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,953 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 320, None, 0]
2017-08-08 04:25:28,953 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,953 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,964 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 321, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,964 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01A\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,964 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,964 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,964 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,965 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,965 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 321, None, 0]
2017-08-08 04:25:28,965 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,965 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,978 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 322, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,978 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01B\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,978 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,978 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,979 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,979 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,979 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 322, None, 0]
2017-08-08 04:25:28,979 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,980 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:28,994 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 323, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:28,994 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01C\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:28,994 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:28,995 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,995 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:28,995 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:28,995 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 323, None, 0]
2017-08-08 04:25:28,996 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:28,996 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,008 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 324, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,008 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01D\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,008 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,009 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,009 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,009 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,010 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 324, None, 0]
2017-08-08 04:25:29,010 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,010 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,021 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 325, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,022 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01E\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,022 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,022 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,022 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,022 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,022 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 325, None, 0]
2017-08-08 04:25:29,022 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,023 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,033 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 326, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,033 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01F\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,034 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,034 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,034 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,034 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,034 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 326, None, 0]
2017-08-08 04:25:29,035 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,035 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,047 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 327, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,048 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01G\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,048 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,048 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,048 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,049 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,049 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 327, None, 0]
2017-08-08 04:25:29,049 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,049 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,062 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 328, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,062 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01H\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,062 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,062 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,063 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,063 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,063 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 328, None, 0]
2017-08-08 04:25:29,063 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,063 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,075 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 329, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,076 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01I\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,076 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,076 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,076 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,077 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,077 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 329, None, 0]
2017-08-08 04:25:29,077 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,077 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,090 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 330, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,090 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01J\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,090 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,091 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,091 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,091 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,091 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 330, None, 0]
2017-08-08 04:25:29,091 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,092 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,103 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 331, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,103 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01K\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,103 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,104 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,104 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,104 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,104 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 331, None, 0]
2017-08-08 04:25:29,104 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,104 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,115 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 332, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,115 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01L\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,115 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,115 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,115 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,116 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,116 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 332, None, 0]
2017-08-08 04:25:29,116 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,116 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,129 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 333, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,129 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01M\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,129 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,129 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,130 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,130 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,130 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 333, None, 0]
2017-08-08 04:25:29,130 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,130 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,142 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 334, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,142 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01N\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,142 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,142 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,142 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,142 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,143 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 334, None, 0]
2017-08-08 04:25:29,143 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,143 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,156 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 335, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,156 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01O\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,156 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,157 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,157 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,159 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,159 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 335, None, 0]
2017-08-08 04:25:29,159 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,160 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,172 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 336, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,172 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01P\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,172 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,172 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,172 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,173 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,173 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 336, None, 0]
2017-08-08 04:25:29,173 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,173 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,185 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 337, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,185 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01Q\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,185 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,185 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,185 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,186 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,186 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 337, None, 0]
2017-08-08 04:25:29,186 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,186 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,199 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 338, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,200 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01R\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,200 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,200 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,200 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,201 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,201 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 338, None, 0]
2017-08-08 04:25:29,201 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,202 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,214 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 339, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,214 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01S\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,214 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,214 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,214 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,215 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,215 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 339, None, 0]
2017-08-08 04:25:29,215 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,215 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,227 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 340, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,227 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01T\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,227 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,227 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,227 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,227 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,227 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 340, None, 0]
2017-08-08 04:25:29,228 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,228 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,240 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 341, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,240 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01U\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,240 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,241 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,241 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,242 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,242 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 341, None, 0]
2017-08-08 04:25:29,242 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,242 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,253 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 342, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,253 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01V\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,253 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,253 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,253 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,254 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,254 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 342, None, 0]
2017-08-08 04:25:29,254 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,254 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,268 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 343, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,268 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01W\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,268 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,268 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,268 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,269 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,269 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 343, None, 0]
2017-08-08 04:25:29,269 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,269 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,280 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 344, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,280 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01X\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,280 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,280 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,280 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,281 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,281 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 344, None, 0]
2017-08-08 04:25:29,281 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,281 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,294 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 345, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,294 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01Y\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,294 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,294 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,295 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,295 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,295 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 345, None, 0]
2017-08-08 04:25:29,295 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,295 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,306 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 346, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,307 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01Z\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,307 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,307 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,307 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,308 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,308 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 346, None, 0]
2017-08-08 04:25:29,308 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,308 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,321 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 347, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,321 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01[\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,322 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,322 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,322 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,322 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,322 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 347, None, 0]
2017-08-08 04:25:29,323 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,323 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,335 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 348, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,335 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\\\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,336 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,336 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,336 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,336 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,336 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 348, None, 0]
2017-08-08 04:25:29,336 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,336 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,348 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 349, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,348 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01]\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,348 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,349 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,349 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,349 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,349 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 349, None, 0]
2017-08-08 04:25:29,349 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,350 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,360 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 350, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,361 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01^\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,361 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,361 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,361 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,361 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,362 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 350, None, 0]
2017-08-08 04:25:29,362 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,362 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,373 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 351, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,373 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01_\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,373 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,373 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,373 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,374 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,374 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 351, None, 0]
2017-08-08 04:25:29,374 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,374 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,387 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 352, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,388 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01`\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,388 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,388 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,388 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,388 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,388 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 352, None, 0]
2017-08-08 04:25:29,388 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,389 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,399 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 353, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,399 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01a\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,399 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,400 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,400 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,400 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,400 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 353, None, 0]
2017-08-08 04:25:29,400 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,400 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,412 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 354, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,412 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01b\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,412 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,412 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,412 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,413 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,413 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 354, None, 0]
2017-08-08 04:25:29,413 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,413 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,425 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 355, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,425 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01c\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,425 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,425 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,426 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,426 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,426 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 355, None, 0]
2017-08-08 04:25:29,426 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,426 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,439 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 356, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,439 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01d\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,439 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,439 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,439 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,439 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,439 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 356, None, 0]
2017-08-08 04:25:29,440 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,440 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,450 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 357, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,450 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01e\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,451 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,451 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,451 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,451 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,451 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 357, None, 0]
2017-08-08 04:25:29,451 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,452 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,462 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 358, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,462 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01f\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,463 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,463 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,463 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,463 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,463 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 358, None, 0]
2017-08-08 04:25:29,464 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,464 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,474 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 359, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,475 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01g\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,475 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,475 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,475 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,475 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,475 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 359, None, 0]
2017-08-08 04:25:29,475 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,476 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,488 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 360, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,488 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01h\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,488 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,488 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,488 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,488 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,488 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 360, None, 0]
2017-08-08 04:25:29,489 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,489 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,499 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 361, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,499 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01i\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,500 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,500 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,500 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,500 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,501 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 361, None, 0]
2017-08-08 04:25:29,501 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,501 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,512 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 362, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,512 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01j\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,512 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,513 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,513 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,513 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,513 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 362, None, 0]
2017-08-08 04:25:29,513 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,513 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,524 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 363, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,524 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01k\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,524 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,525 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,525 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,525 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,525 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 363, None, 0]
2017-08-08 04:25:29,525 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,525 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,537 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 364, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,538 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01l\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,538 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,538 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,538 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,538 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,539 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 364, None, 0]
2017-08-08 04:25:29,539 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,539 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,551 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 365, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,551 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01m\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,551 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,551 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,551 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,551 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,552 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 365, None, 0]
2017-08-08 04:25:29,552 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,552 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,563 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 366, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,563 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01n\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,563 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,563 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,564 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,565 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,565 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 366, None, 0]
2017-08-08 04:25:29,565 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,565 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,576 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 367, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,577 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01o\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,577 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,577 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,577 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,577 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,577 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 367, None, 0]
2017-08-08 04:25:29,578 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,578 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,590 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 368, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,591 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01p\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,591 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,591 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,591 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,591 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,591 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 368, None, 0]
2017-08-08 04:25:29,591 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,592 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,602 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 369, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,602 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01q\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,602 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,602 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,603 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,603 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,603 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 369, None, 0]
2017-08-08 04:25:29,603 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,603 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,614 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 370, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,614 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01r\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,614 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,614 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,614 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,615 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,615 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 370, None, 0]
2017-08-08 04:25:29,615 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,615 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,629 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 371, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,629 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01s\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,629 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,629 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,629 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,629 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,630 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 371, None, 0]
2017-08-08 04:25:29,630 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,630 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,643 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 372, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,643 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01t\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,643 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,643 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,643 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,644 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,644 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 372, None, 0]
2017-08-08 04:25:29,644 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,644 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,656 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 373, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,656 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01u\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,656 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,656 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,656 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,657 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,657 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 373, None, 0]
2017-08-08 04:25:29,657 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,657 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,669 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 374, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,669 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01v\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,669 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,669 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,669 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,669 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,670 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 374, None, 0]
2017-08-08 04:25:29,670 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,670 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,682 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 375, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,682 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01w\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,682 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,682 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,682 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,683 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,683 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 375, None, 0]
2017-08-08 04:25:29,683 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,683 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,695 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 376, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,695 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01x\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,695 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,695 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,695 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,696 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,696 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 376, None, 0]
2017-08-08 04:25:29,696 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,696 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,706 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 377, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,707 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01y\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,707 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,707 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,707 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,707 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,707 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 377, None, 0]
2017-08-08 04:25:29,707 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,707 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,718 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 378, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,718 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01z\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,718 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,719 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,719 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,719 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,719 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 378, None, 0]
2017-08-08 04:25:29,719 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,719 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,730 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 379, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,730 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01{\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,730 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,731 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,731 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,731 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,731 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 379, None, 0]
2017-08-08 04:25:29,731 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,731 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,744 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 380, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,745 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01|\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,745 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,745 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,745 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,745 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,745 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 380, None, 0]
2017-08-08 04:25:29,746 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,746 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,756 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 381, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,757 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01}\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,757 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,757 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,757 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,757 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,757 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 381, None, 0]
2017-08-08 04:25:29,757 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,757 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,769 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 382, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,769 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01~\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,769 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,769 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,769 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,769 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,769 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 382, None, 0]
2017-08-08 04:25:29,770 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,770 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,781 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 383, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,781 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x7f\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,781 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,782 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,782 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,782 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,782 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 383, None, 0]
2017-08-08 04:25:29,783 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,783 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,795 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 384, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,795 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x80\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,795 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,795 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,795 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,796 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,796 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 384, None, 0]
2017-08-08 04:25:29,796 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,796 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,809 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 385, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,809 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x81\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,810 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,810 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,810 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,810 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,810 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 385, None, 0]
2017-08-08 04:25:29,810 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,811 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,823 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 386, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,823 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x82\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,824 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,824 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,824 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,824 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,824 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 386, None, 0]
2017-08-08 04:25:29,824 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,824 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,835 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 387, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,835 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x83\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,835 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,836 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,836 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,836 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,836 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 387, None, 0]
2017-08-08 04:25:29,836 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,836 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,847 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 388, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,847 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x84\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,847 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,848 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,848 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,848 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,848 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 388, None, 0]
2017-08-08 04:25:29,848 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,849 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,861 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 389, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,861 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x85\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,862 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,862 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,862 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,862 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,863 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 389, None, 0]
2017-08-08 04:25:29,863 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,863 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,876 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 390, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,876 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x86\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,876 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,876 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,876 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,876 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,877 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 390, None, 0]
2017-08-08 04:25:29,877 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,877 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,888 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 391, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,888 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x87\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,888 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,888 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,888 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,889 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,889 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 391, None, 0]
2017-08-08 04:25:29,890 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,890 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,901 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 392, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,902 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x88\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,902 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,902 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,902 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,903 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,903 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 392, None, 0]
2017-08-08 04:25:29,903 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,903 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,915 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 393, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,916 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x89\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,916 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,916 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,916 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,916 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,916 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 393, None, 0]
2017-08-08 04:25:29,917 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,917 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,928 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 394, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,928 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x8a\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,928 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,928 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,929 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,929 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,929 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 394, None, 0]
2017-08-08 04:25:29,929 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,929 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,940 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 395, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,941 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x8b\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,941 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,941 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,941 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,941 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,941 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 395, None, 0]
2017-08-08 04:25:29,941 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,941 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,956 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 396, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,956 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x8c\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,956 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,956 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,956 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,957 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,957 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 396, None, 0]
2017-08-08 04:25:29,958 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,958 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,970 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 397, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,970 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x8d\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,973 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,973 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,974 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,974 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,974 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 397, None, 0]
2017-08-08 04:25:29,975 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,975 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,985 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 398, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,985 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x8e\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,986 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:29,986 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,986 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:29,986 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:29,987 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 398, None, 0]
2017-08-08 04:25:29,987 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:29,987 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:29,999 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 399, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:29,999 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x8f\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:29,999 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,000 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,000 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,000 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,000 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 399, None, 0]
2017-08-08 04:25:30,000 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,000 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,015 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 400, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,016 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x90\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,016 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,016 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,016 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,016 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,016 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 400, None, 0]
2017-08-08 04:25:30,016 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,017 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,027 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 401, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,027 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x91\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,027 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,028 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,028 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,028 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,028 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 401, None, 0]
2017-08-08 04:25:30,028 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,028 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,041 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 402, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,041 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x92\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,041 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,041 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,042 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,042 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,042 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 402, None, 0]
2017-08-08 04:25:30,042 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,042 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,055 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 403, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,055 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x93\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,055 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,056 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,056 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,056 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,056 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 403, None, 0]
2017-08-08 04:25:30,056 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,056 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,067 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 404, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,067 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x94\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,067 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,067 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,067 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,068 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,068 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 404, None, 0]
2017-08-08 04:25:30,068 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,068 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,079 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 405, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,079 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x95\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,079 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,079 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,079 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,080 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,080 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 405, None, 0]
2017-08-08 04:25:30,080 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,080 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,093 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 406, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,094 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x96\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,095 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,095 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,095 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,095 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,095 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 406, None, 0]
2017-08-08 04:25:30,095 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,096 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,108 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 407, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,108 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x97\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,108 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,109 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,109 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,109 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,109 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 407, None, 0]
2017-08-08 04:25:30,109 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,109 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,121 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 408, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,121 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x98\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,121 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,121 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,121 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,136 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,136 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 408, None, 0]
2017-08-08 04:25:30,137 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,137 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,149 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 409, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,149 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x99\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,150 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,150 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,150 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,150 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,150 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 409, None, 0]
2017-08-08 04:25:30,151 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,151 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,161 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 410, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,162 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x9a\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,162 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,162 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,162 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,163 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,163 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 410, None, 0]
2017-08-08 04:25:30,163 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,163 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,176 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 411, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,176 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x9b\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,176 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,177 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,177 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,178 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,178 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 411, None, 0]
2017-08-08 04:25:30,178 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,178 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,189 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 412, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,190 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x9c\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,190 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,190 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,190 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,190 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,190 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 412, None, 0]
2017-08-08 04:25:30,190 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,190 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,203 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 413, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,203 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x9d\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,203 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,204 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,206 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,206 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,207 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 413, None, 0]
2017-08-08 04:25:30,207 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,207 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,219 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 414, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,220 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x9e\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,220 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,220 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,220 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,222 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,222 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 414, None, 0]
2017-08-08 04:25:30,222 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,222 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,233 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 415, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,233 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\x9f\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,234 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,234 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,234 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,234 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,234 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 415, None, 0]
2017-08-08 04:25:30,234 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,234 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,245 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 416, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,246 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,246 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,246 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,246 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,246 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,246 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 416, None, 0]
2017-08-08 04:25:30,246 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,246 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,259 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 417, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,259 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,259 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,260 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,260 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,260 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,260 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 417, None, 0]
2017-08-08 04:25:30,260 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,260 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,272 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 418, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,273 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa2\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,273 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,273 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,273 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,273 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,273 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 418, None, 0]
2017-08-08 04:25:30,273 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,274 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,286 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 419, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,286 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa3\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,286 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,286 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,287 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,287 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,287 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 419, None, 0]
2017-08-08 04:25:30,287 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,287 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,298 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 420, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,299 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa4\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,299 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,299 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,299 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,300 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,300 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 420, None, 0]
2017-08-08 04:25:30,300 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,300 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,311 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 421, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,312 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa5\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,312 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,312 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,312 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,313 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,313 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 421, None, 0]
2017-08-08 04:25:30,313 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,313 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,326 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 422, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,327 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa6\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,327 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,327 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,327 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,327 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,328 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 422, None, 0]
2017-08-08 04:25:30,328 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,328 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,340 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 423, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,340 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa7\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,340 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,340 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,340 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,340 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,341 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 423, None, 0]
2017-08-08 04:25:30,341 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,341 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,353 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 424, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,353 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa8\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,353 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,353 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,353 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,354 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,354 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 424, None, 0]
2017-08-08 04:25:30,354 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,354 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,367 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 425, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,367 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xa9\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,368 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,368 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,368 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,368 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,368 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 425, None, 0]
2017-08-08 04:25:30,368 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,368 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,379 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 426, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,380 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xaa\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,380 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,380 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,380 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,381 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,381 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 426, None, 0]
2017-08-08 04:25:30,381 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,381 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,392 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 427, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,392 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xab\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,393 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,393 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,393 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,393 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,393 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 427, None, 0]
2017-08-08 04:25:30,393 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,393 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,404 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 428, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,404 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xac\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,405 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,405 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,405 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,405 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,405 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 428, None, 0]
2017-08-08 04:25:30,405 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,405 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,418 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 429, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,419 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xad\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,419 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,419 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,419 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,419 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,419 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 429, None, 0]
2017-08-08 04:25:30,419 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,420 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,431 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 430, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,431 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xae\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,432 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,432 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,432 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,439 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,439 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 430, None, 0]
2017-08-08 04:25:30,439 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,439 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,452 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 431, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,452 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xaf\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,452 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,453 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,453 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,455 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,455 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 431, None, 0]
2017-08-08 04:25:30,455 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,455 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,467 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 432, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,468 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,468 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,468 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,468 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,470 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,470 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 432, None, 0]
2017-08-08 04:25:30,470 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,470 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,483 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 433, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,483 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,483 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,483 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,483 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,483 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,484 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 433, None, 122]
2017-08-08 04:25:30,484 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 122
2017-08-08 04:25:30,484 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,484 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 434, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon "z"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:30,485 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb2\xacnvim_command\x91\xda\x00mredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon "z"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:30,485 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,487 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,487 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,487 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,488 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 434, None, None]
2017-08-08 04:25:30,488 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,488 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,489 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 435, 'nvim_get_current_buf', ()]
2017-08-08 04:25:30,489 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb3\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:30,489 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,489 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,490 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,490 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,490 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 435, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:30,490 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:30,490 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,491 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 436, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_mode', '-- INSERT -- ')]
2017-08-08 04:25:30,491 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb4\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_mode\xad-- INSERT -- ''
2017-08-08 04:25:30,491 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,491 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,491 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,491 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,491 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 436, None, None]
2017-08-08 04:25:30,492 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,492 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,492 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 437, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_sources', 'file_rec(0/19) ')]
2017-08-08 04:25:30,492 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb5\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb9denite_statusline_sources\xaffile_rec(0/19) ''
2017-08-08 04:25:30,492 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,492 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,492 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,492 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,492 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 437, None, None]
2017-08-08 04:25:30,493 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,493 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,493 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 438, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_path', '[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]')]
2017-08-08 04:25:30,493 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb6\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb6denite_statusline_path\xda\x00-[/Users/AMC/Desktop/amcorvi_app/amcorvi_site]''
2017-08-08 04:25:30,493 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,493 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,493 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,493 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,494 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 438, None, None]
2017-08-08 04:25:30,494 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,494 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,494 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 439, 'nvim_buf_set_var', (ExtType(code=0, data=b'\x02'), 'denite_statusline_linenr', '1/0')]
2017-08-08 04:25:30,494 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb7\xb0nvim_buf_set_var\x93\xd4\x00\x02\xb8denite_statusline_linenr\xa31/0''
2017-08-08 04:25:30,494 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,494 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,494 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,494 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,495 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 439, None, None]
2017-08-08 04:25:30,495 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,495 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,495 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 440, 'nvim_command', ('redrawstatus',)]
2017-08-08 04:25:30,495 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb8\xacnvim_command\x91\xacredrawstatus''
2017-08-08 04:25:30,495 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,495 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,495 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,496 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,496 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 440, None, None]
2017-08-08 04:25:30,496 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,496 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,497 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 441, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:30,497 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xb9\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:30,497 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,497 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,497 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,497 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,498 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 441, None, 1]
2017-08-08 04:25:30,498 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:30,498 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,498 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 442, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:30,498 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcd\x01\xba\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:30,498 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,499 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,499 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,499 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,499 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 442, None, None]
2017-08-08 04:25:30,499 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,499 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,499 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 443, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:30,500 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xbb\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:30,500 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,500 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,500 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,500 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,500 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 443, None, 1]
2017-08-08 04:25:30,500 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:30,500 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,501 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 444, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:30,501 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xbc\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:30,501 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,501 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,501 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,501 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,501 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 444, None, None]
2017-08-08 04:25:30,502 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,502 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,502 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 445, 'nvim_command', ('silent! syntax match deniteMatchedRange /\\vz/ contained',)]
2017-08-08 04:25:30,502 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xbd\xacnvim_command\x91\xda\x007silent! syntax match deniteMatchedRange /\\vz/ contained''
2017-08-08 04:25:30,502 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,502 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,502 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,503 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,503 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 445, None, None]
2017-08-08 04:25:30,503 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,503 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,503 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 446, 'nvim_command', ('silent! syntax match deniteMatchedChar /[z]/ containedin=deniteMatchedRange contained',)]
2017-08-08 04:25:30,503 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xbe\xacnvim_command\x91\xda\x00Usilent! syntax match deniteMatchedChar /[z]/ containedin=deniteMatchedRange contained''
2017-08-08 04:25:30,504 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,504 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,504 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,504 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,504 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 446, None, None]
2017-08-08 04:25:30,504 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,504 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,505 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 447, 'nvim_get_current_buf', ()]
2017-08-08 04:25:30,505 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xbf\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:30,505 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,505 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,505 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,505 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,505 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 447, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:30,505 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:30,505 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,506 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 448, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [])]
2017-08-08 04:25:30,506 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc0\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x90''
2017-08-08 04:25:30,506 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,506 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,506 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,506 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,506 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 448, None, None]
2017-08-08 04:25:30,507 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,507 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,507 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 449, 'nvim_get_current_win', ()]
2017-08-08 04:25:30,507 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc1\xb4nvim_get_current_win\x90''
2017-08-08 04:25:30,507 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,507 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,507 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,507 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,508 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 449, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:30,508 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:30,508 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,508 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 450, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:30,508 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc2\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:30,508 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,509 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,509 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,509 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,510 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 450, None, 10]
2017-08-08 04:25:30,510 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 10
2017-08-08 04:25:30,510 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,510 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 451, 'nvim_command', ('resize 0',)]
2017-08-08 04:25:30,510 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc3\xacnvim_command\x91\xa8resize 0''
2017-08-08 04:25:30,510 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,510 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,511 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,511 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,511 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 451, None, None]
2017-08-08 04:25:30,511 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,511 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,511 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 452, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:30,512 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc4\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:30,512 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,512 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,512 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,512 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,512 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 452, None, 1]
2017-08-08 04:25:30,512 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:30,512 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,513 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 453, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:30,513 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc5\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:30,513 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,513 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,513 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,513 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,513 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 453, None, 1]
2017-08-08 04:25:30,513 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:30,514 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,514 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 454, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon "z"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:30,514 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc6\xacnvim_command\x91\xda\x00mredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon "z"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:30,514 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,515 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,515 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,528 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,529 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 454, None, None]
2017-08-08 04:25:30,529 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:30,529 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,529 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 455, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,529 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc7\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,529 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,529 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,530 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,530 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,530 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 455, None, 0]
2017-08-08 04:25:30,531 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,531 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,544 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 456, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,544 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc8\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,544 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,544 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,544 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,545 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,545 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 456, None, 0]
2017-08-08 04:25:30,545 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,545 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,558 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 457, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,558 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xc9\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,559 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,559 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,559 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,559 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,559 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 457, None, 0]
2017-08-08 04:25:30,559 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,560 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,572 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 458, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,572 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xca\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,572 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,573 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,573 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,573 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,573 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 458, None, 0]
2017-08-08 04:25:30,573 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,574 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,587 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 459, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,587 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xcb\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,587 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,587 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,587 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,588 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,589 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 459, None, 0]
2017-08-08 04:25:30,589 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,589 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,600 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 460, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,600 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xcc\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,600 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,600 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,601 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,601 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,601 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 460, None, 0]
2017-08-08 04:25:30,601 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,601 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,614 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 461, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,614 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xcd\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,614 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,615 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,615 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,615 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,615 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 461, None, 0]
2017-08-08 04:25:30,615 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,615 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,627 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 462, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,627 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xce\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,627 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,627 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,627 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,627 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,627 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 462, None, 0]
2017-08-08 04:25:30,628 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,628 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,639 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 463, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,639 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xcf\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,639 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,640 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,640 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,640 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,640 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 463, None, 0]
2017-08-08 04:25:30,640 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,640 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,651 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 464, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,651 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,652 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,652 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,652 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,652 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,652 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 464, None, 0]
2017-08-08 04:25:30,652 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,652 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,666 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 465, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,666 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,666 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,666 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,666 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,667 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,667 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 465, None, 0]
2017-08-08 04:25:30,667 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,667 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,680 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 466, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,680 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd2\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,681 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,681 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,681 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,681 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,682 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 466, None, 0]
2017-08-08 04:25:30,682 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,682 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,693 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 467, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,694 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd3\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,694 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,694 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,694 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,694 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,694 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 467, None, 0]
2017-08-08 04:25:30,695 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,695 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,705 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 468, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,705 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd4\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,706 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,706 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,706 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,707 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,707 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 468, None, 0]
2017-08-08 04:25:30,707 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,707 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,721 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 469, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,721 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd5\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,721 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,721 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,721 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,722 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,722 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 469, None, 0]
2017-08-08 04:25:30,722 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,722 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,737 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 470, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,737 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd6\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,738 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,738 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,738 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,738 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,738 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 470, None, 0]
2017-08-08 04:25:30,738 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,739 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,757 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 471, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,758 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd7\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,758 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,758 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,758 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,759 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,759 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 471, None, 0]
2017-08-08 04:25:30,759 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,759 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,770 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 472, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,770 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd8\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,771 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,771 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,771 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,771 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,771 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 472, None, 0]
2017-08-08 04:25:30,771 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,771 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,784 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 473, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,785 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xd9\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,787 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,787 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,787 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,787 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,787 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 473, None, 0]
2017-08-08 04:25:30,788 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,788 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,801 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 474, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,801 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xda\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,803 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,803 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,803 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,803 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,803 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 474, None, 0]
2017-08-08 04:25:30,803 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,804 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,816 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 475, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,817 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xdb\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,817 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,817 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,817 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,817 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,818 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 475, None, 0]
2017-08-08 04:25:30,818 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,818 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,829 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 476, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,829 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xdc\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,829 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,829 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,829 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,830 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,830 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 476, None, 0]
2017-08-08 04:25:30,830 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,830 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,843 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 477, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,843 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xdd\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,843 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,843 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,844 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,844 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,844 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 477, None, 0]
2017-08-08 04:25:30,844 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,844 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,856 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 478, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,856 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xde\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,857 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,857 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,857 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,858 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,858 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 478, None, 0]
2017-08-08 04:25:30,858 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,858 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,871 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 479, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,871 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xdf\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,871 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,871 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,871 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,872 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,872 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 479, None, 0]
2017-08-08 04:25:30,872 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,872 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,884 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 480, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,885 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,885 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,885 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,885 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,886 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,886 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 480, None, 0]
2017-08-08 04:25:30,886 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,887 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,898 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 481, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,898 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,898 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,898 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,899 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,899 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,899 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 481, None, 0]
2017-08-08 04:25:30,899 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,899 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,911 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 482, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,911 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe2\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,911 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,911 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,911 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,911 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,912 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 482, None, 0]
2017-08-08 04:25:30,912 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,912 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,924 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 483, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,924 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe3\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,924 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,924 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,924 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,925 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,925 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 483, None, 0]
2017-08-08 04:25:30,925 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,925 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,937 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 484, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,938 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe4\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,938 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,938 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,938 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,938 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,939 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 484, None, 0]
2017-08-08 04:25:30,939 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,939 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,952 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 485, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,953 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe5\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,953 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,953 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,953 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,954 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,954 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 485, None, 0]
2017-08-08 04:25:30,954 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,954 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,967 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 486, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,969 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe6\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,969 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,970 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,970 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,971 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,971 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 486, None, 0]
2017-08-08 04:25:30,971 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,971 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,985 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 487, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,986 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe7\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,986 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:30,986 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,986 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:30,986 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:30,987 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 487, None, 0]
2017-08-08 04:25:30,987 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:30,987 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:30,999 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 488, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:30,999 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe8\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:30,999 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,000 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,000 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,000 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,000 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 488, None, 0]
2017-08-08 04:25:31,003 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,003 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,015 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 489, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,015 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xe9\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,015 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,015 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,015 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,016 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,016 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 489, None, 0]
2017-08-08 04:25:31,016 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,016 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,028 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 490, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,029 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xea\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,029 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,029 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,029 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,029 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,029 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 490, None, 0]
2017-08-08 04:25:31,029 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,029 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,041 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 491, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,041 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xeb\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,041 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,041 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,041 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,042 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,042 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 491, None, 0]
2017-08-08 04:25:31,042 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,042 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,053 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 492, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,053 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xec\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,054 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,054 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,054 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,055 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,055 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 492, None, 0]
2017-08-08 04:25:31,055 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,055 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,073 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 493, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,073 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xed\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,073 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,073 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,073 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,073 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,073 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 493, None, 0]
2017-08-08 04:25:31,074 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,074 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,087 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 494, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,087 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xee\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,087 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,088 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,088 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,088 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,088 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 494, None, 0]
2017-08-08 04:25:31,088 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,088 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,099 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 495, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,099 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xef\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,100 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,100 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,102 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,103 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,103 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 495, None, 0]
2017-08-08 04:25:31,103 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,104 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,116 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 496, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,116 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf0\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,116 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,117 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,117 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,121 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,121 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 496, None, 0]
2017-08-08 04:25:31,121 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,121 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,134 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 497, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,134 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf1\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,135 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,135 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,135 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,135 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,135 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 497, None, 0]
2017-08-08 04:25:31,135 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,135 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,148 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 498, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,149 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf2\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,149 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,149 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,149 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,149 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,149 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 498, None, 0]
2017-08-08 04:25:31,149 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,149 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,161 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 499, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,161 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf3\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,161 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,161 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,161 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,161 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,162 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 499, None, 0]
2017-08-08 04:25:31,162 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,162 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,174 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 500, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,175 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf4\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,175 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,175 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,175 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,177 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,178 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 500, None, 0]
2017-08-08 04:25:31,178 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,178 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,189 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 501, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,189 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf5\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,189 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,190 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,190 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,190 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,190 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 501, None, 0]
2017-08-08 04:25:31,190 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,190 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,203 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 502, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,204 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf6\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,204 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,204 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,204 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,204 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,205 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 502, None, 0]
2017-08-08 04:25:31,205 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,205 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,216 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 503, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,217 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf7\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,217 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,217 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,217 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,218 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,218 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 503, None, 0]
2017-08-08 04:25:31,218 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,218 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,231 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 504, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,231 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf8\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,232 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,232 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,232 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,232 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,233 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 504, None, 0]
2017-08-08 04:25:31,233 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,233 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,245 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 505, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,245 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xf9\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,246 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,246 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,246 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,246 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,246 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 505, None, 0]
2017-08-08 04:25:31,246 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,246 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,259 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 506, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,259 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xfa\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,259 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,259 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,259 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,260 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,260 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 506, None, 0]
2017-08-08 04:25:31,260 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,260 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,273 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 507, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,273 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xfb\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,273 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,273 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,274 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,274 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,274 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 507, None, 0]
2017-08-08 04:25:31,274 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,274 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,285 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 508, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,285 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xfc\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,285 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,285 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,285 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,286 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,286 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 508, None, 0]
2017-08-08 04:25:31,286 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,286 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,299 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 509, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,299 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xfd\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,299 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,299 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,300 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,300 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,300 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 509, None, 0]
2017-08-08 04:25:31,301 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,301 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,313 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 510, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,313 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xfe\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,313 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,313 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,313 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,313 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,313 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 510, None, 0]
2017-08-08 04:25:31,314 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,314 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,326 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 511, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,327 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x01\xff\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,327 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,327 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,327 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,327 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,327 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 511, None, 0]
2017-08-08 04:25:31,327 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,327 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,338 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 512, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,338 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x00\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,338 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,338 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,339 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,339 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,339 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 512, None, 0]
2017-08-08 04:25:31,339 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,339 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,350 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 513, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,351 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x01\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,351 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,351 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,351 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,351 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,351 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 513, None, 0]
2017-08-08 04:25:31,351 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,351 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,363 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 514, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,363 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x02\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,363 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,363 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,363 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,363 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,363 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 514, None, 0]
2017-08-08 04:25:31,364 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,364 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,377 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 515, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,377 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x03\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,377 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,377 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,377 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,377 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,378 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 515, None, 0]
2017-08-08 04:25:31,378 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,378 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,393 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 516, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,393 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x04\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,393 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,393 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,393 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,394 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,394 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 516, None, 0]
2017-08-08 04:25:31,394 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,394 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,405 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 517, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,405 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x05\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,406 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,406 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,406 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,406 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,406 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 517, None, 0]
2017-08-08 04:25:31,407 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,407 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,417 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 518, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,418 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x06\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,418 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,418 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,418 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,418 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,418 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 518, None, 0]
2017-08-08 04:25:31,419 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,419 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,432 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 519, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,432 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x07\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,432 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,433 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,433 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,433 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,434 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 519, None, 0]
2017-08-08 04:25:31,434 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,434 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,447 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 520, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,447 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x08\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,447 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,447 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,448 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,448 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,448 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 520, None, 0]
2017-08-08 04:25:31,448 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,448 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,460 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 521, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,460 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\t\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,460 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,460 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,460 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,461 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,461 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 521, None, 0]
2017-08-08 04:25:31,461 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,461 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,472 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 522, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,472 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\n\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,472 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,472 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,472 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,473 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,473 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 522, None, 0]
2017-08-08 04:25:31,473 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,473 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,486 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 523, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,486 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x0b\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,487 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,487 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,487 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,487 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,487 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 523, None, 0]
2017-08-08 04:25:31,487 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,487 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,498 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 524, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,499 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x0c\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,499 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,499 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,499 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,500 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,500 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 524, None, 0]
2017-08-08 04:25:31,500 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,500 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,513 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 525, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,513 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\r\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,513 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,513 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,514 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,514 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,514 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 525, None, 0]
2017-08-08 04:25:31,514 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,514 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,525 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 526, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,525 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x0e\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,525 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,525 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,525 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,526 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,526 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 526, None, 0]
2017-08-08 04:25:31,526 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,526 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,539 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 527, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,539 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x0f\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,539 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,540 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,540 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,540 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,540 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 527, None, 0]
2017-08-08 04:25:31,540 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,541 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,553 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 528, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,553 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x10\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,553 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,553 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,553 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,553 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,553 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 528, None, 0]
2017-08-08 04:25:31,554 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,554 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,564 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 529, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,565 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x11\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,565 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,565 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,565 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,565 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,565 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 529, None, 0]
2017-08-08 04:25:31,566 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,566 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,579 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 530, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,579 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x12\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,579 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,579 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,579 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,579 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,579 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 530, None, 0]
2017-08-08 04:25:31,580 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,580 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,592 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 531, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,593 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x13\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,593 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,593 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,593 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,593 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,593 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 531, None, 0]
2017-08-08 04:25:31,593 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,594 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,606 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 532, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,606 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x14\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,606 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,606 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,607 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,607 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,607 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 532, None, 0]
2017-08-08 04:25:31,607 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,607 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,619 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 533, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,619 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x15\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,619 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,619 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,619 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,619 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,620 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 533, None, 0]
2017-08-08 04:25:31,620 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,620 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,630 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 534, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,631 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x16\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,631 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,631 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,631 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,631 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,631 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 534, None, 0]
2017-08-08 04:25:31,631 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,632 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,643 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 535, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,643 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x17\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,643 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,643 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,643 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,643 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,644 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 535, None, 0]
2017-08-08 04:25:31,644 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,644 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,657 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 536, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,657 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x18\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,657 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,657 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,657 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,658 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,658 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 536, None, 0]
2017-08-08 04:25:31,658 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,658 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,671 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 537, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,672 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x19\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,672 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,672 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,672 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,673 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,673 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 537, None, 0]
2017-08-08 04:25:31,673 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,673 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,685 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 538, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,685 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x1a\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,685 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,685 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,685 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,686 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,686 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 538, None, 0]
2017-08-08 04:25:31,686 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,686 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,699 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 539, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,699 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x1b\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,700 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,700 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,700 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,700 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,701 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 539, None, 0]
2017-08-08 04:25:31,701 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,701 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,712 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 540, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,712 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x1c\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,712 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,712 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,712 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,713 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,713 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 540, None, 0]
2017-08-08 04:25:31,713 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,713 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,725 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 541, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,725 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x1d\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,725 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,725 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,725 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,726 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,726 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 541, None, 0]
2017-08-08 04:25:31,726 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,726 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,739 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 542, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,739 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x1e\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,739 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,739 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,739 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,740 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,740 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 542, None, 0]
2017-08-08 04:25:31,740 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,740 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,752 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 543, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,753 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x1f\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,753 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,753 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,754 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,754 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,754 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 543, None, 0]
2017-08-08 04:25:31,754 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,754 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,765 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 544, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,766 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02 \xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,766 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,766 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,766 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,766 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,766 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 544, None, 0]
2017-08-08 04:25:31,767 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,767 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,778 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 545, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,778 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02!\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,778 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,778 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,778 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,778 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,778 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 545, None, 0]
2017-08-08 04:25:31,779 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,779 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,792 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 546, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,792 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02"\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,792 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,792 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,792 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,792 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,792 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 546, None, 0]
2017-08-08 04:25:31,793 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,793 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,803 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 547, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,803 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02#\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,804 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,804 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,804 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,804 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,804 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 547, None, 0]
2017-08-08 04:25:31,805 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,805 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,816 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 548, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,816 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02$\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,816 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,817 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,817 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,817 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,817 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 548, None, 0]
2017-08-08 04:25:31,817 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,818 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,829 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 549, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,829 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02%\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,829 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,829 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,829 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,830 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,830 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 549, None, 0]
2017-08-08 04:25:31,830 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,830 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,843 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 550, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,843 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02&\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,843 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,843 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,844 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,844 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,844 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 550, None, 0]
2017-08-08 04:25:31,844 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,844 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,855 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 551, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,855 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcd\x02'\xb2nvim_call_function\x92\xa7getchar\x91\xc2"'
2017-08-08 04:25:31,856 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,856 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,856 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,856 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,856 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 551, None, 0]
2017-08-08 04:25:31,856 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,857 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,868 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 552, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,868 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02(\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,868 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,868 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,869 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,869 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,869 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 552, None, 0]
2017-08-08 04:25:31,869 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,869 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,880 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 553, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,881 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02)\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,881 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,881 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,881 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,882 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,882 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 553, None, 0]
2017-08-08 04:25:31,882 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,882 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,893 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 554, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,893 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02*\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,893 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,893 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,893 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,893 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,893 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 554, None, 0]
2017-08-08 04:25:31,894 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,894 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,905 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 555, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,905 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02+\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,905 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,905 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,905 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,906 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,906 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 555, None, 0]
2017-08-08 04:25:31,906 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,906 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,917 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 556, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,917 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02,\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,917 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,917 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,917 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,918 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,918 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 556, None, 0]
2017-08-08 04:25:31,918 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,918 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,929 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 557, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,929 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02-\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,930 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,930 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,930 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,930 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,930 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 557, None, 115]
2017-08-08 04:25:31,930 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 115
2017-08-08 04:25:31,930 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,931 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 558, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon "zs"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:31,931 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02.\xacnvim_command\x91\xda\x00nredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon "zs"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:31,931 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,931 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,932 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,932 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,932 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 558, None, None]
2017-08-08 04:25:31,932 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:31,933 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,933 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 559, 'nvim_get_current_buf', ()]
2017-08-08 04:25:31,933 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02/\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:31,933 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,934 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,934 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,934 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,934 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 559, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:31,934 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:31,934 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,935 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 560, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:31,935 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x020\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:31,935 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,935 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,935 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,935 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,935 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 560, None, 1]
2017-08-08 04:25:31,936 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:31,936 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,936 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 561, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:31,936 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcd\x021\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:31,936 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,936 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,936 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,936 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,936 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 561, None, None]
2017-08-08 04:25:31,937 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:31,937 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,937 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 562, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:31,937 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x022\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:31,937 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,938 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,938 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,938 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,938 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 562, None, 1]
2017-08-08 04:25:31,938 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:31,938 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,938 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 563, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:31,939 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x023\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:31,939 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,939 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,939 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,939 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,939 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 563, None, None]
2017-08-08 04:25:31,939 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:31,940 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,940 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 564, 'nvim_command', ('silent! syntax match deniteMatchedRange /\\vz[^z]*s/ contained',)]
2017-08-08 04:25:31,940 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x024\xacnvim_command\x91\xda\x00=silent! syntax match deniteMatchedRange /\\vz[^z]*s/ contained''
2017-08-08 04:25:31,940 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,941 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,941 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,941 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,941 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 564, None, None]
2017-08-08 04:25:31,942 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:31,942 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,942 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 565, 'nvim_command', ('silent! syntax match deniteMatchedChar /[zs]/ containedin=deniteMatchedRange contained',)]
2017-08-08 04:25:31,942 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x025\xacnvim_command\x91\xda\x00Vsilent! syntax match deniteMatchedChar /[zs]/ containedin=deniteMatchedRange contained''
2017-08-08 04:25:31,943 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,943 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,943 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,943 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,943 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 565, None, None]
2017-08-08 04:25:31,943 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:31,943 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,944 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 566, 'nvim_get_current_buf', ()]
2017-08-08 04:25:31,944 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x026\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:31,944 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,944 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,944 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,944 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,944 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 566, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:31,944 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:31,945 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,945 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 567, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [])]
2017-08-08 04:25:31,945 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x027\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x90''
2017-08-08 04:25:31,945 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,945 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,945 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,945 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,945 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 567, None, None]
2017-08-08 04:25:31,946 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:31,946 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,946 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 568, 'nvim_get_current_win', ()]
2017-08-08 04:25:31,946 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x028\xb4nvim_get_current_win\x90''
2017-08-08 04:25:31,946 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,946 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,946 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,946 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,946 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 568, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:31,947 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:31,947 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,947 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 569, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:31,947 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x029\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:31,947 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,947 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,948 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,948 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,948 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 569, None, 1]
2017-08-08 04:25:31,948 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:31,948 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,949 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 570, 'nvim_command', ('resize 0',)]
2017-08-08 04:25:31,949 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02:\xacnvim_command\x91\xa8resize 0''
2017-08-08 04:25:31,949 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,949 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,950 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,950 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,950 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 570, None, None]
2017-08-08 04:25:31,950 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:31,950 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,950 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 571, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:31,950 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02;\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:31,950 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,951 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,951 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,951 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,951 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 571, None, 1]
2017-08-08 04:25:31,951 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:31,951 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,951 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 572, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:31,951 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02<\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:31,951 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,952 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,952 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,952 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,952 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 572, None, 1]
2017-08-08 04:25:31,952 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:31,952 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,952 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 573, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon "zs"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:31,952 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02=\xacnvim_command\x91\xda\x00nredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon "zs"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:31,952 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,953 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,953 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,964 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,965 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 573, None, None]
2017-08-08 04:25:31,965 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:31,965 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,965 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 574, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,966 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02>\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,966 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,966 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,966 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,967 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,967 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 574, None, 0]
2017-08-08 04:25:31,967 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,967 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,977 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 575, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,978 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02?\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,978 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,978 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,978 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,978 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,978 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 575, None, 0]
2017-08-08 04:25:31,978 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,978 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:31,989 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 576, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:31,989 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02@\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:31,989 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:31,989 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,990 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:31,990 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:31,991 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 576, None, 0]
2017-08-08 04:25:31,991 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:31,991 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,002 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 577, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,003 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02A\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,003 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,003 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,003 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,003 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,003 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 577, None, 0]
2017-08-08 04:25:32,004 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,004 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,016 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 578, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,017 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02B\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,017 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,017 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,017 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,018 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,018 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 578, None, 0]
2017-08-08 04:25:32,018 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,018 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,032 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 579, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,033 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02C\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,033 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,033 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,033 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,040 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,040 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 579, None, 104]
2017-08-08 04:25:32,040 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 104
2017-08-08 04:25:32,040 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,041 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 580, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon "zsh"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:32,041 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02D\xacnvim_command\x91\xda\x00oredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon "zsh"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:32,041 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,041 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,041 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,042 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,042 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 580, None, None]
2017-08-08 04:25:32,042 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,042 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,043 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 581, 'nvim_get_current_buf', ()]
2017-08-08 04:25:32,043 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02E\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:32,043 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,043 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,043 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,044 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,044 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 581, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:32,044 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:32,044 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,044 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 582, 'nvim_call_function', ('hlexists', ['deniteMatchedRange'])]
2017-08-08 04:25:32,045 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02F\xb2nvim_call_function\x92\xa8hlexists\x91\xb2deniteMatchedRange''
2017-08-08 04:25:32,045 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,045 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,045 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,045 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,045 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 582, None, 1]
2017-08-08 04:25:32,045 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,045 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,046 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 583, 'nvim_command', ('silent! syntax clear deniteMatchedRange',)]
2017-08-08 04:25:32,046 [DEBUG @ base.py:send:113] 64726 - Sending 'b"\x94\x00\xcd\x02G\xacnvim_command\x91\xda\x00'silent! syntax clear deniteMatchedRange"'
2017-08-08 04:25:32,046 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,046 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,046 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,047 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,047 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 583, None, None]
2017-08-08 04:25:32,047 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,047 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,047 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 584, 'nvim_call_function', ('hlexists', ['deniteMatchedChar'])]
2017-08-08 04:25:32,047 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02H\xb2nvim_call_function\x92\xa8hlexists\x91\xb1deniteMatchedChar''
2017-08-08 04:25:32,047 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,048 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,048 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,048 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,048 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 584, None, 1]
2017-08-08 04:25:32,048 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,048 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,048 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 585, 'nvim_command', ('silent! syntax clear deniteMatchedChar',)]
2017-08-08 04:25:32,048 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02I\xacnvim_command\x91\xda\x00&silent! syntax clear deniteMatchedChar''
2017-08-08 04:25:32,049 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,049 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,049 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,049 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,049 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 585, None, None]
2017-08-08 04:25:32,049 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,049 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,049 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 586, 'nvim_command', ('silent! syntax match deniteMatchedRange /\\vz[^z]*s[^s]*h/ contained',)]
2017-08-08 04:25:32,050 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02J\xacnvim_command\x91\xda\x00Csilent! syntax match deniteMatchedRange /\\vz[^z]*s[^s]*h/ contained''
2017-08-08 04:25:32,050 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,050 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,050 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,050 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,050 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 586, None, None]
2017-08-08 04:25:32,050 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,050 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,051 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 587, 'nvim_command', ('silent! syntax match deniteMatchedChar /[zsh]/ containedin=deniteMatchedRange contained',)]
2017-08-08 04:25:32,051 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02K\xacnvim_command\x91\xda\x00Wsilent! syntax match deniteMatchedChar /[zsh]/ containedin=deniteMatchedRange contained''
2017-08-08 04:25:32,051 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,051 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,051 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,051 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,052 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 587, None, None]
2017-08-08 04:25:32,052 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,052 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,052 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 588, 'nvim_get_current_buf', ()]
2017-08-08 04:25:32,052 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02L\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:32,052 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,052 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,052 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,053 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,053 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 588, None, ExtType(code=0, data=b'\x02')]
2017-08-08 04:25:32,053 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x02')
2017-08-08 04:25:32,053 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,053 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 589, 'buffer_set_lines', (ExtType(code=0, data=b'\x02'), 0, -1, False, [])]
2017-08-08 04:25:32,053 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02M\xb0buffer_set_lines\x95\xd4\x00\x02\x00\xff\xc2\x90''
2017-08-08 04:25:32,053 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,054 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,054 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,057 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,058 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 589, None, None]
2017-08-08 04:25:32,058 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,058 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,058 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 590, 'nvim_get_current_win', ()]
2017-08-08 04:25:32,058 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02N\xb4nvim_get_current_win\x90''
2017-08-08 04:25:32,059 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,059 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,059 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,060 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,060 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 590, None, ExtType(code=1, data=b'\xcd\x03\xe9')]
2017-08-08 04:25:32,060 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=1, data=b'\xcd\x03\xe9')
2017-08-08 04:25:32,060 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,060 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 591, 'nvim_win_get_height', (ExtType(code=1, data=b'\xcd\x03\xe9'),)]
2017-08-08 04:25:32,061 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02O\xb3nvim_win_get_height\x91\xc7\x03\x01\xcd\x03\xe9''
2017-08-08 04:25:32,061 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,061 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,061 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,061 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,061 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 591, None, 1]
2017-08-08 04:25:32,061 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,061 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,062 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 592, 'nvim_command', ('resize 0',)]
2017-08-08 04:25:32,062 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02P\xacnvim_command\x91\xa8resize 0''
2017-08-08 04:25:32,062 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,062 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,062 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,062 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,063 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 592, None, None]
2017-08-08 04:25:32,063 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,063 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,063 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 593, 'nvim_call_function', ('line', ['$'])]
2017-08-08 04:25:32,063 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02Q\xb2nvim_call_function\x92\xa4line\x91\xa1$''
2017-08-08 04:25:32,063 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,065 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,065 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,066 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,066 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 593, None, 1]
2017-08-08 04:25:32,066 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,066 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,066 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 594, 'nvim_call_function', ('line', ['.'])]
2017-08-08 04:25:32,066 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02R\xb2nvim_call_function\x92\xa4line\x91\xa1.''
2017-08-08 04:25:32,067 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,067 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,067 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,067 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,067 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 594, None, 1]
2017-08-08 04:25:32,067 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,067 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,067 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 595, 'nvim_command', ('redraw|echohl Statement|echon "❯ "|echohl Normal|echon "zsh"|echohl IncSearch|echon ""|echohl Normal|echon ""',)]
2017-08-08 04:25:32,068 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02S\xacnvim_command\x91\xda\x00oredraw|echohl Statement|echon "\xe2\x9d\xaf "|echohl Normal|echon "zsh"|echohl IncSearch|echon ""|echohl Normal|echon ""''
2017-08-08 04:25:32,068 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,068 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,068 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,080 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,081 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 595, None, None]
2017-08-08 04:25:32,081 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,081 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,081 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 596, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,081 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02T\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,082 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,082 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,082 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,087 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,087 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 596, None, 0]
2017-08-08 04:25:32,087 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,087 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,098 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 597, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,098 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02U\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,099 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,099 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,099 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,099 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,099 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 597, None, 0]
2017-08-08 04:25:32,099 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,099 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,111 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 598, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,111 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02V\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,111 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,111 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,111 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,111 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,112 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 598, None, 0]
2017-08-08 04:25:32,112 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,112 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,123 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 599, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,124 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02W\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,124 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,124 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,124 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,124 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,125 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 599, None, 0]
2017-08-08 04:25:32,125 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,125 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,137 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 600, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,137 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02X\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,137 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,137 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,137 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,138 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,138 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 600, None, 0]
2017-08-08 04:25:32,138 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,138 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,151 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 601, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,151 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02Y\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,151 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,151 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,151 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,152 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,152 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 601, None, 0]
2017-08-08 04:25:32,152 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,153 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,164 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 602, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,164 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02Z\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,164 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,164 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,164 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,165 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,165 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 602, None, 0]
2017-08-08 04:25:32,165 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,165 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,177 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 603, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,177 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02[\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,177 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,177 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,178 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,178 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,178 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 603, None, 0]
2017-08-08 04:25:32,178 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,178 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,190 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 604, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,191 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\\\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,191 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,191 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,191 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,191 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,192 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 604, None, 0]
2017-08-08 04:25:32,192 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,192 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,203 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 605, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,203 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02]\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,203 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,203 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,203 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,204 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,204 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 605, None, 0]
2017-08-08 04:25:32,204 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,204 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,215 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 606, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,215 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02^\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,215 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,215 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,215 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,215 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,216 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 606, None, 0]
2017-08-08 04:25:32,216 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,216 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,229 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 607, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,229 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02_\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,230 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,231 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,231 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,231 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,231 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 607, None, 0]
2017-08-08 04:25:32,232 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,232 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,243 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 608, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,244 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02`\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,244 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,244 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,244 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,244 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,244 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 608, None, 0]
2017-08-08 04:25:32,244 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,245 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,255 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 609, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,255 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02a\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,256 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,256 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,256 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,256 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,256 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 609, None, 0]
2017-08-08 04:25:32,256 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,257 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,269 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 610, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,270 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02b\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,270 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,270 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,270 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,270 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,271 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 610, None, 0]
2017-08-08 04:25:32,271 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,271 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,283 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 611, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,283 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02c\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,283 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,284 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,284 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,284 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,284 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 611, None, 0]
2017-08-08 04:25:32,284 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,284 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,295 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 612, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,295 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02d\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,295 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,296 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,296 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,296 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,297 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 612, None, 0]
2017-08-08 04:25:32,297 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,297 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,310 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 613, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,310 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02e\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,311 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,311 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,311 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,311 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,311 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 613, None, 0]
2017-08-08 04:25:32,311 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,311 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,322 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 614, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,322 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02f\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,322 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,322 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,322 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,323 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,323 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 614, None, 0]
2017-08-08 04:25:32,323 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,323 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,335 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 615, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,336 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02g\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,336 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,336 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,336 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,337 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,337 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 615, None, 0]
2017-08-08 04:25:32,337 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,337 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,348 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 616, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,348 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02h\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,348 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,349 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,349 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,349 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,349 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 616, None, 0]
2017-08-08 04:25:32,349 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,349 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,361 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 617, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,361 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02i\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,361 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,361 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,361 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,362 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,362 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 617, None, 0]
2017-08-08 04:25:32,362 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,362 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,375 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 618, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,375 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02j\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,375 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,375 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,375 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,376 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,376 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 618, None, 0]
2017-08-08 04:25:32,376 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,376 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,388 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 619, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,388 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02k\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,388 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,388 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,388 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,389 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,389 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 619, None, 0]
2017-08-08 04:25:32,389 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,389 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,403 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 620, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,403 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02l\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,403 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,404 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,404 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,404 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,404 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 620, None, 0]
2017-08-08 04:25:32,404 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,404 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,417 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 621, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,417 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02m\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,417 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,418 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,418 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,418 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,418 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 621, None, 0]
2017-08-08 04:25:32,418 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,418 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,429 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 622, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,430 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02n\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,430 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,430 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,430 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,430 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,431 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 622, None, 0]
2017-08-08 04:25:32,431 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,431 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,444 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 623, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,444 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02o\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,444 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,444 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,444 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,444 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,444 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 623, None, 0]
2017-08-08 04:25:32,445 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,445 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,456 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 624, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,456 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02p\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,456 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,456 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,457 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,457 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,457 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 624, None, 0]
2017-08-08 04:25:32,457 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,457 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,469 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 625, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,469 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02q\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,469 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,469 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,470 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,470 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,470 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 625, None, 0]
2017-08-08 04:25:32,470 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,470 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,481 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 626, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,481 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02r\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,481 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,481 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,481 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,481 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,482 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 626, None, 0]
2017-08-08 04:25:32,482 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,482 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,494 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 627, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,495 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02s\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,495 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,495 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,495 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,496 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,496 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 627, None, 0]
2017-08-08 04:25:32,496 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,497 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,509 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 628, 'nvim_call_function', ('getchar', [False])]
2017-08-08 04:25:32,510 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02t\xb2nvim_call_function\x92\xa7getchar\x91\xc2''
2017-08-08 04:25:32,510 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,510 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,510 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,511 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,511 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 628, None, 27]
2017-08-08 04:25:32,511 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 27
2017-08-08 04:25:32,511 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,512 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 629, 'nvim_command', ('pclose!',)]
2017-08-08 04:25:32,512 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02u\xacnvim_command\x91\xa7pclose!''
2017-08-08 04:25:32,512 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,512 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,512 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,513 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,513 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 629, None, None]
2017-08-08 04:25:32,513 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,513 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,513 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 630, 'nvim_call_function', ('exists', ['w:denite_match_id'])]
2017-08-08 04:25:32,513 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02v\xb2nvim_call_function\x92\xa6exists\x91\xb1w:denite_match_id''
2017-08-08 04:25:32,514 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,514 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,514 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,514 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,514 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 630, None, 0]
2017-08-08 04:25:32,514 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,514 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,514 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 631, 'nvim_command', ('redraw | echo ""',)]
2017-08-08 04:25:32,515 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02w\xacnvim_command\x91\xb0redraw | echo ""''
2017-08-08 04:25:32,515 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,515 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,515 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,515 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,515 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 631, None, None]
2017-08-08 04:25:32,515 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,515 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,516 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 632, 'nvim_command', ('highlight! link CursorLine CursorLine',)]
2017-08-08 04:25:32,516 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02x\xacnvim_command\x91\xda\x00%highlight! link CursorLine CursorLine''
2017-08-08 04:25:32,516 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,516 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,516 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,516 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,516 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 632, None, None]
2017-08-08 04:25:32,516 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,517 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,517 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 633, 'nvim_call_function', ('exists', ['#ColorScheme'])]
2017-08-08 04:25:32,517 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02y\xb2nvim_call_function\x92\xa6exists\x91\xac#ColorScheme''
2017-08-08 04:25:32,517 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,517 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,517 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,517 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,517 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 633, None, 1]
2017-08-08 04:25:32,518 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,518 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,518 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 634, 'nvim_command', ('silent doautocmd ColorScheme',)]
2017-08-08 04:25:32,518 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02z\xacnvim_command\x91\xbcsilent doautocmd ColorScheme''
2017-08-08 04:25:32,523 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,523 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,523 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,587 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,587 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 634, None, None]
2017-08-08 04:25:32,587 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,587 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,587 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 635, 'nvim_command', ('normal! zv',)]
2017-08-08 04:25:32,588 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02{\xacnvim_command\x91\xaanormal! zv''
2017-08-08 04:25:32,588 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,588 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,588 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,588 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,588 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 635, None, None]
2017-08-08 04:25:32,588 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,588 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,588 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 636, 'nvim_call_function', ('bufwinnr', [2])]
2017-08-08 04:25:32,589 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02|\xb2nvim_call_function\x92\xa8bufwinnr\x91\x02''
2017-08-08 04:25:32,589 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,589 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,589 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,589 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,589 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 636, None, 2]
2017-08-08 04:25:32,589 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 2
2017-08-08 04:25:32,589 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,589 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 637, 'nvim_command', ('close!',)]
2017-08-08 04:25:32,590 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02}\xacnvim_command\x91\xa6close!''
2017-08-08 04:25:32,590 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,590 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,590 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,623 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,627 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 637, None, None]
2017-08-08 04:25:32,628 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,628 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,630 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 638, 'nvim_call_function', ('win_gotoid', [1000])]
2017-08-08 04:25:32,630 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02~\xb2nvim_call_function\x92\xaawin_gotoid\x91\xcd\x03\xe8''
2017-08-08 04:25:32,630 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,630 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,631 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,631 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,631 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 638, None, 1]
2017-08-08 04:25:32,631 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,631 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,631 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 639, 'nvim_call_function', ('bufwinnr', [1])]
2017-08-08 04:25:32,631 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x7f\xb2nvim_call_function\x92\xa8bufwinnr\x91\x01''
2017-08-08 04:25:32,632 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,632 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,632 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,632 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,632 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 639, None, 1]
2017-08-08 04:25:32,632 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,632 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,633 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 640, 'nvim_call_function', ('setpos', ['.', [0, 329, 1, 0, 1]])]
2017-08-08 04:25:32,633 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x80\xb2nvim_call_function\x92\xa6setpos\x92\xa1.\x95\x00\xcd\x01I\x01\x00\x01''
2017-08-08 04:25:32,633 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,633 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,633 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,633 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,633 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 640, None, 0]
2017-08-08 04:25:32,633 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,633 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,634 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 641, 'nvim_call_function', ('exists', ['*getwininfo'])]
2017-08-08 04:25:32,634 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x81\xb2nvim_call_function\x92\xa6exists\x91\xab*getwininfo''
2017-08-08 04:25:32,634 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,634 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,634 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,634 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,634 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 641, None, 1]
2017-08-08 04:25:32,634 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,635 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,635 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 642, 'nvim_call_function', ('win_getid', [])]
2017-08-08 04:25:32,635 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x82\xb2nvim_call_function\x92\xa9win_getid\x90''
2017-08-08 04:25:32,635 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,635 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,635 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,635 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,635 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 642, None, 1000]
2017-08-08 04:25:32,635 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1000
2017-08-08 04:25:32,636 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,636 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 643, 'nvim_call_function', ('getwininfo', [1000])]
2017-08-08 04:25:32,636 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x83\xb2nvim_call_function\x92\xaagetwininfo\x91\xcd\x03\xe8''
2017-08-08 04:25:32,636 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,636 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,636 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,636 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,636 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 643, None, [{b'quickfix': 0, b'winid': 1000, b'height': 37, b'variables': {b'unite_window': {b'time': 1502180732, b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'}, b'airline_current_mode': b'------', b'airline_lastmode': b'inactive', b'airline_section_y': b' %{&fenc . " " . WebDevIconsGetFileFormatSymbol()} ', b'airline_active': 1, b'airline_section_x': b'%{airline#util#wrap(airline#parts#filetype(),0)} %{WebDevIconsGetFileTypeSymbol()} '}, b'width': 78, b'bufnr': 1, b'tabnr': 1, b'loclist': 0, b'winnr': 1}]]
2017-08-08 04:25:32,637 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [{b'quickfix': 0, b'winid': 1000, b'height': 37, b'variables': {b'unite_window': {b'time': 1502180732, b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'}, b'airline_current_mode': b'------', b'airline_lastmode': b'inactive', b'airline_section_y': b' %{&fenc . " " . WebDevIconsGetFileFormatSymbol()} ', b'airline_active': 1, b'airline_section_x': b'%{airline#util#wrap(airline#parts#filetype(),0)} %{WebDevIconsGetFileTypeSymbol()} '}, b'width': 78, b'bufnr': 1, b'tabnr': 1, b'loclist': 0, b'winnr': 1}]
2017-08-08 04:25:32,637 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,637 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 644, 'nvim_get_option', ('columns',)]
2017-08-08 04:25:32,637 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x84\xafnvim_get_option\x91\xa7columns''
2017-08-08 04:25:32,637 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,637 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,637 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,638 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,638 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 644, None, 78]
2017-08-08 04:25:32,638 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 78
2017-08-08 04:25:32,638 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,638 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 645, 'nvim_get_option', ('lines',)]
2017-08-08 04:25:32,638 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x85\xafnvim_get_option\x91\xa5lines''
2017-08-08 04:25:32,639 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,639 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,639 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,639 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,639 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 645, None, 40]
2017-08-08 04:25:32,639 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 40
2017-08-08 04:25:32,639 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,640 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 646, 'nvim_call_function', ('tabpagebuflist', [])]
2017-08-08 04:25:32,640 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x86\xb2nvim_call_function\x92\xaetabpagebuflist\x90''
2017-08-08 04:25:32,640 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,640 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,640 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,640 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,640 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 646, None, [1]]
2017-08-08 04:25:32,640 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [1]
2017-08-08 04:25:32,640 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,641 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 647, 'nvim_call_function', ('exists', ['*getwininfo'])]
2017-08-08 04:25:32,641 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x87\xb2nvim_call_function\x92\xa6exists\x91\xab*getwininfo''
2017-08-08 04:25:32,641 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,641 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,641 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,641 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,641 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 647, None, 1]
2017-08-08 04:25:32,641 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,641 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,642 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 648, 'nvim_call_function', ('win_getid', [])]
2017-08-08 04:25:32,642 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x88\xb2nvim_call_function\x92\xa9win_getid\x90''
2017-08-08 04:25:32,642 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,642 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,642 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,642 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,643 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 648, None, 1000]
2017-08-08 04:25:32,643 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1000
2017-08-08 04:25:32,643 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,643 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 649, 'nvim_call_function', ('getwininfo', [1000])]
2017-08-08 04:25:32,643 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x89\xb2nvim_call_function\x92\xaagetwininfo\x91\xcd\x03\xe8''
2017-08-08 04:25:32,643 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,643 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,643 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,644 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,644 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 649, None, [{b'quickfix': 0, b'winid': 1000, b'height': 37, b'variables': {b'unite_window': {b'time': 1502180732, b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'}, b'airline_current_mode': b'------', b'airline_lastmode': b'inactive', b'airline_section_y': b' %{&fenc . " " . WebDevIconsGetFileFormatSymbol()} ', b'airline_active': 1, b'airline_section_x': b'%{airline#util#wrap(airline#parts#filetype(),0)} %{WebDevIconsGetFileTypeSymbol()} '}, b'width': 78, b'bufnr': 1, b'tabnr': 1, b'loclist': 0, b'winnr': 1}]]
2017-08-08 04:25:32,644 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [{b'quickfix': 0, b'winid': 1000, b'height': 37, b'variables': {b'unite_window': {b'time': 1502180732, b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'}, b'airline_current_mode': b'------', b'airline_lastmode': b'inactive', b'airline_section_y': b' %{&fenc . " " . WebDevIconsGetFileFormatSymbol()} ', b'airline_active': 1, b'airline_section_x': b'%{airline#util#wrap(airline#parts#filetype(),0)} %{WebDevIconsGetFileTypeSymbol()} '}, b'width': 78, b'bufnr': 1, b'tabnr': 1, b'loclist': 0, b'winnr': 1}]
2017-08-08 04:25:32,644 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,644 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 650, 'nvim_get_option', ('columns',)]
2017-08-08 04:25:32,644 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x8a\xafnvim_get_option\x91\xa7columns''
2017-08-08 04:25:32,644 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,645 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,645 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,645 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,645 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 650, None, 78]
2017-08-08 04:25:32,645 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 78
2017-08-08 04:25:32,645 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,645 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 651, 'nvim_get_option', ('lines',)]
2017-08-08 04:25:32,645 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x8b\xafnvim_get_option\x91\xa5lines''
2017-08-08 04:25:32,646 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,646 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,646 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,646 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,646 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 651, None, 40]
2017-08-08 04:25:32,646 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 40
2017-08-08 04:25:32,646 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,646 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 652, 'nvim_call_function', ('tabpagebuflist', [])]
2017-08-08 04:25:32,646 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x8c\xb2nvim_call_function\x92\xaetabpagebuflist\x90''
2017-08-08 04:25:32,646 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,647 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,647 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,647 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,647 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 652, None, [1]]
2017-08-08 04:25:32,647 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [1]
2017-08-08 04:25:32,647 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,647 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 653, 'nvim_command', ('1resize 37|vert 1resize 78|',)]
2017-08-08 04:25:32,647 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x8d\xacnvim_command\x91\xbb1resize 37|vert 1resize 78|''
2017-08-08 04:25:32,647 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,648 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,648 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,648 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,648 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 653, None, None]
2017-08-08 04:25:32,648 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,648 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,649 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 654, 'nvim_call_function', ('histadd', ['input', 'zsh'])]
2017-08-08 04:25:32,649 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x8e\xb2nvim_call_function\x92\xa7histadd\x92\xa5input\xa3zsh''
2017-08-08 04:25:32,649 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,649 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,649 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,649 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,649 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 654, None, 1]
2017-08-08 04:25:32,649 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,650 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,650 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 655, 'nvim_command', ('pclose!',)]
2017-08-08 04:25:32,650 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x8f\xacnvim_command\x91\xa7pclose!''
2017-08-08 04:25:32,650 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,650 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,650 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,650 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,651 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 655, None, None]
2017-08-08 04:25:32,651 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,651 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,651 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 656, 'nvim_call_function', ('exists', ['w:denite_match_id'])]
2017-08-08 04:25:32,651 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x90\xb2nvim_call_function\x92\xa6exists\x91\xb1w:denite_match_id''
2017-08-08 04:25:32,651 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,651 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,651 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,652 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,652 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 656, None, 0]
2017-08-08 04:25:32,652 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,652 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,652 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 657, 'nvim_command', ('redraw | echo ""',)]
2017-08-08 04:25:32,652 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x91\xacnvim_command\x91\xb0redraw | echo ""''
2017-08-08 04:25:32,652 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,652 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,652 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,712 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,714 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 657, None, None]
2017-08-08 04:25:32,715 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,715 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,715 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 658, 'nvim_command', ('highlight! link CursorLine CursorLine',)]
2017-08-08 04:25:32,715 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x92\xacnvim_command\x91\xda\x00%highlight! link CursorLine CursorLine''
2017-08-08 04:25:32,716 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,716 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,716 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,716 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,716 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 658, None, None]
2017-08-08 04:25:32,716 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,717 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,717 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 659, 'nvim_call_function', ('exists', ['#ColorScheme'])]
2017-08-08 04:25:32,717 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x93\xb2nvim_call_function\x92\xa6exists\x91\xac#ColorScheme''
2017-08-08 04:25:32,717 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,717 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,717 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,717 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,718 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 659, None, 1]
2017-08-08 04:25:32,718 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 1
2017-08-08 04:25:32,718 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,718 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 660, 'nvim_command', ('silent doautocmd ColorScheme',)]
2017-08-08 04:25:32,718 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x94\xacnvim_command\x91\xbcsilent doautocmd ColorScheme''
2017-08-08 04:25:32,718 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,718 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,718 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,759 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,759 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 660, None, None]
2017-08-08 04:25:32,759 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,759 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,760 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 661, 'nvim_command', ('normal! zv',)]
2017-08-08 04:25:32,760 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x95\xacnvim_command\x91\xaanormal! zv''
2017-08-08 04:25:32,760 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,760 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,760 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,761 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,761 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 661, None, None]
2017-08-08 04:25:32,761 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, None
2017-08-08 04:25:32,761 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,761 [DEBUG @ host.py:_on_request:93] 64726 - request handler for '/Users/AMC/.vim/.cache/init.vim/.dein/rplugin/python3/denite:function:_denite_start [[[{b'name': b'file_rec', b'args': []}], {b'sorters': b'', b'immediately': False, b'cursorline': True, b'quit': True, b'reversed': 1, b'bufnr': 1, b'scroll': 0, b'highlight_mode_normal': b'CursorLine', b'resume': False, b'updatetime': 1, b'vertical_preview': False, b'prompt_highlight': b'Statement', b'prev_winid': 1000, b'lastline': 329, b'max_candidate_width': 200, b'direction': b'botright', b'cursor_pos': b'', b'use_default_mappings': True, b'highlight_matched_range': b'Underlined', b'auto_preview': False, b'auto_resume': False, b'messages': [], b'refresh': False, b'unique': False, b'highlight_preview_line': b'Search', b'auto_accel': False, b'winheight': 10, b'smartcase': False, b'previewheight': 12, b'input': b'', b'short_source_names': False, b'mode': b'', b'cursor_shape': False, b'auto_resize': 1, b'force_quit': False, b'encoding': b'utf-8', b'selected_icon': b'*', b'winminheight': -1, b'buffer_name': b'default', b'empty': True, b'split': b'horizontal', b'prompt': b'\xe2\x9d\xaf', b'firstline': 329, b'highlight_cursor': b'Cursor', b'is_windows': 0, b'cursor_wrap': False, b'highlight_mode_insert': b'CursorLine', b'highlight_matched_char': b'Underlined', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'custom': {b'alias_filter': {}, b'option': {b'TSDocumentSymbol': {b'reversed': 0, b'prompt': b' @'}, b'_': {b'auto_resize': 1, b'prompt': b'\xe2\x9d\xaf', b'reversed': 1, b'statusline': 0, b'highlight_mode_normal': b'CursorLine', b'winheight': 10, b'updatetime': 1, b'highlight_matched_char': b'Underlined'}}, b'filter': {b'matcher_ignore_globs': {b'ignore_globs': [b'.git/', b'.ropeproject/', b'__pycache__/', b'venv/', b'images/', b'*.min.*', b'img/', b'fonts/']}}, b'map': {b'_': [], b'insert': [[b'<C-n>', b'<denite:move_to_next_line>', b'noremap'], [b'<C-N>', b'<denite:move_to_previous_line>', b'noremap']]}, b'action': {}, b'alias_source': {}, b'source': {b'grep': {b'vars': {b'pattern_opt': [], b'command': [b'ag'], b'default_opts': [b'-i', b'--vimgrep'], b'final_opts': [], b'recursive_opts': [], b'separator': [b'--']}}, b'menu': {b'vars': {b'menus': {b'ionic': {b'description': b'some rando ionic stuff', b'command_candidates': [[b' serve', b'call Ionic("serve")'], [b' run device', b'call Ionic("run")'], [b' emulate device', b'call Ionic("emulate")']]}, b'git': {b'description': b'Fugitive interface', b'command_candidates': [[b' git status', b'Gstatus'], [b' git diff', b'Gvdiff'], [b' git commit', b'Gcommit'], [b' git stage/add', b'Gwrite'], [b' git checkout', b'Gread'], [b' git rm', b'Gremove'], [b' git cd', b'Gcd'], [b' git push', b'exe "Git! push " input("remote/branch: ")'], [b' git pull', b'exe "Git! pull " input("remote/branch: ")'], [b' git pull rebase', b'exe "Git! pull --rebase " input("branch: ")'], [b' git checkout branch', b'exe "Git! checkout " input("branch: ")'], [b' git fetch', b'Gfetch'], [b' git merge', b'Gmerge'], [b' git browse', b'Gbrowse'], [b' git head', b'Gedit HEAD^'], [b' git parent', b'edit %:h'], [b' git log commit buffers', b'Glog --'], [b' git log current file', b'Glog -- %'], [b' git log last n commits', b'exe "Glog -" input("num: ")'], [b' git log first n commits', b'exe "Glog --reverse -" input("num: ")'], [b' git log until date', b'exe "Glog --until=" input("day: ")'], [b' git log grep commits', b'exe "Glog --grep= " input("string: ")'], [b' git log pickaxe', b'exe "Glog -S" input("string: ")'], [b' git index', b'exe "Gedit " input("branchname\\:filename: ")'], [b' git mv', b'exe "Gmove " input("destination: ")'], [b' git grep', b'exe "Ggrep " input("string: ")'], [b' git prompt', b'exe "Git! " input("command: ")']]}}}}, b'_': {}, b'file_rec': {b'vars': {b'command': [b'ag', b'--follow', b'--nogroup', b'--hidden', b'--column', b'-g', b'', b'--ignore', b'.git', b'--ignore', b'*.png']}}}}, b'statusline': 0, b'winwidth': 90, b'ignorecase': True, b'auto_highlight': False, b'default_action': b'default', b'path': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site'}]]' returns: []
2017-08-08 04:25:32,762 [DEBUG @ session.py:handler:187] 64726 - greenlet <greenlet.greenlet object at 0x101b2adf0> finished executing, sending [] as response
2017-08-08 04:25:32,762 [DEBUG @ async_session.py:send:133] 64726 - sending response to request 3: [1, 3, None, []]
2017-08-08 04:25:32,762 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [1, 3, None, []]
2017-08-08 04:25:32,762 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x01\x03\xc0\x90''
2017-08-08 04:25:32,763 [DEBUG @ session.py:handler:197] 64726 - greenlet <greenlet.greenlet object at 0x101b2adf0> is now dying...
2017-08-08 04:25:32,763 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,763 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,764 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,764 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [2, b'deoplete_on_event', [{b'max_abbr_width': 51, b'bufsize': 0, b'same_filetypes': [], b'input': b'', b'changedtick': 1, b'omni__omnifunc': b'', b'filetype': b'', b'dict__dictionary': b'', b'delay': 50, b'bufvars': {}, b'camelcase': 0, b'bufpath': b'', b'encoding': b'utf-8', b'keyword_patterns': b'[a-zA-Z_][a-zA-Z@0-9_\xc3\x80-\xc3\xbf]*', b'position': [0, 1, 1, 0], b'sources': [], b'custom': {b'_': {}, b'ternjs': {b'mark': b'\xee\x98\x8c'}, b'neosnippet': {b'mark': b'\xef\x80\xbc'}, b'jedi': {b'mark': b'\xee\x98\x86'}, b'file': {b'mark': b'file'}, b'omni': {b'mark': b'\xe2\x8c\xbe'}, b'buffer': {b'mark': b'\xe2\x84\xac'}, b'typescript': {b'rank': 630, b'mark': b'\xee\x98\xa8'}}, b'bufnr': 2, b'complete_str': b'', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'event': b'BufNewFile', b'max_menu_width': 51, b'next_input': b'', b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'vars': {b'deoplete#keyword_patterns': {}, b'deoplete#_context': {}, b'deoplete#enable_ignore_case': 1, b'deoplete#max_menu_width': 40, b'deoplete#sources#go#cgo': 0, b'deoplete#auto_refresh_delay': 500, b'deoplete#sources#go#gocode_binary': b'', b'deoplete#sources#ternjs#tern_bin': b'tern', b'deoplete#enable_refresh_always': 0, b'deoplete#omni_patterns': {}, b'deoplete#_logging': {}, b'deoplete#enable_camel_case': 0, b'deoplete#skip_chars': [], b'deoplete#enable_profile': 0, b'deoplete#_keyword_patterns': {b'_': b'[a-zA-Z_]\\k*'}, b'deoplete#auto_complete_start_length': 2, b'deoplete#sources#go#align_class': 0, b'deoplete#auto_complete_delay': 50, b'deoplete#enable_at_startup': 1, b'deoplete#sources#go#sort_class': [], b'deoplete#complete_method': b'complete', b'deoplete#max_abbr_width': 80, b'deoplete#omni#input_patterns': {}, b'deoplete#sources#go#on_event': 0, b'deoplete#delimiters': [b'/'], b'deoplete#_omni_patterns': {b'html': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xhtml': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xml': [b'<', b'<[^>]*\\s[[:alnum:]-]*']}, b'deoplete#omni#functions': {}, b'deoplete#sources#go#use_cache': 0, b'deoplete#_rank': {}, b'deoplete#sources#go#pointer': 0, b'deoplete#max_list': 100, b'deoplete#sources': {}, b'deoplete#sources#go#json_directory': b'', b'deoplete#enable_smart_case': 1, b'deoplete#disable_auto_complete': 0, b'deoplete#member#prefix_patterns': {}, b'deoplete#file#enable_buffer_path': 1, b'deoplete#ignore_sources': {b'_': [b'around']}, b'deoplete#sources#go#package_dot': 0, b'deoplete#_channel_id': 1}, b'filetypes': [b''], b'ignorecase': 1, b'bufname': b'[denite]', b'smartcase': 1}]]
2017-08-08 04:25:32,764 [DEBUG @ async_session.py:_on_notification:102] 64726 - received notification: b'deoplete_on_event', [{b'max_abbr_width': 51, b'bufsize': 0, b'same_filetypes': [], b'input': b'', b'changedtick': 1, b'omni__omnifunc': b'', b'filetype': b'', b'dict__dictionary': b'', b'delay': 50, b'bufvars': {}, b'camelcase': 0, b'bufpath': b'', b'encoding': b'utf-8', b'keyword_patterns': b'[a-zA-Z_][a-zA-Z@0-9_\xc3\x80-\xc3\xbf]*', b'position': [0, 1, 1, 0], b'sources': [], b'custom': {b'_': {}, b'ternjs': {b'mark': b'\xee\x98\x8c'}, b'neosnippet': {b'mark': b'\xef\x80\xbc'}, b'jedi': {b'mark': b'\xee\x98\x86'}, b'file': {b'mark': b'file'}, b'omni': {b'mark': b'\xe2\x8c\xbe'}, b'buffer': {b'mark': b'\xe2\x84\xac'}, b'typescript': {b'rank': 630, b'mark': b'\xee\x98\xa8'}}, b'bufnr': 2, b'complete_str': b'', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'event': b'BufNewFile', b'max_menu_width': 51, b'next_input': b'', b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'vars': {b'deoplete#keyword_patterns': {}, b'deoplete#_context': {}, b'deoplete#enable_ignore_case': 1, b'deoplete#max_menu_width': 40, b'deoplete#sources#go#cgo': 0, b'deoplete#auto_refresh_delay': 500, b'deoplete#sources#go#gocode_binary': b'', b'deoplete#sources#ternjs#tern_bin': b'tern', b'deoplete#enable_refresh_always': 0, b'deoplete#omni_patterns': {}, b'deoplete#_logging': {}, b'deoplete#enable_camel_case': 0, b'deoplete#skip_chars': [], b'deoplete#enable_profile': 0, b'deoplete#_keyword_patterns': {b'_': b'[a-zA-Z_]\\k*'}, b'deoplete#auto_complete_start_length': 2, b'deoplete#sources#go#align_class': 0, b'deoplete#auto_complete_delay': 50, b'deoplete#enable_at_startup': 1, b'deoplete#sources#go#sort_class': [], b'deoplete#complete_method': b'complete', b'deoplete#max_abbr_width': 80, b'deoplete#omni#input_patterns': {}, b'deoplete#sources#go#on_event': 0, b'deoplete#delimiters': [b'/'], b'deoplete#_omni_patterns': {b'html': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xhtml': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xml': [b'<', b'<[^>]*\\s[[:alnum:]-]*']}, b'deoplete#omni#functions': {}, b'deoplete#sources#go#use_cache': 0, b'deoplete#_rank': {}, b'deoplete#sources#go#pointer': 0, b'deoplete#max_list': 100, b'deoplete#sources': {}, b'deoplete#sources#go#json_directory': b'', b'deoplete#enable_smart_case': 1, b'deoplete#disable_auto_complete': 0, b'deoplete#member#prefix_patterns': {}, b'deoplete#file#enable_buffer_path': 1, b'deoplete#ignore_sources': {b'_': [b'around']}, b'deoplete#sources#go#package_dot': 0, b'deoplete#_channel_id': 1}, b'filetypes': [b''], b'ignorecase': 1, b'bufname': b'[denite]', b'smartcase': 1}]
2017-08-08 04:25:32,764 [DEBUG @ session.py:_on_notification:216] 64726 - received rpc notification, greenlet <greenlet.greenlet object at 0x101b2adf0> will handle it
2017-08-08 04:25:32,765 [DEBUG @ host.py:_on_notification:107] 64726 - calling notification handler for "deoplete_on_event", args: "[{b'max_abbr_width': 51, b'bufsize': 0, b'filetype': b'', b'input': b'', b'changedtick': 1, b'omni__omnifunc': b'', b'same_filetypes': [], b'dict__dictionary': b'', b'encoding': b'utf-8', b'bufvars': {}, b'camelcase': 0, b'bufpath': b'', b'keyword_patterns': b'[a-zA-Z_][a-zA-Z@0-9_\xc3\x80-\xc3\xbf]*', b'position': [0, 1, 1, 0], b'sources': [], b'custom': {b'_': {}, b'ternjs': {b'mark': b'\xee\x98\x8c'}, b'neosnippet': {b'mark': b'\xef\x80\xbc'}, b'jedi': {b'mark': b'\xee\x98\x86'}, b'file': {b'mark': b'file'}, b'omni': {b'mark': b'\xe2\x8c\xbe'}, b'typescript': {b'rank': 630, b'mark': b'\xee\x98\xa8'}, b'buffer': {b'mark': b'\xe2\x84\xac'}}, b'bufnr': 2, b'complete_str': b'', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'event': b'BufNewFile', b'max_menu_width': 51, b'next_input': b'', b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'vars': {b'deoplete#keyword_patterns': {}, b'deoplete#skip_chars': [], b'deoplete#_context': {}, b'deoplete#max_menu_width': 40, b'deoplete#sources#go#cgo': 0, b'deoplete#auto_refresh_delay': 500, b'deoplete#sources#go#gocode_binary': b'', b'deoplete#sources#ternjs#tern_bin': b'tern', b'deoplete#enable_refresh_always': 0, b'deoplete#enable_camel_case': 0, b'deoplete#_logging': {}, b'deoplete#enable_smart_case': 1, b'deoplete#enable_profile': 0, b'deoplete#_keyword_patterns': {b'_': b'[a-zA-Z_]\\k*'}, b'deoplete#omni#input_patterns': {}, b'deoplete#auto_complete_start_length': 2, b'deoplete#sources#go#align_class': 0, b'deoplete#auto_complete_delay': 50, b'deoplete#enable_at_startup': 1, b'deoplete#sources#go#sort_class': [], b'deoplete#complete_method': b'complete', b'deoplete#member#prefix_patterns': {}, b'deoplete#max_abbr_width': 80, b'deoplete#omni_patterns': {}, b'deoplete#sources#go#on_event': 0, b'deoplete#delimiters': [b'/'], b'deoplete#omni#functions': {}, b'deoplete#sources#go#use_cache': 0, b'deoplete#_rank': {}, b'deoplete#sources#go#pointer': 0, b'deoplete#max_list': 100, b'deoplete#sources': {}, b'deoplete#sources#go#package_dot': 0, b'deoplete#_omni_patterns': {b'html': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xhtml': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xml': [b'<', b'<[^>]*\\s[[:alnum:]-]*']}, b'deoplete#disable_auto_complete': 0, b'deoplete#enable_ignore_case': 1, b'deoplete#file#enable_buffer_path': 1, b'deoplete#ignore_sources': {b'_': [b'around']}, b'deoplete#sources#go#json_directory': b'', b'deoplete#_channel_id': 1}, b'filetypes': [b''], b'ignorecase': 1, b'delay': 50, b'bufname': b'[denite]', b'smartcase': 1}]"
2017-08-08 04:25:32,766 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 662, 'nvim_eval', ('values(neosnippet#helpers#get_completion_snippets())',)]
2017-08-08 04:25:32,767 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x96\xa9nvim_eval\x91\xda\x004values(neosnippet#helpers#get_completion_snippets())''
2017-08-08 04:25:32,767 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,767 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,767 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,840 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,841 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,841 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,841 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,842 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,842 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,842 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,842 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,842 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,842 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,843 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,843 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,843 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,843 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,843 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,843 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,844 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,844 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,844 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,844 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,844 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,844 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,845 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,845 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,845 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,845 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 662, None, [{b'description': b"v:version > ${1} || (v:version == $1 && has('patch${2}'))${0}", b'snip': b"v:version > ${1} || (v:version == $1 && has('patch${2}'))${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'vim-version-check', b'real_name': b'version', b'action__line': 229, b'word': b'version', b'menu_template': b'vim-version-check', b'action__pattern': b'^snippet\\s\\+version$'}, {b'description': b"let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')${0}", b'snip': b"let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"let s:M = s:V.import('...')", b'real_name': b'vital_import', b'action__line': 14, b'word': b'vital_import', b'menu_template': b"let s:M = s:V.import('...')", b'action__pattern': b'^snippet\\s\\+vital_import$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'autoload', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b'let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry', b'snip': b'let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use option save', b'real_name': b'save_option', b'action__line': 213, b'word': b'save_option', b'menu_template': b'use option save', b'action__pattern': b'^snippet\\s\\+save_option$'}, {b'description': b'echomsg string(${1:TARGET})${0}', b'snip': b'echomsg string(${1:TARGET})${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'echomsg string(${1: })${0}', b'real_name': b'echomsg', b'action__line': 68, b'word': b'echomsg', b'menu_template': b'echomsg string(${1: })${0}', b'action__pattern': b'^snippet\\s\\+echomsg$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b'cpoptions', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 2.1 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 2.1 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 2.1 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'LGPL2', b'action__line': 35, b'word': b'LGPL2', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 2.1 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+LGPL2$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 3 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'LGPL3', b'action__line': 69, b'word': b'LGPL3', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 3 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+LGPL3$'}, {b'description': b"Plugin '${0}'", b'snip': b"Plugin '${0}'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'Vundle.vim Plugin definition', b'real_name': b'bun_Vundle_vim_Plugin_definition', b'action__line': 49, b'word': b'bun_Vundle_vim_Plugin_definition', b'menu_template': b'Vundle.vim Plugin definition', b'action__pattern': b'^snippet\\s\\+bun_Vundle_vim_Plugin_definition$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'datetime_iso8601', b'action__line': 7, b'word': b'df', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+datetime_iso8601$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'real_name': b'filename', b'action__line': 27, b'word': b'fname', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'action__pattern': b'^snippet\\s\\+filename$'}, {b'description': b'if ${1}\n\t\t${0:${VISUAL}}\n\tendif', b'snip': b'if ${1}\n\t\t${0:${VISUAL}}\n\tendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'if statement', b'real_name': b'if_if_statement', b'action__line': 34, b'word': b'if_if_statement', b'menu_template': b'if statement', b'action__pattern': b'^snippet\\s\\+if_if_statement$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'diso', b'action__line': 10, b'word': b'diso', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+diso$'}, {b'description': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'snip': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if !exists('b:undo_ftplugin')", b'real_name': b'undo_ftplugin', b'action__line': 156, b'word': b'b:undo_ftplugin', b'menu_template': b"if !exists('b:undo_ftplugin')", b'action__pattern': b'^snippet\\s\\+undo_ftplugin$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date_iso8601', b'action__line': 12, b'word': b'date_iso8601', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date_iso8601$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'real_name': b'filename_lower_camel', b'action__line': 50, b'word': b'filename_lower_camel', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_lower_camel$'}, {b'description': b'" File: ${1:`expand(\'%:t\')`}\n\t" Author: ${2:`g:snips_author`}\n\t" Description: ${3}\n\t${0:" Last Modified: `strftime("%B %d, %Y")`}', b'snip': b'" File: ${1:`expand(\'%:t\')`}\n\t" Author: ${2:`g:snips_author`}\n\t" Description: ${3}\n\t${0:" Last Modified: `strftime("%B %d, %Y")`}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'standard Vim script file header', b'real_name': b'header_standard_Vim_script_file_header', b'action__line': 1, b'word': b'header_standard_Vim_script_file_header', b'menu_template': b'standard Vim script file header', b'action__pattern': b'^snippet\\s\\+header_standard_Vim_script_file_header$'}, {b'description': b'This Source Code Form is subject to the terms of the Mozilla Public\n\tLicense, v. 2.0. If a copy of the MPL was not distributed with this\n\tfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t${0}', b'snip': b'This Source Code Form is subject to the terms of the Mozilla Public\n\tLicense, v. 2.0. If a copy of the MPL was not distributed with this\n\tfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'This Source Code Form is subject to the terms of the Mozilla Public  License, v. 2.0. If a copy of the MPL was not distributed with this  file, You can obtain one at http://mozilla.org/MPL/2.0/.  ${0}', b'real_name': b'MPL2', b'action__line': 260, b'word': b'MPL2', b'menu_template': b'This Source Code Form is subject to the terms of the Mozilla Public  License, v. 2.0. If a copy of the MPL was not distributed with this  file, You can obtain one at http://mozilla.org/MPL/2.0/.  ${0}', b'action__pattern': b'^snippet\\s\\+MPL2$'}, {b'description': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'snip': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'real_name': b'c)', b'action__line': 4, b'word': b'c)', b'menu_template': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'action__pattern': b'^snippet\\s\\+c)$'}, {b'description': b'" vim: ${0:foldmethod=marker}', b'snip': b'" vim: ${0:foldmethod=marker}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'" vim: {modeline}', b'real_name': b'modeline', b'action__line': 152, b'word': b'modeline', b'menu_template': b'" vim: {modeline}', b'action__pattern': b'^snippet\\s\\+modeline$'}, {b'description': b"${1:s:V}.load('${2:#:module_name}')${0}", b'snip': b"${1:s:V}.load('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"s:V.load('...')", b'real_name': b'vital_load_without_call', b'action__line': 19, b'word': b'vital_load_without_call', b'menu_template': b"s:V.load('...')", b'action__pattern': b'^snippet\\s\\+vital_load_without_call$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'real_name': b'filename_upper_camel', b'action__line': 45, b'word': b'filename_upper_camel', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_upper_camel$'}, {b'description': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'snip': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundleLazy ''", b'real_name': b'NeoBundleLazy', b'action__line': 105, b'word': b'NeoBundleLazy', b'menu_template': b"NeoBundleLazy ''", b'action__pattern': b'^snippet\\s\\+NeoBundleLazy$'}, {b'description': b'let ${1:s:V} = vital#${2:#:plugin_name}#new()${0}', b'snip': b'let ${1:s:V} = vital#${2:#:plugin_name}#new()${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b'let s:V = vital#...#new()', b'real_name': b'vital_new', b'action__line': 5, b'word': b'vital_new', b'menu_template': b'let s:V = vital#...#new()', b'action__pattern': b'^snippet\\s\\+vital_new$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'afunction', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b"Plugin '${0}'", b'snip': b"Plugin '${0}'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'Vundle.vim Plugin definition', b'real_name': b'plug_Vundle_vim_Plugin_definition', b'action__line': 51, b'word': b'plug_Vundle_vim_Plugin_definition', b'menu_template': b'Vundle.vim Plugin definition', b'action__pattern': b'^snippet\\s\\+plug_Vundle_vim_Plugin_definition$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'real_name': b'basename', b'action__line': 40, b'word': b'bname', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'action__pattern': b'^snippet\\s\\+basename$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b'save_cpoptions', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b"${1:s:V}.import('${2:#:module_name}')${0}", b'snip': b"${1:s:V}.import('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"s:V.import('...')", b'real_name': b'vital_import_without_let', b'action__line': 10, b'word': b'vital_import_without_let', b'menu_template': b"s:V.import('...')", b'action__pattern': b'^snippet\\s\\+vital_import_without_let$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the "Software"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\tDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\tOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the "Software"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\tDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\tOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   Permission is hereby granted, free of charge, to any person obtaining  a copy of this software and associated documentation files (the "Software"),  to deal in the Software without restriction, including without limitation  the rights to use, copy, modify, merge, publish, distribute, sublicense,  and/or sell copies of the Software, and to permit persons to whom the  Software is furnished to do so, subject to the following conditions:   The above copyright notice and this permission notice shall be included  in all copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ${0}', b'real_name': b'MIT', b'action__line': 197, b'word': b'MIT', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   Permission is hereby granted, free of charge, to any person obtaining  a copy of this software and associated documentation files (the "Software"),  to deal in the Software without restriction, including without limitation  the rights to use, copy, modify, merge, publish, distribute, sublicense,  and/or sell copies of the Software, and to permit persons to whom the  Software is furnished to do so, subject to the following conditions:   The above copyright notice and this permission notice shall be included  in all copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ${0}', b'action__pattern': b'^snippet\\s\\+MIT$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'real_name': b'rpath', b'action__line': 36, b'word': b'rpath', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+rpath$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'real_name': b'basename', b'action__line': 40, b'word': b'basename', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'action__pattern': b'^snippet\\s\\+basename$'}, {b'description': b'As a special exception, if other files instantiate generics from\n\tthis unit, or you link this unit with other files to produce an\n\texecutable, this unit does not by itself cause the resulting\n\texecutable to be covered by the GNU General Public License.\n\tThis exception does not however invalidate any other reasons why the\n\texecutable file might be covered by the GNU Public License.\n\n\t${0}', b'snip': b'As a special exception, if other files instantiate generics from\n\tthis unit, or you link this unit with other files to produce an\n\texecutable, this unit does not by itself cause the resulting\n\texecutable to be covered by the GNU General Public License.\n\tThis exception does not however invalidate any other reasons why the\n\texecutable file might be covered by the GNU Public License.\n\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'linking exception', b'real_name': b'GMGPL_linking_exception', b'action__line': 103, b'word': b'GMGPL_linking_exception', b'menu_template': b'linking exception', b'action__pattern': b'^snippet\\s\\+GMGPL_linking_exception$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'real_name': b'filename_upper_camel', b'action__line': 45, b'word': b'fnameuc', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_upper_camel$'}, {b'description': b'echomsg string([${0:TARGET}])', b'snip': b'echomsg string([${0:TARGET}])', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'debug-echomsg', b'real_name': b'p', b'action__line': 224, b'word': b'p', b'menu_template': b'debug-echomsg', b'action__pattern': b'^snippet\\s\\+p$'}, {b'description': b'`strftime("%H:%M:%S")`${0}', b'snip': b'`strftime("%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%H:%M:%S")`${0}', b'real_name': b'time_colon', b'action__line': 17, b'word': b'dt', b'menu_template': b'`strftime("%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+time_colon$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the "THE BEER-WARE LICENSE" (Revision 42):\n\t$2 wrote this file. As long as you retain this notice you\n\tcan do whatever you want with this stuff. If we meet some day, and you think\n\tthis stuff is worth it, you can buy me a beer or coffee in return\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the "THE BEER-WARE LICENSE" (Revision 42):\n\t$2 wrote this file. As long as you retain this notice you\n\tcan do whatever you want with this stuff. If we meet some day, and you think\n\tthis stuff is worth it, you can buy me a beer or coffee in return\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the "THE BEER-WARE LICENSE" (Revision 42):  $2 wrote this file. As long as you retain this notice you  can do whatever you want with this stuff. If we meet some day, and you think  this stuff is worth it, you can buy me a beer or coffee in return  ${0}', b'real_name': b'BEERWARE', b'action__line': 235, b'word': b'BEERWARE', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the "THE BEER-WARE LICENSE" (Revision 42):  $2 wrote this file. As long as you retain this notice you  can do whatever you want with this stuff. If we meet some day, and you think  this stuff is worth it, you can buy me a beer or coffee in return  ${0}', b'action__pattern': b'^snippet\\s\\+BEERWARE$'}, {b'description': b'`strftime("%H:%M:%S")`${0}', b'snip': b'`strftime("%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%H:%M:%S")`${0}', b'real_name': b'time_colon', b'action__line': 17, b'word': b'time_colon', b'menu_template': b'`strftime("%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+time_colon$'}, {b'description': b'catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}', b'snip': b'catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'catch /pattern/', b'real_name': b'catch', b'action__line': 63, b'word': b'catch', b'menu_template': b'catch /pattern/', b'action__pattern': b'^snippet\\s\\+catch$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'real_name': b'path', b'action__line': 32, b'word': b'path', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+path$'}, {b'description': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'snip': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'func endfunc', b'real_name': b'function', b'action__line': 36, b'word': b'func', b'menu_template': b'func endfunc', b'action__pattern': b'^snippet\\s\\+function$'}, {b'description': b'lua << EOF\n${0}\nEOF', b'snip': b'lua << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'lua <<EOF | EOF', b'real_name': b'lua', b'action__line': 185, b'word': b'lua', b'menu_template': b'lua <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+lua$'}, {b'description': b'augroup ${1:AU_NAME}\n\t\t" this one is which you\'re most likely to use?\n\t\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\n\taugroup end', b'snip': b'augroup ${1:AU_NAME}\n\t\t" this one is which you\'re most likely to use?\n\t\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\n\taugroup end', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'augroup ... autocmd block', b'real_name': b'au_augroup_autocmd_block', b'action__line': 44, b'word': b'au_augroup_autocmd_block', b'menu_template': b'augroup ... autocmd block', b'action__pattern': b'^snippet\\s\\+au_augroup_autocmd_block$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'GPL2', b'action__line': 18, b'word': b'GPL2', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+GPL2$'}, {b'description': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'GPL3', b'action__line': 52, b'word': b'GPL3', b'menu_template': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+GPL3$'}, {b'description': b'`strftime("%H:%M")`${0}', b'snip': b'`strftime("%H:%M")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%H:%M")`${0}', b'real_name': b'time', b'action__line': 12, b'word': b'time', b'menu_template': b'`strftime("%H:%M")`${0}', b'action__pattern': b'^snippet\\s\\+time$'}, {b'description': b'for ${1} in ${2}\n\t\t${0:${VISUAL}}\n\tendfor', b'snip': b'for ${1} in ${2}\n\t\t${0:${VISUAL}}\n\tendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'for ... in loop', b'real_name': b'for_for_in_loop', b'action__line': 21, b'word': b'for_for_in_loop', b'menu_template': b'for ... in loop', b'action__pattern': b'^snippet\\s\\+for_for_in_loop$'}, {b'description': b'vital#${1:#:plugin_name}#new()${0}', b'snip': b'vital#${1:#:plugin_name}#new()${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b'vital#...#new()', b'real_name': b'vital_new_without_let', b'action__line': 1, b'word': b'vital_new_without_let', b'menu_template': b'vital#...#new()', b'action__pattern': b'^snippet\\s\\+vital_new_without_let$'}, {b'description': b'\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\t\t\t\t\tVersion 2, December 2004\n\n\tCopyright `strftime("%Y")` ${0:`g:snips_author`}\n\n\tEveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n\t\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t 0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\t${0}', b'snip': b'\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\t\t\t\t\tVersion 2, December 2004\n\n\tCopyright `strftime("%Y")` ${0:`g:snips_author`}\n\n\tEveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n\t\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t 0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b' DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  Version 2, December 2004   Copyright `strftime("%Y")` ${0:`g:snips_author`}   Everyone is permitted to copy and distribute verbatim or modified  copies of this license document, and changing it is allowed as long  as the name is changed.   DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION   0. You just DO WHAT THE FUCK YOU WANT TO.   ${0}', b'real_name': b'WTFPL', b'action__line': 244, b'word': b'WTFPL', b'menu_template': b' DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  Version 2, December 2004   Copyright `strftime("%Y")` ${0:`g:snips_author`}   Everyone is permitted to copy and distribute verbatim or modified  copies of this license document, and changing it is allowed as long  as the name is changed.   DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION   0. You just DO WHAT THE FUCK YOU WANT TO.   ${0}', b'action__pattern': b'^snippet\\s\\+WTFPL$'}, {b'description': b'python << EOF\n${0}\nEOF', b'snip': b'python << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python <<EOF | EOF', b'real_name': b'python', b'action__line': 169, b'word': b'python', b'menu_template': b'python <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python$'}, {b'description': b"fun! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\\zs.*\\ze.vim'),'[/\\\\]','#','g').'#' : ''`}${2:function_name}(${3})\n\t\t${0}\n\tendf", b'snip': b"fun! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\\zs.*\\ze.vim'),'[/\\\\]','#','g').'#' : ''`}${2:function_name}(${3})\n\t\t${0}\n\tendf", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'function', b'real_name': b'f_function', b'action__line': 11, b'word': b'f_function', b'menu_template': b'function', b'action__pattern': b'^snippet\\s\\+f_function$'}, {b'description': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'snip': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundle ''", b'real_name': b'NeoBundle', b'action__line': 100, b'word': b'neobundle', b'menu_template': b"NeoBundle ''", b'action__pattern': b'^snippet\\s\\+NeoBundle$'}, {b'description': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'snip': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'func endfunc', b'real_name': b'function', b'action__line': 36, b'word': b'function', b'menu_template': b'func endfunc', b'action__pattern': b'^snippet\\s\\+function$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'real_name': b'filename', b'action__line': 27, b'word': b'filename', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'action__pattern': b'^snippet\\s\\+filename$'}, {b'description': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'snip': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'real_name': b'lorem', b'action__line': 16, b'word': b'lorem', b'menu_template': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'action__pattern': b'^snippet\\s\\+lorem$'}, {b'description': b'python << EOF\n${0}\nEOF', b'snip': b'python << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python <<EOF | EOF', b'real_name': b'python', b'action__line': 169, b'word': b'py', b'menu_template': b'python <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python$'}, {b'description': b'if ${1}\n\t\t${2:${VISUAL}}\n\telse\n\t\t${0}\n\tendif', b'snip': b'if ${1}\n\t\t${2:${VISUAL}}\n\telse\n\t\t${0}\n\tendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'if ... else statement', b'real_name': b'ife_if_else_statement', b'action__line': 38, b'word': b'ife_if_else_statement', b'menu_template': b'if ... else statement', b'action__pattern': b'^snippet\\s\\+ife_if_else_statement$'}, {b'description': b'try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry', b'snip': b'try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try endtry', b'real_name': b'try', b'action__line': 44, b'word': b'try', b'menu_template': b'try endtry', b'action__pattern': b'^snippet\\s\\+try$'}, {b'description': b"if exists('${1:did_`vim_snippets#Filename()`}') || &cp${2: || version < 700}\n\t\tfinish\n\tendif\n\tlet $1 = 1${0}", b'snip': b"if exists('${1:did_`vim_snippets#Filename()`}') || &cp${2: || version < 700}\n\t\tfinish\n\tendif\n\tlet $1 = 1${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'script reload guard', b'real_name': b'guard_script_reload_guard', b'action__line': 6, b'word': b'guard_script_reload_guard', b'menu_template': b'script reload guard', b'action__pattern': b'^snippet\\s\\+guard_script_reload_guard$'}, {b'description': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'snip': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if !exists('b:undo_ftplugin')", b'real_name': b'undo_ftplugin', b'action__line': 156, b'word': b'undo_ftplugin', b'menu_template': b"if !exists('b:undo_ftplugin')", b'action__pattern': b'^snippet\\s\\+undo_ftplugin$'}, {b'description': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'snip': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundleLazy ''", b'real_name': b'NeoBundleLazy', b'action__line': 105, b'word': b'neobundlelazy', b'menu_template': b"NeoBundleLazy ''", b'action__pattern': b'^snippet\\s\\+NeoBundleLazy$'}, {b'description': b'for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor', b'snip': b'for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'for in endfor', b'real_name': b'for', b'action__line': 22, b'word': b'for', b'menu_template': b'for in endfor', b'action__pattern': b'^snippet\\s\\+for$'}, {b'description': b'for [${1},${2}] in items(${3})\n\t\t${0}\n\t\tunlet $1 $2\n\tendfor', b'snip': b'for [${1},${2}] in items(${3})\n\t\t${0}\n\t\tunlet $1 $2\n\tendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'for [key, value] in loop', b'real_name': b'forkv_for_key_value_in_loop', b'action__line': 25, b'word': b'forkv_for_key_value_in_loop', b'menu_template': b'for [key, value] in loop', b'action__pattern': b'^snippet\\s\\+forkv_for_key_value_in_loop$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date', b'action__line': 6, b'word': b'date', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date$'}, {b'description': b'while ${1}\n\t\t${0:${VISUAL}}\n\tendw', b'snip': b'while ${1}\n\t\t${0:${VISUAL}}\n\tendw', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'while loop', b'real_name': b'wh_while_loop', b'action__line': 30, b'word': b'wh_while_loop', b'menu_template': b'while loop', b'action__pattern': b'^snippet\\s\\+wh_while_loop$'}, {b'description': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'snip': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try ... finally ... endtry', b'real_name': b'tryfinally', b'action__line': 53, b'word': b'tryfinally', b'menu_template': b'try ... finally ... endtry', b'action__pattern': b'^snippet\\s\\+tryfinally$'}, {b'description': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'AGPL3', b'action__line': 86, b'word': b'AGPL3', b'menu_template': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+AGPL3$'}, {b'description': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'Last modified time', b'real_name': b'lastmod', b'action__line': 22, b'word': b'lastmod', b'menu_template': b'Last modified time', b'action__pattern': b'^snippet\\s\\+lastmod$'}, {b'description': b'echomsg string(${1:TARGET})${0}', b'snip': b'echomsg string(${1:TARGET})${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'echomsg string(${1: })${0}', b'real_name': b'echomsg', b'action__line': 68, b'word': b'log', b'menu_template': b'echomsg string(${1: })${0}', b'action__pattern': b'^snippet\\s\\+echomsg$'}, {b'description': b'python3 << EOF\n${0}\nEOF', b'snip': b'python3 << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python3 <<EOF | EOF', b'real_name': b'python3', b'action__line': 177, b'word': b'python3', b'menu_template': b'python3 <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python3$'}, {b'description': b"let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", b'snip': b"let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'neobundle hooks', b'real_name': b'bundle_hooks', b'action__line': 112, b'word': b'bundle_hooks', b'menu_template': b'neobundle hooks', b'action__pattern': b'^snippet\\s\\+bundle_hooks$'}, {b'description': b"let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", b'snip': b"let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use register save', b'real_name': b'save_register', b'action__line': 202, b'word': b'save_register', b'menu_template': b'use register save', b'action__pattern': b'^snippet\\s\\+save_register$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b's:save_cpo', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b'command! ${1:#:command_name} call ${2:#:func_name}', b'snip': b'command! ${1:#:command_name} call ${2:#:func_name}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'command call function', b'real_name': b'command', b'action__line': 73, b'word': b'command', b'menu_template': b'command call function', b'action__pattern': b'^snippet\\s\\+command$'}, {b'description': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'Last modified time', b'real_name': b'lastmod', b'action__line': 22, b'word': b'lmod', b'menu_template': b'Last modified time', b'action__pattern': b'^snippet\\s\\+lastmod$'}, {b'description': b'while ${1:#:condition}\n${0:TARGET}\nendwhile', b'snip': b'while ${1:#:condition}\n${0:TARGET}\nendwhile', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'while endwhile', b'real_name': b'while', b'action__line': 29, b'word': b'while', b'menu_template': b'while endwhile', b'action__pattern': b'^snippet\\s\\+while$'}, {b'description': b'if ${1:#:condition}\n${0:TARGET}\nendif', b'snip': b'if ${1:#:condition}\n${0:TARGET}\nendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'if endif', b'real_name': b'if', b'action__line': 1, b'word': b'if', b'menu_template': b'if endif', b'action__pattern': b'^snippet\\s\\+if$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'afunc', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b'`strftime("%d %b %Y")`${0}', b'snip': b'`strftime("%d %b %Y")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%d %b %Y")`${0}', b'real_name': b'date_english', b'action__line': 3, b'word': b'date_english', b'menu_template': b'`strftime("%d %b %Y")`${0}', b'action__pattern': b'^snippet\\s\\+date_english$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date_iso8601', b'action__line': 12, b'word': b'dd', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date_iso8601$'}, {b'description': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'snip': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if exists('g:loaded_{plugin-name}')", b'real_name': b'g:loaded', b'action__line': 140, b'word': b'loaded', b'menu_template': b"if exists('g:loaded_{plugin-name}')", b'action__pattern': b'^snippet\\s\\+g:loaded$'}, {b'description': b'`strftime("%B %d, %Y")`${0}', b'snip': b'`strftime("%B %d, %Y")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%B %d, %Y")`${0}', b'real_name': b'ddate', b'action__line': 8, b'word': b'ddate', b'menu_template': b'`strftime("%B %d, %Y")`${0}', b'action__pattern': b'^snippet\\s\\+ddate$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\tThe views and conclusions contained in the software and documentation\n\tare those of the authors and should not be interpreted as representing\n\tofficial policies, either expressed or implied, of $2.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\tThe views and conclusions contained in the software and documentation\n\tare those of the authors and should not be interpreted as representing\n\tofficial policies, either expressed or implied, of $2.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   The views and conclusions contained in the software and documentation  are those of the authors and should not be interpreted as representing  official policies, either expressed or implied, of $2.  ${0}', b'real_name': b'BSD2', b'action__line': 112, b'word': b'BSD2', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   The views and conclusions contained in the software and documentation  are those of the authors and should not be interpreted as representing  official policies, either expressed or implied, of $2.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD2$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. Neither the name of the ${3:organization} nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. Neither the name of the ${3:organization} nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. Neither the name of the ${3:organization} nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'real_name': b'BSD3', b'action__line': 140, b'word': b'BSD3', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. Neither the name of the ${3:organization} nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD3$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. All advertising materials mentioning features or use of this software\n\tmust display the following acknowledgement:\n\tThis product includes software developed by the ${3:organization}.\n\t4. Neither the name of the $3 nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. All advertising materials mentioning features or use of this software\n\tmust display the following acknowledgement:\n\tThis product includes software developed by the ${3:organization}.\n\t4. Neither the name of the $3 nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. All advertising materials mentioning features or use of this software  must display the following acknowledgement:  This product includes software developed by the ${3:organization}.  4. Neither the name of the $3 nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'real_name': b'BSD4', b'action__line': 167, b'word': b'BSD4', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. All advertising materials mentioning features or use of this software  must display the following acknowledgement:  This product includes software developed by the ${3:organization}.  4. Neither the name of the $3 nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD4$'}, {b'description': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'snip': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if exists('g:loaded_{plugin-name}')", b'real_name': b'g:loaded', b'action__line': 140, b'word': b'g:loaded', b'menu_template': b"if exists('g:loaded_{plugin-name}')", b'action__pattern': b'^snippet\\s\\+g:loaded$'}, {b'description': b'python3 << EOF\n${0}\nEOF', b'snip': b'python3 << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python3 <<EOF | EOF', b'real_name': b'python3', b'action__line': 177, b'word': b'py3', b'menu_template': b'python3 <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python3$'}, {b'description': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'snip': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'real_name': b'datetime', b'action__line': 14, b'word': b'datetime', b'menu_template': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'action__pattern': b'^snippet\\s\\+datetime$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'real_name': b'filename_lower_camel', b'action__line': 50, b'word': b'fnamelc', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_lower_camel$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}\n\n\tPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}\n\n\tPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}   Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ${0}', b'real_name': b'ISC', b'action__line': 281, b'word': b'ISC', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}   Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ${0}', b'action__pattern': b'^snippet\\s\\+ISC$'}, {b'description': b'if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif', b'snip': b'if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'if else endif', b'real_name': b'ifelse', b'action__line': 13, b'word': b'ifelse', b'menu_template': b'if else endif', b'action__pattern': b'^snippet\\s\\+ifelse$'}, {b'description': b'redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END', b'snip': b'redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'redir => var', b'real_name': b'redir', b'action__line': 93, b'word': b'redir', b'menu_template': b'redir => var', b'action__pattern': b'^snippet\\s\\+redir$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program  is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program  is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.', b'real_name': b'AGPL', b'action__line': 265, b'word': b'AGPL', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.', b'action__pattern': b'^snippet\\s\\+AGPL$'}, {b'description': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'snip': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try ... finally ... endtry', b'real_name': b'tryfinally', b'action__line': 53, b'word': b'tryf', b'menu_template': b'try ... finally ... endtry', b'action__pattern': b'^snippet\\s\\+tryfinally$'}, {b'description': b"call ${1:s:V}.load('${2:#:module_name}')${0}", b'snip': b"call ${1:s:V}.load('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"call s:V.load('...')", b'real_name': b'vital_load', b'action__line': 23, b'word': b'vital_load', b'menu_template': b"call s:V.load('...')", b'action__pattern': b'^snippet\\s\\+vital_load$'}, {b'description': b'elseif ${1:#:condition}\n${0:TARGET}', b'snip': b'elseif ${1:#:condition}\n${0:TARGET}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'elseif ${1:#:condition} ${0: }', b'real_name': b'elseif', b'action__line': 8, b'word': b'elseif', b'menu_template': b'elseif ${1:#:condition} ${0: }', b'action__pattern': b'^snippet\\s\\+elseif$'}, {b'description': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'snip': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundle ''", b'real_name': b'NeoBundle', b'action__line': 100, b'word': b'NeoBundle', b'menu_template': b"NeoBundle ''", b'action__pattern': b'^snippet\\s\\+NeoBundle$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'datetime_iso8601', b'action__line': 7, b'word': b'datetime_iso8601', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+datetime_iso8601$'}, {b'description': b'augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END', b'snip': b'augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'augroup with autocmds', b'real_name': b'augroup', b'action__line': 85, b'word': b'augroup', b'menu_template': b'augroup with autocmds', b'action__pattern': b'^snippet\\s\\+augroup$'}, {b'description': b"let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", b'snip': b"let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use pos save', b'real_name': b'save_pos', b'action__line': 192, b'word': b'save_pos', b'menu_template': b'use pos save', b'action__pattern': b'^snippet\\s\\+save_pos$'}, {b'description': b"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", b'snip': b"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'customlist complete function', b'real_name': b'customlist', b'action__line': 78, b'word': b'customlist', b'menu_template': b'customlist complete function', b'action__pattern': b'^snippet\\s\\+customlist$'}, {b'description': b'try\n\t\t${1:${VISUAL}}\n\tcatch ${2}\n\t\t${0}\n\tendtry', b'snip': b'try\n\t\t${1:${VISUAL}}\n\tcatch ${2}\n\t\t${0}\n\tendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'try ... catch statement', b'real_name': b't_try_catch_statement', b'action__line': 15, b'word': b't_try_catch_statement', b'menu_template': b'try ... catch statement', b'action__pattern': b'^snippet\\s\\+t_try_catch_statement$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.  ${0}', b'real_name': b'APACHE', b'action__line': 219, b'word': b'APACHE', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.  ${0}', b'action__pattern': b'^snippet\\s\\+APACHE$'}, {b'description': b"has('patch-${1}')${0}", b'snip': b"has('patch-${1}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'vim-version-check-new', b'real_name': b'version_new', b'action__line': 233, b'word': b'version_new', b'menu_template': b'vim-version-check-new', b'action__pattern': b'^snippet\\s\\+version_new$'}]]
2017-08-08 04:25:32,848 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [{b'description': b"v:version > ${1} || (v:version == $1 && has('patch${2}'))${0}", b'snip': b"v:version > ${1} || (v:version == $1 && has('patch${2}'))${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'vim-version-check', b'real_name': b'version', b'action__line': 229, b'word': b'version', b'menu_template': b'vim-version-check', b'action__pattern': b'^snippet\\s\\+version$'}, {b'description': b"let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')${0}", b'snip': b"let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"let s:M = s:V.import('...')", b'real_name': b'vital_import', b'action__line': 14, b'word': b'vital_import', b'menu_template': b"let s:M = s:V.import('...')", b'action__pattern': b'^snippet\\s\\+vital_import$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'autoload', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b'let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry', b'snip': b'let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use option save', b'real_name': b'save_option', b'action__line': 213, b'word': b'save_option', b'menu_template': b'use option save', b'action__pattern': b'^snippet\\s\\+save_option$'}, {b'description': b'echomsg string(${1:TARGET})${0}', b'snip': b'echomsg string(${1:TARGET})${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'echomsg string(${1: })${0}', b'real_name': b'echomsg', b'action__line': 68, b'word': b'echomsg', b'menu_template': b'echomsg string(${1: })${0}', b'action__pattern': b'^snippet\\s\\+echomsg$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b'cpoptions', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 2.1 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 2.1 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 2.1 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'LGPL2', b'action__line': 35, b'word': b'LGPL2', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 2.1 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+LGPL2$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis library is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published\n\tby the Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis library is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with this library; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 3 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'LGPL3', b'action__line': 69, b'word': b'LGPL3', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This library is free software; you can redistribute it and/or modify  it under the terms of the GNU Lesser General Public License as published  by the Free Software Foundation; either version 3 of the License, or  (at your option) any later version.   This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Lesser General Public License for more details.   You should have received a copy of the GNU Lesser General Public License  along with this library; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+LGPL3$'}, {b'description': b"Plugin '${0}'", b'snip': b"Plugin '${0}'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'Vundle.vim Plugin definition', b'real_name': b'bun_Vundle_vim_Plugin_definition', b'action__line': 49, b'word': b'bun_Vundle_vim_Plugin_definition', b'menu_template': b'Vundle.vim Plugin definition', b'action__pattern': b'^snippet\\s\\+bun_Vundle_vim_Plugin_definition$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'datetime_iso8601', b'action__line': 7, b'word': b'df', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+datetime_iso8601$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'real_name': b'filename', b'action__line': 27, b'word': b'fname', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'action__pattern': b'^snippet\\s\\+filename$'}, {b'description': b'if ${1}\n\t\t${0:${VISUAL}}\n\tendif', b'snip': b'if ${1}\n\t\t${0:${VISUAL}}\n\tendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'if statement', b'real_name': b'if_if_statement', b'action__line': 34, b'word': b'if_if_statement', b'menu_template': b'if statement', b'action__pattern': b'^snippet\\s\\+if_if_statement$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'diso', b'action__line': 10, b'word': b'diso', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+diso$'}, {b'description': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'snip': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if !exists('b:undo_ftplugin')", b'real_name': b'undo_ftplugin', b'action__line': 156, b'word': b'b:undo_ftplugin', b'menu_template': b"if !exists('b:undo_ftplugin')", b'action__pattern': b'^snippet\\s\\+undo_ftplugin$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date_iso8601', b'action__line': 12, b'word': b'date_iso8601', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date_iso8601$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'real_name': b'filename_lower_camel', b'action__line': 50, b'word': b'filename_lower_camel', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_lower_camel$'}, {b'description': b'" File: ${1:`expand(\'%:t\')`}\n\t" Author: ${2:`g:snips_author`}\n\t" Description: ${3}\n\t${0:" Last Modified: `strftime("%B %d, %Y")`}', b'snip': b'" File: ${1:`expand(\'%:t\')`}\n\t" Author: ${2:`g:snips_author`}\n\t" Description: ${3}\n\t${0:" Last Modified: `strftime("%B %d, %Y")`}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'standard Vim script file header', b'real_name': b'header_standard_Vim_script_file_header', b'action__line': 1, b'word': b'header_standard_Vim_script_file_header', b'menu_template': b'standard Vim script file header', b'action__pattern': b'^snippet\\s\\+header_standard_Vim_script_file_header$'}, {b'description': b'This Source Code Form is subject to the terms of the Mozilla Public\n\tLicense, v. 2.0. If a copy of the MPL was not distributed with this\n\tfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t${0}', b'snip': b'This Source Code Form is subject to the terms of the Mozilla Public\n\tLicense, v. 2.0. If a copy of the MPL was not distributed with this\n\tfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'This Source Code Form is subject to the terms of the Mozilla Public  License, v. 2.0. If a copy of the MPL was not distributed with this  file, You can obtain one at http://mozilla.org/MPL/2.0/.  ${0}', b'real_name': b'MPL2', b'action__line': 260, b'word': b'MPL2', b'menu_template': b'This Source Code Form is subject to the terms of the Mozilla Public  License, v. 2.0. If a copy of the MPL was not distributed with this  file, You can obtain one at http://mozilla.org/MPL/2.0/.  ${0}', b'action__pattern': b'^snippet\\s\\+MPL2$'}, {b'description': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'snip': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'real_name': b'c)', b'action__line': 4, b'word': b'c)', b'menu_template': b'Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${1:`g:snips_author`}. All Rights Reserved.${0}', b'action__pattern': b'^snippet\\s\\+c)$'}, {b'description': b'" vim: ${0:foldmethod=marker}', b'snip': b'" vim: ${0:foldmethod=marker}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'" vim: {modeline}', b'real_name': b'modeline', b'action__line': 152, b'word': b'modeline', b'menu_template': b'" vim: {modeline}', b'action__pattern': b'^snippet\\s\\+modeline$'}, {b'description': b"${1:s:V}.load('${2:#:module_name}')${0}", b'snip': b"${1:s:V}.load('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"s:V.load('...')", b'real_name': b'vital_load_without_call', b'action__line': 19, b'word': b'vital_load_without_call', b'menu_template': b"s:V.load('...')", b'action__pattern': b'^snippet\\s\\+vital_load_without_call$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'real_name': b'filename_upper_camel', b'action__line': 45, b'word': b'filename_upper_camel', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_upper_camel$'}, {b'description': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'snip': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundleLazy ''", b'real_name': b'NeoBundleLazy', b'action__line': 105, b'word': b'NeoBundleLazy', b'menu_template': b"NeoBundleLazy ''", b'action__pattern': b'^snippet\\s\\+NeoBundleLazy$'}, {b'description': b'let ${1:s:V} = vital#${2:#:plugin_name}#new()${0}', b'snip': b'let ${1:s:V} = vital#${2:#:plugin_name}#new()${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b'let s:V = vital#...#new()', b'real_name': b'vital_new', b'action__line': 5, b'word': b'vital_new', b'menu_template': b'let s:V = vital#...#new()', b'action__pattern': b'^snippet\\s\\+vital_new$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'afunction', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b"Plugin '${0}'", b'snip': b"Plugin '${0}'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'Vundle.vim Plugin definition', b'real_name': b'plug_Vundle_vim_Plugin_definition', b'action__line': 51, b'word': b'plug_Vundle_vim_Plugin_definition', b'menu_template': b'Vundle.vim Plugin definition', b'action__pattern': b'^snippet\\s\\+plug_Vundle_vim_Plugin_definition$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'real_name': b'basename', b'action__line': 40, b'word': b'bname', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'action__pattern': b'^snippet\\s\\+basename$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b'save_cpoptions', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b"${1:s:V}.import('${2:#:module_name}')${0}", b'snip': b"${1:s:V}.import('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"s:V.import('...')", b'real_name': b'vital_import_without_let', b'action__line': 10, b'word': b'vital_import_without_let', b'menu_template': b"s:V.import('...')", b'action__pattern': b'^snippet\\s\\+vital_import_without_let$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the "Software"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\tDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\tOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the "Software"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\tDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\tOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   Permission is hereby granted, free of charge, to any person obtaining  a copy of this software and associated documentation files (the "Software"),  to deal in the Software without restriction, including without limitation  the rights to use, copy, modify, merge, publish, distribute, sublicense,  and/or sell copies of the Software, and to permit persons to whom the  Software is furnished to do so, subject to the following conditions:   The above copyright notice and this permission notice shall be included  in all copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ${0}', b'real_name': b'MIT', b'action__line': 197, b'word': b'MIT', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   Permission is hereby granted, free of charge, to any person obtaining  a copy of this software and associated documentation files (the "Software"),  to deal in the Software without restriction, including without limitation  the rights to use, copy, modify, merge, publish, distribute, sublicense,  and/or sell copies of the Software, and to permit persons to whom the  Software is furnished to do so, subject to the following conditions:   The above copyright notice and this permission notice shall be included  in all copies or substantial portions of the Software.   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  ${0}', b'action__pattern': b'^snippet\\s\\+MIT$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'real_name': b'rpath', b'action__line': 36, b'word': b'rpath', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:h') : expand('%:h'), '\\(//*\\|/*$\\)', '/', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+rpath$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'real_name': b'basename', b'action__line': 40, b'word': b'basename', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r')`${0}", b'action__pattern': b'^snippet\\s\\+basename$'}, {b'description': b'As a special exception, if other files instantiate generics from\n\tthis unit, or you link this unit with other files to produce an\n\texecutable, this unit does not by itself cause the resulting\n\texecutable to be covered by the GNU General Public License.\n\tThis exception does not however invalidate any other reasons why the\n\texecutable file might be covered by the GNU Public License.\n\n\t${0}', b'snip': b'As a special exception, if other files instantiate generics from\n\tthis unit, or you link this unit with other files to produce an\n\texecutable, this unit does not by itself cause the resulting\n\texecutable to be covered by the GNU General Public License.\n\tThis exception does not however invalidate any other reasons why the\n\texecutable file might be covered by the GNU Public License.\n\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'linking exception', b'real_name': b'GMGPL_linking_exception', b'action__line': 103, b'word': b'GMGPL_linking_exception', b'menu_template': b'linking exception', b'action__pattern': b'^snippet\\s\\+GMGPL_linking_exception$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'real_name': b'filename_upper_camel', b'action__line': 45, b'word': b'fnameuc', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(^\\(.\\)\\|_\\(.\\)\\)', '\\u\\1\\u\\2', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_upper_camel$'}, {b'description': b'echomsg string([${0:TARGET}])', b'snip': b'echomsg string([${0:TARGET}])', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'debug-echomsg', b'real_name': b'p', b'action__line': 224, b'word': b'p', b'menu_template': b'debug-echomsg', b'action__pattern': b'^snippet\\s\\+p$'}, {b'description': b'`strftime("%H:%M:%S")`${0}', b'snip': b'`strftime("%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%H:%M:%S")`${0}', b'real_name': b'time_colon', b'action__line': 17, b'word': b'dt', b'menu_template': b'`strftime("%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+time_colon$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the "THE BEER-WARE LICENSE" (Revision 42):\n\t$2 wrote this file. As long as you retain this notice you\n\tcan do whatever you want with this stuff. If we meet some day, and you think\n\tthis stuff is worth it, you can buy me a beer or coffee in return\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the "THE BEER-WARE LICENSE" (Revision 42):\n\t$2 wrote this file. As long as you retain this notice you\n\tcan do whatever you want with this stuff. If we meet some day, and you think\n\tthis stuff is worth it, you can buy me a beer or coffee in return\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the "THE BEER-WARE LICENSE" (Revision 42):  $2 wrote this file. As long as you retain this notice you  can do whatever you want with this stuff. If we meet some day, and you think  this stuff is worth it, you can buy me a beer or coffee in return  ${0}', b'real_name': b'BEERWARE', b'action__line': 235, b'word': b'BEERWARE', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the "THE BEER-WARE LICENSE" (Revision 42):  $2 wrote this file. As long as you retain this notice you  can do whatever you want with this stuff. If we meet some day, and you think  this stuff is worth it, you can buy me a beer or coffee in return  ${0}', b'action__pattern': b'^snippet\\s\\+BEERWARE$'}, {b'description': b'`strftime("%H:%M:%S")`${0}', b'snip': b'`strftime("%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%H:%M:%S")`${0}', b'real_name': b'time_colon', b'action__line': 17, b'word': b'time_colon', b'menu_template': b'`strftime("%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+time_colon$'}, {b'description': b'catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}', b'snip': b'catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'catch /pattern/', b'real_name': b'catch', b'action__line': 63, b'word': b'catch', b'menu_template': b'catch /pattern/', b'action__pattern': b'^snippet\\s\\+catch$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'real_name': b'path', b'action__line': 32, b'word': b'path', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:p') : expand('%:p'), '//\\+', '/', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+path$'}, {b'description': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'snip': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'func endfunc', b'real_name': b'function', b'action__line': 36, b'word': b'func', b'menu_template': b'func endfunc', b'action__pattern': b'^snippet\\s\\+function$'}, {b'description': b'lua << EOF\n${0}\nEOF', b'snip': b'lua << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'lua <<EOF | EOF', b'real_name': b'lua', b'action__line': 185, b'word': b'lua', b'menu_template': b'lua <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+lua$'}, {b'description': b'augroup ${1:AU_NAME}\n\t\t" this one is which you\'re most likely to use?\n\t\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\n\taugroup end', b'snip': b'augroup ${1:AU_NAME}\n\t\t" this one is which you\'re most likely to use?\n\t\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\n\taugroup end', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'augroup ... autocmd block', b'real_name': b'au_augroup_autocmd_block', b'action__line': 44, b'word': b'au_augroup_autocmd_block', b'menu_template': b'augroup ... autocmd block', b'action__pattern': b'^snippet\\s\\+au_augroup_autocmd_block$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 2 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program; if not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'GPL2', b'action__line': 18, b'word': b'GPL2', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+GPL2$'}, {b'description': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'GPL3', b'action__line': 52, b'word': b'GPL3', b'menu_template': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+GPL3$'}, {b'description': b'`strftime("%H:%M")`${0}', b'snip': b'`strftime("%H:%M")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%H:%M")`${0}', b'real_name': b'time', b'action__line': 12, b'word': b'time', b'menu_template': b'`strftime("%H:%M")`${0}', b'action__pattern': b'^snippet\\s\\+time$'}, {b'description': b'for ${1} in ${2}\n\t\t${0:${VISUAL}}\n\tendfor', b'snip': b'for ${1} in ${2}\n\t\t${0:${VISUAL}}\n\tendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'for ... in loop', b'real_name': b'for_for_in_loop', b'action__line': 21, b'word': b'for_for_in_loop', b'menu_template': b'for ... in loop', b'action__pattern': b'^snippet\\s\\+for_for_in_loop$'}, {b'description': b'vital#${1:#:plugin_name}#new()${0}', b'snip': b'vital#${1:#:plugin_name}#new()${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b'vital#...#new()', b'real_name': b'vital_new_without_let', b'action__line': 1, b'word': b'vital_new_without_let', b'menu_template': b'vital#...#new()', b'action__pattern': b'^snippet\\s\\+vital_new_without_let$'}, {b'description': b'\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\t\t\t\t\tVersion 2, December 2004\n\n\tCopyright `strftime("%Y")` ${0:`g:snips_author`}\n\n\tEveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n\t\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t 0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\t${0}', b'snip': b'\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\t\t\t\t\tVersion 2, December 2004\n\n\tCopyright `strftime("%Y")` ${0:`g:snips_author`}\n\n\tEveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n\t\t\tDO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t 0. You just DO WHAT THE FUCK YOU WANT TO.\n\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b' DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  Version 2, December 2004   Copyright `strftime("%Y")` ${0:`g:snips_author`}   Everyone is permitted to copy and distribute verbatim or modified  copies of this license document, and changing it is allowed as long  as the name is changed.   DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION   0. You just DO WHAT THE FUCK YOU WANT TO.   ${0}', b'real_name': b'WTFPL', b'action__line': 244, b'word': b'WTFPL', b'menu_template': b' DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  Version 2, December 2004   Copyright `strftime("%Y")` ${0:`g:snips_author`}   Everyone is permitted to copy and distribute verbatim or modified  copies of this license document, and changing it is allowed as long  as the name is changed.   DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION   0. You just DO WHAT THE FUCK YOU WANT TO.   ${0}', b'action__pattern': b'^snippet\\s\\+WTFPL$'}, {b'description': b'python << EOF\n${0}\nEOF', b'snip': b'python << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python <<EOF | EOF', b'real_name': b'python', b'action__line': 169, b'word': b'python', b'menu_template': b'python <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python$'}, {b'description': b"fun! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\\zs.*\\ze.vim'),'[/\\\\]','#','g').'#' : ''`}${2:function_name}(${3})\n\t\t${0}\n\tendf", b'snip': b"fun! ${1:`expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\\zs.*\\ze.vim'),'[/\\\\]','#','g').'#' : ''`}${2:function_name}(${3})\n\t\t${0}\n\tendf", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'function', b'real_name': b'f_function', b'action__line': 11, b'word': b'f_function', b'menu_template': b'function', b'action__pattern': b'^snippet\\s\\+f_function$'}, {b'description': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'snip': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundle ''", b'real_name': b'NeoBundle', b'action__line': 100, b'word': b'neobundle', b'menu_template': b"NeoBundle ''", b'action__pattern': b'^snippet\\s\\+NeoBundle$'}, {b'description': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'snip': b'function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'func endfunc', b'real_name': b'function', b'action__line': 36, b'word': b'function', b'menu_template': b'func endfunc', b'action__pattern': b'^snippet\\s\\+function$'}, {b'description': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'snip': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'real_name': b'filename', b'action__line': 27, b'word': b'filename', b'menu_template': b"`bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}", b'action__pattern': b'^snippet\\s\\+filename$'}, {b'description': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'snip': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'real_name': b'lorem', b'action__line': 16, b'word': b'lorem', b'menu_template': b'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.${0}', b'action__pattern': b'^snippet\\s\\+lorem$'}, {b'description': b'python << EOF\n${0}\nEOF', b'snip': b'python << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python <<EOF | EOF', b'real_name': b'python', b'action__line': 169, b'word': b'py', b'menu_template': b'python <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python$'}, {b'description': b'if ${1}\n\t\t${2:${VISUAL}}\n\telse\n\t\t${0}\n\tendif', b'snip': b'if ${1}\n\t\t${2:${VISUAL}}\n\telse\n\t\t${0}\n\tendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'if ... else statement', b'real_name': b'ife_if_else_statement', b'action__line': 38, b'word': b'ife_if_else_statement', b'menu_template': b'if ... else statement', b'action__pattern': b'^snippet\\s\\+ife_if_else_statement$'}, {b'description': b'try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry', b'snip': b'try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try endtry', b'real_name': b'try', b'action__line': 44, b'word': b'try', b'menu_template': b'try endtry', b'action__pattern': b'^snippet\\s\\+try$'}, {b'description': b"if exists('${1:did_`vim_snippets#Filename()`}') || &cp${2: || version < 700}\n\t\tfinish\n\tendif\n\tlet $1 = 1${0}", b'snip': b"if exists('${1:did_`vim_snippets#Filename()`}') || &cp${2: || version < 700}\n\t\tfinish\n\tendif\n\tlet $1 = 1${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'script reload guard', b'real_name': b'guard_script_reload_guard', b'action__line': 6, b'word': b'guard_script_reload_guard', b'menu_template': b'script reload guard', b'action__pattern': b'^snippet\\s\\+guard_script_reload_guard$'}, {b'description': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'snip': b"if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if !exists('b:undo_ftplugin')", b'real_name': b'undo_ftplugin', b'action__line': 156, b'word': b'undo_ftplugin', b'menu_template': b"if !exists('b:undo_ftplugin')", b'action__pattern': b'^snippet\\s\\+undo_ftplugin$'}, {b'description': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'snip': b"NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundleLazy ''", b'real_name': b'NeoBundleLazy', b'action__line': 105, b'word': b'neobundlelazy', b'menu_template': b"NeoBundleLazy ''", b'action__pattern': b'^snippet\\s\\+NeoBundleLazy$'}, {b'description': b'for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor', b'snip': b'for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'for in endfor', b'real_name': b'for', b'action__line': 22, b'word': b'for', b'menu_template': b'for in endfor', b'action__pattern': b'^snippet\\s\\+for$'}, {b'description': b'for [${1},${2}] in items(${3})\n\t\t${0}\n\t\tunlet $1 $2\n\tendfor', b'snip': b'for [${1},${2}] in items(${3})\n\t\t${0}\n\t\tunlet $1 $2\n\tendfor', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'for [key, value] in loop', b'real_name': b'forkv_for_key_value_in_loop', b'action__line': 25, b'word': b'forkv_for_key_value_in_loop', b'menu_template': b'for [key, value] in loop', b'action__pattern': b'^snippet\\s\\+forkv_for_key_value_in_loop$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date', b'action__line': 6, b'word': b'date', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date$'}, {b'description': b'while ${1}\n\t\t${0:${VISUAL}}\n\tendw', b'snip': b'while ${1}\n\t\t${0:${VISUAL}}\n\tendw', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'while loop', b'real_name': b'wh_while_loop', b'action__line': 30, b'word': b'wh_while_loop', b'menu_template': b'while loop', b'action__pattern': b'^snippet\\s\\+wh_while_loop$'}, {b'description': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'snip': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try ... finally ... endtry', b'real_name': b'tryfinally', b'action__line': 53, b'word': b'tryfinally', b'menu_template': b'try ... finally ... endtry', b'action__pattern': b'^snippet\\s\\+tryfinally$'}, {b'description': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'real_name': b'AGPL3', b'action__line': 86, b'word': b'AGPL3', b'menu_template': b'${1:one line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.  ${0}', b'action__pattern': b'^snippet\\s\\+AGPL3$'}, {b'description': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'Last modified time', b'real_name': b'lastmod', b'action__line': 22, b'word': b'lastmod', b'menu_template': b'Last modified time', b'action__pattern': b'^snippet\\s\\+lastmod$'}, {b'description': b'echomsg string(${1:TARGET})${0}', b'snip': b'echomsg string(${1:TARGET})${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'echomsg string(${1: })${0}', b'real_name': b'echomsg', b'action__line': 68, b'word': b'log', b'menu_template': b'echomsg string(${1: })${0}', b'action__pattern': b'^snippet\\s\\+echomsg$'}, {b'description': b'python3 << EOF\n${0}\nEOF', b'snip': b'python3 << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python3 <<EOF | EOF', b'real_name': b'python3', b'action__line': 177, b'word': b'python3', b'menu_template': b'python3 <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python3$'}, {b'description': b"let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", b'snip': b"let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'neobundle hooks', b'real_name': b'bundle_hooks', b'action__line': 112, b'word': b'bundle_hooks', b'menu_template': b'neobundle hooks', b'action__pattern': b'^snippet\\s\\+bundle_hooks$'}, {b'description': b"let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", b'snip': b"let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use register save', b'real_name': b'save_register', b'action__line': 202, b'word': b'save_register', b'menu_template': b'use register save', b'action__pattern': b'^snippet\\s\\+save_register$'}, {b'description': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'snip': b'let s:save_cpo = &cpo\nset cpo&vim\n\n${0}\n\nlet &cpo = s:save_cpo\nunlet s:save_cpo', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'let s:save_cpo = &cpo | set cpo&vim', b'real_name': b'save_cpoptions', b'action__line': 128, b'word': b's:save_cpo', b'menu_template': b'let s:save_cpo = &cpo | set cpo&vim', b'action__pattern': b'^snippet\\s\\+save_cpoptions$'}, {b'description': b'command! ${1:#:command_name} call ${2:#:func_name}', b'snip': b'command! ${1:#:command_name} call ${2:#:func_name}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'command call function', b'real_name': b'command', b'action__line': 73, b'word': b'command', b'menu_template': b'command call function', b'action__pattern': b'^snippet\\s\\+command$'}, {b'description': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'Last Modified: `strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'Last modified time', b'real_name': b'lastmod', b'action__line': 22, b'word': b'lmod', b'menu_template': b'Last modified time', b'action__pattern': b'^snippet\\s\\+lastmod$'}, {b'description': b'while ${1:#:condition}\n${0:TARGET}\nendwhile', b'snip': b'while ${1:#:condition}\n${0:TARGET}\nendwhile', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'while endwhile', b'real_name': b'while', b'action__line': 29, b'word': b'while', b'menu_template': b'while endwhile', b'action__pattern': b'^snippet\\s\\+while$'}, {b'description': b'if ${1:#:condition}\n${0:TARGET}\nendif', b'snip': b'if ${1:#:condition}\n${0:TARGET}\nendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'if endif', b'real_name': b'if', b'action__line': 1, b'word': b'if', b'menu_template': b'if endif', b'action__pattern': b'^snippet\\s\\+if$'}, {b'description': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'snip': b"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'autoload func endfunc', b'real_name': b'autoload', b'action__line': 120, b'word': b'afunc', b'menu_template': b'autoload func endfunc', b'action__pattern': b'^snippet\\s\\+autoload$'}, {b'description': b'`strftime("%d %b %Y")`${0}', b'snip': b'`strftime("%d %b %Y")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%d %b %Y")`${0}', b'real_name': b'date_english', b'action__line': 3, b'word': b'date_english', b'menu_template': b'`strftime("%d %b %Y")`${0}', b'action__pattern': b'^snippet\\s\\+date_english$'}, {b'description': b'`strftime("%Y-%m-%d")`${0}', b'snip': b'`strftime("%Y-%m-%d")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%d")`${0}', b'real_name': b'date_iso8601', b'action__line': 12, b'word': b'dd', b'menu_template': b'`strftime("%Y-%m-%d")`${0}', b'action__pattern': b'^snippet\\s\\+date_iso8601$'}, {b'description': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'snip': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if exists('g:loaded_{plugin-name}')", b'real_name': b'g:loaded', b'action__line': 140, b'word': b'loaded', b'menu_template': b"if exists('g:loaded_{plugin-name}')", b'action__pattern': b'^snippet\\s\\+g:loaded$'}, {b'description': b'`strftime("%B %d, %Y")`${0}', b'snip': b'`strftime("%B %d, %Y")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%B %d, %Y")`${0}', b'real_name': b'ddate', b'action__line': 8, b'word': b'ddate', b'menu_template': b'`strftime("%B %d, %Y")`${0}', b'action__pattern': b'^snippet\\s\\+ddate$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\tThe views and conclusions contained in the software and documentation\n\tare those of the authors and should not be interpreted as representing\n\tofficial policies, either expressed or implied, of $2.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\tThe views and conclusions contained in the software and documentation\n\tare those of the authors and should not be interpreted as representing\n\tofficial policies, either expressed or implied, of $2.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   The views and conclusions contained in the software and documentation  are those of the authors and should not be interpreted as representing  official policies, either expressed or implied, of $2.  ${0}', b'real_name': b'BSD2', b'action__line': 112, b'word': b'BSD2', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   The views and conclusions contained in the software and documentation  are those of the authors and should not be interpreted as representing  official policies, either expressed or implied, of $2.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD2$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. Neither the name of the ${3:organization} nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. Neither the name of the ${3:organization} nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. Neither the name of the ${3:organization} nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'real_name': b'BSD3', b'action__line': 140, b'word': b'BSD3', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. Neither the name of the ${3:organization} nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD3$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. All advertising materials mentioning features or use of this software\n\tmust display the following acknowledgement:\n\tThis product includes software developed by the ${3:organization}.\n\t4. Neither the name of the $3 nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions are met:\n\t1. Redistributions of source code must retain the above copyright\n\tnotice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\tnotice, this list of conditions and the following disclaimer in the\n\tdocumentation and/or other materials provided with the distribution.\n\t3. All advertising materials mentioning features or use of this software\n\tmust display the following acknowledgement:\n\tThis product includes software developed by the ${3:organization}.\n\t4. Neither the name of the $3 nor the\n\tnames of its contributors may be used to endorse or promote products\n\tderived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY\n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY\n\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\tON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. All advertising materials mentioning features or use of this software  must display the following acknowledgement:  This product includes software developed by the ${3:organization}.  4. Neither the name of the $3 nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'real_name': b'BSD4', b'action__line': 167, b'word': b'BSD4', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}  All rights reserved.   Redistribution and use in source and binary forms, with or without  modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright  notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.  3. All advertising materials mentioning features or use of this software  must display the following acknowledgement:  This product includes software developed by the ${3:organization}.  4. Neither the name of the $3 nor the  names of its contributors may be used to endorse or promote products  derived from this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY $2 \'\'AS IS\'\' AND ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED. IN NO EVENT SHALL $2 BE LIABLE FOR ANY  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  ${0}', b'action__pattern': b'^snippet\\s\\+BSD4$'}, {b'description': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'snip': b"if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"if exists('g:loaded_{plugin-name}')", b'real_name': b'g:loaded', b'action__line': 140, b'word': b'g:loaded', b'menu_template': b"if exists('g:loaded_{plugin-name}')", b'action__pattern': b'^snippet\\s\\+g:loaded$'}, {b'description': b'python3 << EOF\n${0}\nEOF', b'snip': b'python3 << EOF\n${0}\nEOF', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'python3 <<EOF | EOF', b'real_name': b'python3', b'action__line': 177, b'word': b'py3', b'menu_template': b'python3 <<EOF | EOF', b'action__pattern': b'^snippet\\s\\+python3$'}, {b'description': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'snip': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'real_name': b'datetime', b'action__line': 14, b'word': b'datetime', b'menu_template': b'`strftime("%Y-%m-%d %H:%M")`${0}', b'action__pattern': b'^snippet\\s\\+datetime$'}, {b'description': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'snip': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'real_name': b'filename_lower_camel', b'action__line': 50, b'word': b'fnamelc', b'menu_template': b"`substitute(bufname('%') ==#'[Command Line]' ? expand('#:t:r:r:r') : expand('%:t:r:r:r'), '\\%(_\\(.\\)\\)', '\\u\\1', 'g')`${0}", b'action__pattern': b'^snippet\\s\\+filename_lower_camel$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}\n\n\tPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}\n\n\tPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\n\tTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}   Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ${0}', b'real_name': b'ISC', b'action__line': 281, b'word': b'ISC', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")`, ${2:`g:snips_author`}   Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ${0}', b'action__pattern': b'^snippet\\s\\+ISC$'}, {b'description': b'if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif', b'snip': b'if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'if else endif', b'real_name': b'ifelse', b'action__line': 13, b'word': b'ifelse', b'menu_template': b'if else endif', b'action__pattern': b'^snippet\\s\\+ifelse$'}, {b'description': b'redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END', b'snip': b'redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'redir => var', b'real_name': b'redir', b'action__line': 93, b'word': b'redir', b'menu_template': b'redir => var', b'action__pattern': b'^snippet\\s\\+redir$'}, {b'description': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program  is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.', b'snip': b'${1:One line to give the program\'s name and a brief description.}\n\tCopyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}\n\n\tThis program  is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Affero General Public License as\n\tpublished by the Free Software Foundation, either version 3 of the\n\tLicense, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Affero General Public License for more details.\n\n\tYou should have received a copy of the GNU Affero General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.', b'real_name': b'AGPL', b'action__line': 265, b'word': b'AGPL', b'menu_template': b'${1:One line to give the program\'s name and a brief description.}  Copyright `&enc[:2] == "utf" ? "\xc2\xa9" : "(c)"` `strftime("%Y")` ${2:`g:snips_author`}   This program is free software: you can redistribute it and/or modify  it under the terms of the GNU Affero General Public License as  published by the Free Software Foundation, either version 3 of the  License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  GNU Affero General Public License for more details.   You should have received a copy of the GNU Affero General Public License  along with this program. If not, see <http://www.gnu.org/licenses/>.', b'action__pattern': b'^snippet\\s\\+AGPL$'}, {b'description': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'snip': b'try\n${1:TARGET}\nfinally\n${2}\nendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'try ... finally ... endtry', b'real_name': b'tryfinally', b'action__line': 53, b'word': b'tryf', b'menu_template': b'try ... finally ... endtry', b'action__pattern': b'^snippet\\s\\+tryfinally$'}, {b'description': b"call ${1:s:V}.load('${2:#:module_name}')${0}", b'snip': b"call ${1:s:V}.load('${2:#:module_name}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim/vital.snip', b'menu_abbr': b"call s:V.load('...')", b'real_name': b'vital_load', b'action__line': 23, b'word': b'vital_load', b'menu_template': b"call s:V.load('...')", b'action__pattern': b'^snippet\\s\\+vital_load$'}, {b'description': b'elseif ${1:#:condition}\n${0:TARGET}', b'snip': b'elseif ${1:#:condition}\n${0:TARGET}', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'elseif ${1:#:condition} ${0: }', b'real_name': b'elseif', b'action__line': 8, b'word': b'elseif', b'menu_template': b'elseif ${1:#:condition} ${0: }', b'action__pattern': b'^snippet\\s\\+elseif$'}, {b'description': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'snip': b"NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b"NeoBundle ''", b'real_name': b'NeoBundle', b'action__line': 100, b'word': b'NeoBundle', b'menu_template': b"NeoBundle ''", b'action__pattern': b'^snippet\\s\\+NeoBundle$'}, {b'description': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'snip': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/_.snip', b'menu_abbr': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'real_name': b'datetime_iso8601', b'action__line': 7, b'word': b'datetime_iso8601', b'menu_template': b'`strftime("%Y-%m-%dT%H:%M:%S")`${0}', b'action__pattern': b'^snippet\\s\\+datetime_iso8601$'}, {b'description': b'augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END', b'snip': b'augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END', b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'augroup with autocmds', b'real_name': b'augroup', b'action__line': 85, b'word': b'augroup', b'menu_template': b'augroup with autocmds', b'action__pattern': b'^snippet\\s\\+augroup$'}, {b'description': b"let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", b'snip': b"let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'use pos save', b'real_name': b'save_pos', b'action__line': 192, b'word': b'save_pos', b'menu_template': b'use pos save', b'action__pattern': b'^snippet\\s\\+save_pos$'}, {b'description': b"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", b'snip': b"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", b'options': {b'oneshot': 0, b'word': 1, b'head': 1, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'customlist complete function', b'real_name': b'customlist', b'action__line': 78, b'word': b'customlist', b'menu_template': b'customlist complete function', b'action__pattern': b'^snippet\\s\\+customlist$'}, {b'description': b'try\n\t\t${1:${VISUAL}}\n\tcatch ${2}\n\t\t${0}\n\tendtry', b'snip': b'try\n\t\t${1:${VISUAL}}\n\tcatch ${2}\n\t\t${0}\n\tendtry', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/vim.snippets', b'menu_abbr': b'try ... catch statement', b'real_name': b't_try_catch_statement', b'action__line': 15, b'word': b't_try_catch_statement', b'menu_template': b'try ... catch statement', b'action__pattern': b'^snippet\\s\\+t_try_catch_statement$'}, {b'description': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\t${0}', b'snip': b'${1:one line to give the program\'s name and a brief description}\n\tCopyright `strftime("%Y")` ${2:`g:snips_author`}\n\n\tLicensed under the Apache License, Version 2.0 (the "License");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n\t\thttp://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an "AS IS" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n\t${0}', b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/snippets/_.snippets', b'menu_abbr': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.  ${0}', b'real_name': b'APACHE', b'action__line': 219, b'word': b'APACHE', b'menu_template': b'${1:one line to give the program\'s name and a brief description}  Copyright `strftime("%Y")` ${2:`g:snips_author`}   Licensed under the Apache License, Version 2.0 (the "License");  you may not use this file except in compliance with the License.  You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.  ${0}', b'action__pattern': b'^snippet\\s\\+APACHE$'}, {b'description': b"has('patch-${1}')${0}", b'snip': b"has('patch-${1}')${0}", b'options': {b'oneshot': 0, b'word': 1, b'head': 0, b'indent': 0}, b'action__path': b'/Users/AMC/.config/nvim/.cache/init.vim/.dein/neosnippets/vim.snip', b'menu_abbr': b'vim-version-check-new', b'real_name': b'version_new', b'action__line': 233, b'word': b'version_new', b'menu_template': b'vim-version-check-new', b'action__pattern': b'^snippet\\s\\+version_new$'}]
2017-08-08 04:25:32,850 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,870 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 663, 'nvim_get_option', ('isfname',)]
2017-08-08 04:25:32,870 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x97\xafnvim_get_option\x91\xa7isfname''
2017-08-08 04:25:32,870 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,870 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,870 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,896 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,896 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 663, None, b'@,48-57,/,.,-,_,+,,,#,$,%,~']
2017-08-08 04:25:32,896 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'@,48-57,/,.,-,_,+,,,#,$,%,~'
2017-08-08 04:25:32,896 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,896 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 664, 'nvim_call_function', ('deoplete#util#vimoption2python_not', ['@,48-57,/,.,-,_,+,,,#,$,%,~'])]
2017-08-08 04:25:32,896 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x98\xb2nvim_call_function\x92\xda\x00"deoplete#util#vimoption2python_not\x91\xbb@,48-57,/,.,-,_,+,,,#,$,%,~''
2017-08-08 04:25:32,897 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,897 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,897 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,898 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,898 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 664, None, b'[^a-zA-Z@0-9/._+,#$%~-]']
2017-08-08 04:25:32,898 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'[^a-zA-Z@0-9/._+,#$%~-]'
2017-08-08 04:25:32,898 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,899 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 665, 'nvim_call_function', ('exists', ['*neoinclude#include#get_tag_files'])]
2017-08-08 04:25:32,899 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x99\xb2nvim_call_function\x92\xa6exists\x91\xda\x00!*neoinclude#include#get_tag_files''
2017-08-08 04:25:32,899 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,899 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,899 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,900 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,900 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 665, None, 0]
2017-08-08 04:25:32,900 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 0
2017-08-08 04:25:32,900 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,900 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 666, 'nvim_call_function', ('tagfiles', [])]
2017-08-08 04:25:32,900 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x9a\xb2nvim_call_function\x92\xa8tagfiles\x90''
2017-08-08 04:25:32,901 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,901 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,901 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,901 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,901 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 666, None, []]
2017-08-08 04:25:32,902 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, []
2017-08-08 04:25:32,902 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,902 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 667, 'nvim_call_function', ('map', [[], 'fnamemodify(v:val, ":p")'])]
2017-08-08 04:25:32,902 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x9b\xb2nvim_call_function\x92\xa3map\x92\x90\xb8fnamemodify(v:val, ":p")''
2017-08-08 04:25:32,902 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,902 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,902 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,903 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,903 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 667, None, []]
2017-08-08 04:25:32,903 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, []
2017-08-08 04:25:32,903 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,903 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 668, 'nvim_get_current_buf', ()]
2017-08-08 04:25:32,903 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x9c\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:32,904 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,904 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,904 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,904 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,904 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 668, None, ExtType(code=0, data=b'\x01')]
2017-08-08 04:25:32,904 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x01')
2017-08-08 04:25:32,904 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,905 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 669, 'nvim_buf_get_option', (ExtType(code=0, data=b'\x01'), 'filetype')]
2017-08-08 04:25:32,905 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x9d\xb3nvim_buf_get_option\x92\xd4\x00\x01\xa8filetype''
2017-08-08 04:25:32,905 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,905 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,905 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,905 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,906 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 669, None, b'vim']
2017-08-08 04:25:32,906 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, b'vim'
2017-08-08 04:25:32,906 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,906 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 670, 'nvim_get_current_buf', ()]
2017-08-08 04:25:32,906 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x9e\xb4nvim_get_current_buf\x90''
2017-08-08 04:25:32,906 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,906 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,907 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,907 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,907 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 670, None, ExtType(code=0, data=b'\x01')]
2017-08-08 04:25:32,907 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, ExtType(code=0, data=b'\x01')
2017-08-08 04:25:32,907 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,907 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 671, 'buffer_line_count', (ExtType(code=0, data=b'\x01'),)]
2017-08-08 04:25:32,907 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\x9f\xb1buffer_line_count\x91\xd4\x00\x01''
2017-08-08 04:25:32,908 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,908 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,908 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,908 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,908 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 671, None, 968]
2017-08-08 04:25:32,908 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, 968
2017-08-08 04:25:32,908 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,909 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 672, 'nvim_call_function', ('getline', [1, 968])]
2017-08-08 04:25:32,909 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\xa0\xb2nvim_call_function\x92\xa7getline\x92\x01\xcd\x03\xc8''
2017-08-08 04:25:32,909 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x101b2adf0> to wait for response
2017-08-08 04:25:32,909 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,909 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,910 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,910 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,911 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,911 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,911 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,911 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,912 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,912 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:32,912 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,912 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [1, 672, None, [b'""      \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84    \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84     \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x84   \xe2\x96\x84\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""    \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x84  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x80   \xe2\x96\x80\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80   \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x80', b'""                                                         \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88              "', b'" Author: Mr. Corvi', b'" we are good', b'', b'" Setup dein  ---------------------------------------------------------------{{{', b'  if (!isdirectory(expand("$HOME/.config/nvim/repos/github.com/Shougo/dein.vim")))', b'    call system(expand("mkdir -p $HOME/.config/nvim/repos/github.com"))', b'    call system(expand("git clone https://github.com/Shougo/dein.vim $HOME/.config/nvim/repos/github.com/Shougo/dein.vim"))', b'  endif', b'', b'  set runtimepath+=~/.config/nvim/repos/github.com/Shougo/dein.vim/', b"  call dein#begin(expand('~/.config/nvim'))", b"  call dein#add('Shougo/dein.vim')", b"  call dein#add('haya14busa/dein-command.vim')", b'" syntax', b"  call dein#add('othree/html5.vim')", b"  call dein#add('othree/yajs.vim')", b"  call dein#add('othree/jsdoc-syntax.vim')", b"  call dein#add('heavenshell/vim-jsdoc')", b"  call dein#add('elzr/vim-json')", b"  call dein#add('HerringtonDarkholme/yats.vim')", b"  call dein#add('skwp/vim-html-escape')", b"  call dein#add('hail2u/vim-css3-syntax')", b"  call dein#add('ap/vim-css-color')", b"  call dein#add('tpope/vim-markdown', {'on_ft': 'markdown'})", b"  call dein#add('dhruvasagar/vim-table-mode')", b"  call dein#add('nelstrom/vim-markdown-folding', {'on_ft': 'markdown'})", b"  call dein#add('rhysd/vim-grammarous')", b"  call dein#add('tmhedberg/SimpylFold', {'on_ft': 'python'})", b"  call dein#add('tmux-plugins/vim-tmux')", b"  call dein#add('itmammoth/doorboy.vim')", b"  call dein#add('valloric/MatchTagAlways', {'on_ft': 'html'})", b"  call dein#add('tpope/vim-fugitive')", b"  call dein#add('tpope/vim-rhubarb')", b"  call dein#add('chemzqm/vim-easygit')", b"  call dein#add('jreybert/vimagit', {'on_cmd': ['Magit', 'MagitOnly']})", b"  call dein#add('sgeb/vim-diff-fold')", b"  call dein#add('airblade/vim-gitgutter')", b"  call dein#add('junegunn/gv.vim')", b"  call dein#add('lambdalisue/gina.vim')", b"  call dein#add('scrooloose/nerdtree')", b"  call dein#add('Xuyuanp/nerdtree-git-plugin')", b"  call dein#add('tpope/vim-repeat')", b"  call dein#add('tpope/vim-unimpaired')", b"  call dein#add('neomake/neomake', {'on_cmd': 'Neomake'})", b"  call dein#add('digitaltoad/vim-pug')", b"  call dein#add('editorconfig/editorconfig-vim')", b"  call dein#add('rhysd/vim-color-spring-night')", b"  call dein#add('AndrewRadev/switch.vim')", b"  call dein#add('christoomey/vim-tmux-navigator')", b"  call dein#add('vim-airline/vim-airline')", b"  call dein#add('tpope/vim-surround')", b"  call dein#add('tomtom/tcomment_vim')", b"  call dein#add('mattn/emmet-vim')", b"  call dein#add('sbdchd/neoformat')", b'  " theme', b"  call dein#add('bluz71/vim-moonfly-colors')", b"  call dein#add('smancill/darkglass')", b"  call dein#add('roosta/vim-srcery')", b"  call dein#add('sonjapeterson/1989.vim')", b"  call dein#add('vim-scripts/turbo.vim')", b"  call dein#add('stulzer/heroku-colorscheme')", b"  call dein#add('vim-scripts/proton')", b"  call dein#add('MaxSt/FlatColor')", b"  call dein#add('vim-scripts/pink')", b"  call dein#add('vim-scripts/synic.vim')", b"  call dein#add('vim-airline/vim-airline-themes')", b'" deoplete stuff', b"  call dein#add('Shougo/deoplete.nvim')", b"  call dein#add('Shougo/deol.nvim')", b'', b"  call dein#add('Shougo/denite.nvim')", b"  call dein#add('jremmen/vim-ripgrep')", b'  " call dein#add(\'ctrlpvim/ctrlp.vim\')', b'', b"  call dein#add('Shougo/neomru.vim')", b"  call dein#add('Shougo/context_filetype.vim')", b"  call dein#add('chemzqm/denite-git')", b"  call dein#add('ternjs/tern_for_vim', {'build': 'npm install'})", b"  call dein#add('carlitux/deoplete-ternjs')", b"  call dein#add('artur-shaik/vim-javacomplete2')", b"  call dein#add('Shougo/neco-vim')", b"  call dein#add('Shougo/neoinclude.vim')", b'  "  dein#add(\'ujihisa/neco-look\')', b"  call dein#add('davidhalter/jedi-vim', {'on_ft': 'python'})", b"  call dein#add('zchee/deoplete-jedi')", b'  " call dein#add(\'zchee/nvim-go\', {\'build\': \'gb build\', \'on_ft\': \'go\'})', b"  call dein#add('zchee/deoplete-go', {'build': 'make'})", b'  " call dein#add(\'nsf/gocode\')', b"  call dein#add('junegunn/limelight.vim')", b"  call dein#add('Konfekt/FastFold')", b"  call dein#add('Shougo/neosnippet.vim')", b"  call dein#add('Shougo/neosnippet-snippets')", b"  call dein#add('Shougo/echodoc.vim')", b"  call dein#add('honza/vim-snippets')", b"  call dein#add('mhinz/vim-sayonara')", b"  call dein#add('mattn/webapi-vim')", b"  call dein#add('mattn/gist-vim')", b"  call dein#add('pocari/vim-denite-gists')", b"  call dein#add('vim-scripts/SyntaxRange')", b"  call dein#add('terryma/vim-multiple-cursors')", b"  call dein#add('MartinLafreniere/vim-PairTools')", b"  call dein#add('Shougo/vimfiler.vim')", b"  call dein#add('Shougo/unite.vim')", b"  call dein#add('junegunn/gv.vim')", b"  call dein#local('~/GitHub', {},['vim-folds'])", b"  call dein#local('~/GitHub', {},['oceanic-next'])", b'  " call dein#local(\'~/GitHub\', {},[\'operator-next\'])', b"  call dein#local('~/GitHub', {},['nvim-typescript'])", b"  call dein#add('chemzqm/denite-git')", b"  call dein#add('sjl/vitality.vim')", b"  call dein#add('ryanoasis/vim-devicons')", b"  call dein#add('tiagofumo/vim-nerdtree-syntax-highlight')", b'  " call dein#add(\'suan/vim-instant-markdown\')', b"  call dein#add('JamshedVesuna/vim-markdown-preview')", b"  call dein#add('vingorius/pug-beautifier')", b'  call dein#add("flowtype/vim-flow")', b'  if dein#check_install()', b'    call dein#install()', b'    let pluginsExist=1', b'  endif', b'', b'  call dein#end()', b'  filetype plugin indent on', b'  filetype plugin on', b'" }}}', b'', b'" System Settings  ----------------------------------------------------------{{{', b'', b'  " source ~/.local.vim', b'" Neovim Settings', b'  set termguicolors', b'  let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1', b'  set clipboard+=unnamedplus', b'  set pastetoggle=<f6>', b'  set nopaste', b'  autocmd BufWritePre * %s/\\s\\+$//e', b'  set noshowmode', b'  set noswapfile', b'  filetype on', b'  set  number', b'  set relativenumber', b'  set numberwidth=1', b'  set tabstop=4 shiftwidth=4 expandtab', b'  set conceallevel=0', b'  set virtualedit=', b'  set wildmenu', b'  set laststatus=2', b'  set wrap linebreak nolist', b'  set wildmode=full', b'  set autoread', b'  set smartcase', b'  set ignorecase', b'" leader is ,', b"  let mapleader = ';'", b'  " set undofile', b'  " set undodir="$HOME/.VIM_UNDO_FILES"', b'', b'  try', b'      set undodir=$HOME/undodir', b'      set undofile', b'  catch', b'  endtry', b'', b'" Remember cursor position between vim sessions', b' autocmd BufReadPost *', b'             \\ if line("\'\\"") > 0 && line ("\'\\"") <= line("$") |', b'             \\   exe "normal! g\'\\"" |', b'             \\ endif', b'             " center buffer around cursor when opening files', b'  autocmd BufRead * normal zz', b'  " set updatetime=500', b'  set complete=.,w,b,u,t,k', b'  autocmd InsertEnter * let save_cwd = getcwd() | set autochdir', b"  autocmd InsertLeave * set noautochdir | execute 'cd' fnameescape(save_cwd)", b'  set formatoptions+=t', b'  set inccommand=nosplit', b'  set shortmess=atIc', b'  set isfname-==', b'  set nospell', b'', b'  set breakindent', b'" }}}', b'', b'" System mappings  ----------------------------------------------------------{{{', b'', b'', b'"Refresh vim', b'  nnoremap <f5> :so $MYVIMRC<CR>', b'', b'" No need for ex mode', b'  nnoremap Q <nop>', b'  vnoremap // y/<C-R>"<CR>', b'', b'', b'" Use enter to make new lines', b'  nmap <CR> o<Esc>', b'  nmap <S-CR> O<Esc>', b'', b'" Use <A-o> <Shift><A-o> in order to create new line above  or below in normal mode', b'  nmap \xc3\xb8 o<esc>', b'  nmap \xc3\x98 O<esc>', b'', b'" Use <A-o> <Shift><A-o> in order to create new line above  or below in normal mode', b'  inoremap \xc3\xb8 <cr>', b'  inoremap \xc3\x98 <esc>O', b'', b'" Pressing ,ss will toggle and untoggle spell checking', b'  map <leader>ss :setlocal spell!<cr>', b'', b'  " Save via leader+w', b'  nnoremap <leader>w :w<cr>', b'', b'" press i twice for normal mode', b'  inoremap ii <esc>', b'', b'" Select all', b'  nnoremap \xc3\xa5 ggVG', b'', b'" Navigate between display lines', b'  noremap  <silent> <Up>   gk', b'  noremap  <silent> <Down> gj', b'  noremap  <silent> k gk', b'  noremap  <silent> j gj', b'  noremap  <silent> <Home> g<Home>', b'  noremap  <silent> <End>  g<End>', b'  inoremap <silent> <Home> <C-o>g<Home>', b'  inoremap <silent> <End>  <C-o>g<End>', b'  inoremap \xe2\x88\x86 <Down>', b'  inoremap \xcb\x9a <Up>', b'  inoremap \xc2\xac <Right>', b'  inoremap \xcb\x99 <Left>', b'', b'" Add semicolon to end of line', b'  nnoremap \xe2\x80\xa6 A;<esc>', b'', b'" Toggle Neomake globally', b'  nnoremap <leader>nt :NeomakeToggle<cr>', b'', b'" Vertical Split', b'  nnoremap <leader>sp :sp<CR>', b'" Horizontal Split', b'  nnoremap <leader>vs :vs<CR>', b'" Close All Window Except Current', b'  nnoremap <leader>on :on<CR>', b'" Close Current Window', b'  nnoremap <leader>clo :clo<CR>', b'" Close current buffer', b'  nnoremap <leader>bd :bd<CR>', b'" Update Buffer', b'  noremap <leader>ct :checktime<CR>', b'', b'" copy current files path to clipboard', b'  nmap cp :let @+= expand("%") <cr>', b'" Neovim terminal mapping', b'" terminal \'normal mode\'', b'  tmap <esc> <c-\\><c-n><esc><cr>', b'" exit insert, dd line, enter insert', b'  inoremap <c-d> <esc>ddi', b'  noremap H ^', b'  noremap L g_', b'  noremap J 5j', b'  noremap K 5k', b'', b'', b'', b'" this is the best, let me tell you why', b'" how annoying is that everytime you want to do something in vim', b'" you have to do shift-; to get :, can\'t we just do ;?', b'" Plus what does ; do anyways??', b'" if you do have a plugin that needs ;, you can just swap the mapping', b'" nnoremap : ;', b'" " give it a try and you will like it', b'"   nnoremap ; :', b'', b'" Toggle file type completion', b'  inoremap <c-f> <c-x><c-f>', b'', b'" Copy to osx clipboard', b'  vnoremap <C-c> "*y<CR>', b'  " vnoremap y "*y<CR>', b'  " nnoremap Y "*Y<CR>', b'  " vnoremap y myy`y', b' vnoremap Y myY`y', b"  let g:multi_cursor_next_key='<C-n>'", b"  let g:multi_cursor_prev_key='<C-p>'", b"  let g:multi_cursor_skip_key='<C-x>'", b'" let g:multi_cursor_quit_key=\'<Esc>\'', b'', b'  " Commenting', b'  nnoremap <leader>lc :TComment<cr>', b'  vnoremap <leader>lc :TComment<cr>', b'  vnoremap <leader>mc :TCommentBlock<cr>', b'  vnoremap <leader>lbc :TCommentInline<cr>', b'', b'', b'" Align blocks of text and keep them selected', b'  vmap < <gv', b'  vmap > >gv', b'  nnoremap <leader>d "_d', b'  vnoremap <leader>d "_d', b'  nnoremap <silent> <esc> :noh<cr>', b'', b'  nnoremap <leader>e :call <SID>SynStack()<CR>', b'  function! <SID>SynStack()', b'    if !exists("*synstack")', b'      return', b'    endif', b'    echo map(synstack(line(\'.\'), col(\'.\')), \'synIDattr(v:val, "name")\')', b'  endfunc', b'', b'  function! s:PlaceholderImgTag(size)', b"    let url = 'http://dummyimage.com/' . a:size . '/000000/555555'", b"    let [width,height] = split(a:size, 'x')", b'    execute "normal a<img src=\\"".url."\\" width=\\"".width."\\" height=\\"".height."\\" />"', b'    endfunction', b'  command! -nargs=1 PlaceholderImgTag call s:PlaceholderImgTag(<f-args>)', b'', b'"}}}"', b'', b'" , Commands, etc  ----------------------------------------------------{{{', b'  syntax on', b'  colorscheme spring-night', b'  " let g:OceanicNext_italic = 1', b'', b'  "Colorscheme', b'  set background=dark', b'', b'  " Remove \'|\' character fom split window border (note blank space after', b'  " back slash)', b'  set fillchars+=vert:\\', b'', b'  " Change split window bar color', b'  hi VertSplit ctermfg=NONE ctermbg=NONE cterm=NONE', b'  hi VertSplit guifg=NONE guibg=NONE gui=NONE', b'', b'', b'  " Change color of Search Highlight', b'  hi Search cterm=NONE ctermfg=NONE ctermbg=red', b'  hi Search gui=NONE guifg=red guibg=lightgreen', b'  hi CursorLineNr cterm=NONE ctermfg=yellow ctermbg=red', b'  hi CursorLineNr gui=NONE guifg=yellow guibg=red', b'', b'  " Neomake sign colors', b'  hi NeomakeErrorSign guifg=red', b'  hi NeomakeWarningSign guifg=yellow', b'  hi NeomakeErrorSign guibg=bg', b'  hi NeomakeWarningSign guibg=bg', b'  hi NeomakeErrorSign ctermfg=red', b'  hi NeomakeWarningSign ctermfg=yellow', b'', b'', b'"}}}', b'', b'" MarkDown ------------------------------------------------------------------{{{', b'', b'  noremap <leader>TM :TableModeToggle<CR>', b'  let g:table_mode_corner="|"', b'', b'  let g:neomake_markdown_proselint_maker = {', b"      \\ 'errorformat': '%W%f:%l:%c: %m',", b"      \\ 'postprocess': function('neomake#postprocess#GenericLengthPostprocess'),", b'      \\}', b"  let g:neomake_markdown_enabled_makers = ['alex', 'proselint']", b'', b'', b'', b'  let g:instant_markdown_autostart = 0', b'  let g:instant_markdown_slow = 1', b'  let vim_markdown_preview_github=1', b'"}}}', b'', b'" Javascript ----------------------------------------------------------------{{{', b'', b'', b'  " let g:neoformat_enabled_javascript = [\'jsbeautfy\']', b'  " let g:neomake_highlight_columns = 1', b'  " let g:neomake_open_list = 1', b"  let g:neomake_javascript_enabled_makers = ['eslint']", b'  let g:neomake_verbose = 1', b'  let g:neomake_javascript_eslint_maker = {', b"    \\ 'args': ['--no-color', '--format', 'compact'],", b"    \\ 'errorformat': '%f: line %l\\, col %c\\, %m'", b'    \\ }', b"  let g:eslint_path = system('PATH=$(npm bin):$PATH && which eslint')", b"  let g:neomake_javascript_eslint_exe=substitute(g:eslint_path, '^\\n*\\s*\\(.\\{-}\\)\\n*\\s*$', '\\1', '')", b'', b'', b'  " Mapping for jsdoc Documentation', b'   autocmd FileType javascript nnoremap <leader>dc :JsDoc<CR>', b'', b'    " To disable this, set to 0 in your ~/.vimrc, like so:', b'    let g:flow#enable = 0', b'', b'  let g:jsx_ext_required = 1', b'  let g:jsdoc_allow_input_prompt = 1', b'  let g:jsdoc_input_description = 1', b'  let g:vim_json_syntax_conceal = 0', b"  let g:tern#command = ['tern']", b"  let g:tern#arguments = ['--persistent']", b'', b'  " let g:nvim_typescript#signature_complete=1', b'  " let g:nvim_typescript#type_info_on_hold=1', b'  " let g:nvim_typescript#max_completion_detail=100', b'  "', b'  let g:neomake_typescript_tsc_maker = {', b"            \\ 'append_file': 0,", b"            \\ 'args': ['--project', getcwd() . '/tsconfig.json', '--noEmit'],", b"            \\ 'errorformat':", b"            \\   '%E%f %#(%l\\,%c): error %m,' .", b"            \\   '%E%f %#(%l\\,%c): %m,' .", b"            \\   '%Eerror %m,' .", b"            \\   '%C%\\s%\\+%m'", b'            \\}', b'', b"  let g:neomake_typescript_enabled_makers = ['tsc']", b'  map <silent> <leader>gd :TSDoc <cr>', b'  map <silent> <leader>gt :TSType <cr>', b'  map <silent> <leader>@ :Denite -buffer-name=TSDocumentSymbol TSDocumentSymbol <cr>', b'  " autocmd FileType typescript setl omnifunc=TSComplete', b'  let g:nvim_typescript#kind_symbols = {', b"      \\ 'keyword': 'keyword',", b"      \\ 'class': '\xef\x83\xa8',", b"      \\ 'interface': 'interface',", b"      \\ 'script': 'script',", b"      \\ 'module': '\xef\x86\xb2',", b"      \\ 'local class': 'local class',", b"      \\ 'type': 'type',", b"      \\ 'enum': '\xef\x87\xa0',", b"      \\ 'enum member': '\xef\x86\xb2',", b"      \\ 'alias': '\xef\x87\x8b',", b"      \\ 'type parameter': 'type param',", b"      \\ 'primitive type': 'primitive type',", b"      \\ 'var': '\xef\x84\xa1',", b"      \\ 'local var': '\xef\x84\xa1',", b"      \\ 'property': '\xef\x82\xad',", b"      \\ 'let': '\xef\x84\xa1',", b"      \\ 'const': '\xef\x84\xa1',", b"      \\ 'label': 'label',", b"      \\ 'parameter': 'param',", b"      \\ 'index': 'index',", b"      \\ 'function': '\xef\x80\x93',", b"      \\ 'local function': 'local function',", b"      \\ 'method': '\xef\x83\xa7',", b"      \\ 'getter': '\xef\x82\xad',", b"      \\ 'setter': '\xef\x82\xad',", b"      \\ 'call': 'call',", b"      \\ 'constructor': '\xef\x86\xb2',", b'      \\}', b'" }}}', b'', b'" Java ----------------------------------------------------------------------{{{', b'', b'  autocmd FileType java setlocal omnifunc=javacomplete#Complete', b'', b'"}}}', b'', b'" HTML ----------------------------------------------------------------------{{{', b'  let g:neomake_html_enabled_makers = []', b"  let g:neoformat_enabled_pug = ['pug-beautifier']", b'', b'" }}}', b'', b'" Go ------------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" CSS -----------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" Lua -----------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" Python --------------------------------------------------------------------{{{', b'', b'  " let g:python_host_prog = \'/usr/local/bin/python2\'', b"  let g:python3_host_prog = '/usr/local/bin/python3'", b"  let $NVIM_PYTHON_LOG_FILE='nvim-python.log'", b'  let g:jedi#auto_vim_configuration = 0', b'  let g:jedi#documentation_command = "<leader>k"', b'', b'', b'  " let g:neoformat_enabled_htmldjango = [\'html-beautify\']', b'', b'" }}}', b'', b'" Fold, gets it\'s own section  ----------------------------------------------{{{', b'', b'  function! MyFoldText() " {{{', b'      let line = getline(v:foldstart)', b'      let nucolwidth = &fdc + &number * &numberwidth', b'      let windowwidth = winwidth(0) - nucolwidth - 3', b'      let foldedlinecount = v:foldend - v:foldstart', b'', b'      " expand tabs into spaces', b'      " let onetab = strpart(\'          \', 0, &tabstop)', b'      " let line = substitute(line, \'\\t\', onetab, \'g\')', b'', b'      let line = strpart(line, 0, windowwidth - 2 -len(foldedlinecount))', b'      " let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - len(\'lines\')', b'      " let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - len(\'lines   \')', b'      let fillcharcount = windowwidth - len(line)', b'      " return line . \'\xe2\x80\xa6\' . repeat(" ",fillcharcount) . foldedlinecount . \' Lines\'', b'      return line . \'\xe2\x80\xa6\' . repeat(" ",fillcharcount)', b'  endfunction " }}}', b'', b'', b'  set foldtext=MyFoldText()', b'', b"  autocmd InsertEnter * if !exists('w:last_fdm') | let w:last_fdm=&foldmethod | setlocal foldmethod=manual | endif", b"  autocmd InsertLeave,WinLeave * if exists('w:last_fdm') | let &l:foldmethod=w:last_fdm | unlet w:last_fdm | endif", b'', b'  autocmd FileType vim setlocal fdc=1', b'  set foldlevel=99', b'', b'  " Space to toggle folds.', b'  nnoremap <Space> za', b'  vnoremap <Space> za', b'  autocmd FileType vim setlocal foldmethod=marker', b'  autocmd FileType vim setlocal foldlevel=0', b'', b'  autocmd FileType javascript,html,css,scss,typescript setlocal foldlevel=99', b'', b'  autocmd FileType css,scss,json setlocal foldmethod=marker', b'  autocmd FileType css,scss,json setlocal foldmarker={,}', b'', b'  autocmd FileType coffee setl foldmethod=indent', b'  let g:xml_syntax_folding = 1', b'  autocmd FileType xml setl foldmethod=syntax', b'', b'  autocmd FileType html setl foldmethod=expr', b'  autocmd FileType html setl foldexpr=HTMLFolds()', b'', b'  autocmd FileType javascript,typescript,json setl foldmethod=syntax', b'', b'" }}}', b'', b'" Git -----------------------------------------------------------------------{{{', b'', b'  let g:gitgutter_sign_column_always = 1', b'', b'" }}}', b'', b'" NERDTree ------------------------------------------------------------------{{{', b'', b'  let g:vimfiler_ignore_pattern = ""', b'  " map <silent> - :VimFiler<CR>', b"\tlet g:vimfiler_tree_leaf_icon = ''", b"\tlet g:vimfiler_tree_opened_icon = '\xef\x81\xb8'", b"\tlet g:vimfiler_tree_closed_icon = '\xef\x81\x94'", b"\tlet g:vimfiler_file_icon = ''", b"\tlet g:vimfiler_marked_file_icon = '*'", b'  let g:vimfiler_expand_jump_to_first_child = 0', b'  " let g:vimfiler_as_default_explorer = 1', b"  call unite#custom#profile('default', 'context', {", b"              \\'direction': 'botright',", b'              \\ })', b"  call vimfiler#custom#profile('default', 'context', {", b"              \\ 'explorer' : 1,", b"              \\ 'winwidth' : 35,", b"              \\ 'winminwidth' : 35,", b"              \\ 'toggle' : 1,", b"              \\ 'auto_expand': 0,", b"              \\ 'parent': 1,", b"              \\ 'explorer_columns': 'devicons:git',", b"              \\ 'status' : 0,", b"              \\ 'safe' : 0,", b"              \\ 'split' : 1,", b"              \\ 'hidden': 1,", b"              \\ 'no_quit' : 1,", b"              \\ 'force_hide' : 0,", b'              \\ })', b'  augroup vfinit', b'  autocmd FileType vimfiler call s:vimfilerinit()', b'  augroup END', b'  function! s:vimfilerinit()', b'      set nonumber', b'      set norelativenumber', b'      nmap <silent><buffer><expr> <CR> vimfiler#smart_cursor_map(', b'            \\ "\\<Plug>(vimfiler_expand_tree)",', b'            \\ "\\<Plug>(vimfiler_edit_file)"', b'            \\)', b'      nmap <silent> m :call NerdUnite()<cr>', b'      nmap <silent> r <Plug>(vimfiler_redraw_screen)', b'  endf', b'  " let g:vimfiler_ignore_pattern = \'^\\%(\\.git\\|\\.DS_Store\\)$\'', b'  let g:webdevicons_enable_vimfiler = 0', b'  let g:vimfiler_no_default_key_mappings=1', b'  function! NerdUnite() abort "{{{', b'    let marked_files =  vimfiler#get_file(b:vimfiler)', b"    call unite#start(['nerd'], {'file': marked_files})", b'\tendfunction "}}}', b'', b'  map <silent> - :NERDTreeToggle<CR>', b'  augroup ntinit', b'  autocmd FileType nerdtree call s:nerdtreeinit()', b'  augroup END', b'  function! s:nerdtreeinit()', b'      nunmap <buffer> K', b'      nunmap <buffer> J', b'  endf', b'  let NERDTreeShowHidden=1', b'  let NERDTreeHijackNetrw=0', b'  let g:WebDevIconsUnicodeDecorateFolderNodes = 1', b'  let g:NERDTreeWinSize=30', b"  let NERDTreeWinPos = 'right'", b'  let g:NERDTreeAutoDeleteBuffer=1', b"  let g:WebDevIconsOS = 'Darwin'", b'  let NERDTreeMinimalUI=1', b'  let NERDTreeCascadeSingleChildDir=1', b"  let g:NERDTreeHeader = 'hello'", b'', b'', b'" let g:webdevicons_conceal_nerdtree_brackets = 0', b'  " let g:WebDevIconsNerdTreeAfterGlyphPadding = \'\'', b'  " \xef\x90\x81', b'  let g:NERDTreeShowIgnoredStatus = 0', b'  " let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = 1', b'  " let g:NERDTreeDirArrows = 1', b"  let g:NERDTreeDirArrowExpandable = '\xef\x81\x94'", b"  let g:NERDTreeDirArrowCollapsible = '\xef\x81\xb8'", b"  let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = '\xef\x90\x93'", b'"}}}', b'', b'" Nvim terminal -------------------------------------------------------------{{{', b'', b"  au BufEnter * if &buftype == 'terminal' | :startinsert | endif", b'  autocmd BufEnter term://* startinsert', b'  autocmd TermOpen * set bufhidden=hide', b'', b'" }}}', b'', b'" Vim-Devicons -------------------------------------------------------------0{{{', b'', b'  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {} " needed', b"  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['js'] = '\xee\x9e\x81'", b"  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['vim'] = '\xee\x98\xab'", b'', b'" }}}', b'', b'" Code formatting -----------------------------------------------------------{{{', b'', b'" ,f to format code, requires formatters: read the docs', b'  noremap <silent> <leader>f :Neoformat<CR>', b'', b'" }}}', b'', b'" Snipppets -----------------------------------------------------------------{{{', b'', b'" Enable snipMate compatibility feature.', b'  let g:neosnippet#enable_snipmate_compatibility = 1', b'  let g:neosnippet#expand_word_boundary = 1', b'  imap <C-x> <Plug>(neosnippet_expand_or_jump)', b'  smap <C-x> <Plug>(neosnippet_expand_or_jump)', b'  xmap <C-x> <Plug>(neosnippet_expand_target)', b'', b'" SuperTab like snippets behavior.', b'  imap <expr><TAB> neosnippet#expandable_or_jumpable() ?', b'  \\ "\\<Plug>(neosnippet_expand_or_jump)"', b'  \\: pumvisible() ? "\\<C-n>" : "\\<TAB>"', b'  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?', b'  \\ "\\<Plug>(neosnippet_expand_or_jump)"', b'  \\: "\\<TAB>"', b'', b'"}}}', b'', b'" Deoplete ------------------------------------------------------------------{{{', b'', b'" enable deoplete', b'  let g:deoplete#enable_at_startup = 1', b'  let g:echodoc_enable_at_startup=1', b'  set splitbelow', b'  set splitright', b'  set completeopt+=noselect', b'  set completeopt-=preview', b'  autocmd CompleteDone * pclose', b'', b'  function! Multiple_cursors_before()', b'    let b:deoplete_disable_auto_complete=2', b'  endfunction', b'  function! Multiple_cursors_after()', b'    let b:deoplete_disable_auto_complete=0', b'  endfunction', b'  let g:deoplete#file#enable_buffer_path=1', b'', b"  call deoplete#custom#set('buffer', 'mark', '\xe2\x84\xac')", b"  call deoplete#custom#set('ternjs', 'mark', '\xee\x98\x8c')", b"  call deoplete#custom#set('omni', 'mark', '\xe2\x8c\xbe')", b"  call deoplete#custom#set('file', 'mark', 'file')", b"  call deoplete#custom#set('jedi', 'mark', '\xee\x98\x86')", b"  call deoplete#custom#set('typescript', 'mark', '\xee\x98\xa8')", b"  call deoplete#custom#set('neosnippet', 'mark', '\xef\x80\xbc')", b'', b"  call deoplete#custom#set('typescript',  'rank', 630)", b'  " let g:deoplete#omni_patterns = {}', b'  " let g:deoplete#omni_patterns.html = \'\'', b'  function! Preview_func()', b'    if &pvw', b'      setlocal nonumber norelativenumber', b'     endif', b'  endfunction', b'  autocmd WinEnter * call Preview_func()', b'  let g:deoplete#ignore_sources = {}', b"  let g:deoplete#ignore_sources._ = ['around']", b'', b'  " let g:deoplete#enable_debug = 1', b'  " call deoplete#enable_logging(\'DEBUG\', \'deoplete.log\')', b'  " call deoplete#custom#set(\'typescript\', \'debug_enabled\', 1)', b'"}}}', b'', b'" Emmet customization -------------------------------------------------------{{{', b'', b'', b'"  " 1. Expand abbreviation *emmet-expand-abbr', b'"   nnoremap <leader>em, <C-y>,', b'"', b'" " 2. Expand abbreviation *emmet-expand-word* *<C-y>;*', b'"   nnoremap <leader>emt <C-y>;', b'"', b'" " 3. Update tag *emmet-update-tag* *<C-y>u*', b'"   nnoremap <leader>emu <c-y>u', b'"', b'" " 4. Wrap with abbreviation *emmet-wrap-with-abbreviation* *v_<C-y>,*', b'"   vnoremap <leader>em, v_<C-y>,', b'', b'', b'" Remapping <C-y>, just doesn\'t cut it.', b'  function! s:expand_html_tab()', b'" try to determine if we\'re within quotes or tags.', b'" if so, assume we\'re in an emmet fill area.', b"   let line = getline('.')", b"   if col('.') < len(line)", b'     let line = matchstr(line, \'[">][^<"]*\\%\'.col(\'.\').\'c[^>"]*[<"]\')', b'     if len(line) >= 2', b'        return "\\<C-n>"', b'     endif', b'   endif', b'" expand anything emmet thinks is expandable.', b'  if emmet#isExpandable()', b'    return emmet#expandAbbrIntelligent("\\<tab>")', b'    " return "\\<C-y>,"', b'  endif', b'" return a regular tab character', b'  return "\\<tab>"', b'  endfunction', b'  " let g:user_emmet_expandabbr_key=\'<Tab>\'', b'  " imap <expr> <tab> emmet#expandAbbrIntelligent("\\<tab>")', b'', b'  autocmd FileType html,css,scss imap <silent><buffer><expr><tab> <sid>expand_html_tab()', b"  let g:user_emmet_mode='a'", b'  let g:user_emmet_complete_tag = 0', b'  let g:user_emmet_install_global = 0', b'  autocmd FileType html,css,scss EmmetInstall', b'"}}}', b'', b'" Denite --------------------------------------------------------------------{{{', b'', b'  let g:webdevicons_enable_denite = 0', b'  let s:menus = {}', b'', b"  call denite#custom#option('_', {", b"        \\ 'prompt': '\xe2\x9d\xaf',", b"        \\ 'winheight': 10,", b"        \\ 'reversed': 1,", b"        \\ 'highlight_matched_char': 'Underlined',", b"        \\ 'highlight_mode_normal': 'CursorLine',", b"        \\ 'updatetime': 1,", b"        \\ 'auto_resize': 1,", b'        \\})', b"  call denite#custom#option('TSDocumentSymbol', {", b"        \\ 'prompt': ' @' ,", b"        \\ 'reversed': 0,", b'        \\})', b"  call denite#custom#var('file_rec', 'command',", b"    \\ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])", b"  call denite#custom#source('file_rec', 'vars', {", b"        \\ 'command': [", b"        \\ 'ag', '--follow','--nogroup','--hidden', '--column', '-g', '', '--ignore', '.git', '--ignore', '*.png'", b'        \\] })', b'', b"  call denite#custom#var('grep', 'command', ['ag'])", b"\tcall denite#custom#var('grep', 'default_opts',", b"\t\t\t\\ ['-i', '--vimgrep'])", b"\tcall denite#custom#var('grep', 'recursive_opts', [])", b"\tcall denite#custom#var('grep', 'pattern_opt', [])", b"\tcall denite#custom#var('grep', 'separator', ['--'])", b"\tcall denite#custom#var('grep', 'final_opts', [])", b'', b'', b'  " nnoremap <silent> <c-p> :Denite file_rec<CR>', b'  nnoremap <silent> <leader>j :Denite file_rec<CR>', b'  nnoremap <silent> <leader>h :Denite  help<CR>', b'  nnoremap <silent> <leader>c :Denite colorscheme<CR>', b'  nnoremap <silent> <leader>b :Denite buffer<CR>', b'  nnoremap <silent> <leader>a :Denite grep:::!<CR>', b'  nnoremap <silent> <leader>u :call dein#update()<CR>', b'  nnoremap <silent> <Leader>i :Denite menu:ionic <CR>', b"  call denite#custom#map('insert','<C-n>','<denite:move_to_next_line>','noremap')", b"\tcall denite#custom#map('insert','<C-N>','<denite:move_to_previous_line>','noremap')", b"  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',", b"    \\ [ '.git/', '.ropeproject/', '__pycache__/',", b"    \\   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])", b"  call denite#custom#var('menu', 'menus', s:menus)", b'', b'"}}}', b'', b'" Git from denite...ERMERGERD -----------------------------------------------{{{', b'  let s:menus.git = {', b"    \\ 'description' : 'Fugitive interface',", b'    \\}', b'  let s:menus.git.command_candidates = [', b"    \\[' git status', 'Gstatus'],", b"    \\[' git diff', 'Gvdiff'],", b"    \\[' git commit', 'Gcommit'],", b"    \\[' git stage/add', 'Gwrite'],", b"    \\[' git checkout', 'Gread'],", b"    \\[' git rm', 'Gremove'],", b"    \\[' git cd', 'Gcd'],", b'    \\[\' git push\', \'exe "Git! push " input("remote/branch: ")\'],', b'    \\[\' git pull\', \'exe "Git! pull " input("remote/branch: ")\'],', b'    \\[\' git pull rebase\', \'exe "Git! pull --rebase " input("branch: ")\'],', b'    \\[\' git checkout branch\', \'exe "Git! checkout " input("branch: ")\'],', b"    \\[' git fetch', 'Gfetch'],", b"    \\[' git merge', 'Gmerge'],", b"    \\[' git browse', 'Gbrowse'],", b"    \\[' git head', 'Gedit HEAD^'],", b"    \\[' git parent', 'edit %:h'],", b"    \\[' git log commit buffers', 'Glog --'],", b"    \\[' git log current file', 'Glog -- %'],", b'    \\[\' git log last n commits\', \'exe "Glog -" input("num: ")\'],', b'    \\[\' git log first n commits\', \'exe "Glog --reverse -" input("num: ")\'],', b'    \\[\' git log until date\', \'exe "Glog --until=" input("day: ")\'],', b'    \\[\' git log grep commits\',  \'exe "Glog --grep= " input("string: ")\'],', b'    \\[\' git log pickaxe\',  \'exe "Glog -S" input("string: ")\'],', b'    \\[\' git index\', \'exe "Gedit " input("branchname\\:filename: ")\'],', b'    \\[\' git mv\', \'exe "Gmove " input("destination: ")\'],', b'    \\[\' git grep\',  \'exe "Ggrep " input("string: ")\'],', b'    \\[\' git prompt\', \'exe "Git! " input("command: ")\'],', b'    \\] " Append \' --\' after log to get commit info commit buffers', b'"}}}', b'', b'" Ionic denite source -------------------------------------------------------{{{', b'', b'  function! Ionic(job) abort', b'    if a:job ==# "serve"', b'      enew!', b"      let filename = 'Ionic:\\ '. a:job", b"      call termopen('ionic '. a:job)", b"      exe 'file 'filename", b'      startinsert', b'    else', b"      let platform = input('platform: ')", b'      enew!', b"      let filename = 'Ionic:\\ '. a:job", b"      call termopen('ionic '. a:job . ' ' . platform)", b"      exe 'file 'filename", b'      startinsert', b'    endif', b'  endfunction', b'', b'  function ExitHandle()', b'    echom self', b'  endfunction', b'', b'  let s:menus.ionic = {', b"    \\ 'description' : 'some rando ionic stuff',", b'    \\}', b'  let s:menus.ionic.command_candidates = [', b'    \\[\' serve\', \'call Ionic("serve")\' ],', b'    \\[\' run device\', \'call Ionic("run")\'],', b'    \\[\' emulate device\', \'call Ionic("emulate")\'],', b'    \\]', b'"}}}', b'', b'" Navigate between vim buffers and tmux panels ------------------------------{{{', b'', b'  let g:tmux_navigator_no_mappings = 1', b'  nnoremap <silent> <C-j> :TmuxNavigateDown<cr>', b'  nnoremap <silent> <C-k> :TmuxNavigateUp<cr>', b'  nnoremap <silent> <C-l> :TmuxNavigateRight<cr>', b'  nnoremap <silent> <C-h> :TmuxNavigateLeft<CR>', b'  nnoremap <silent> <C-;> :TmuxNavigatePrevious<cr>', b'  tmap <C-j> <C-\\><C-n>:TmuxNavigateDown<cr>', b'  tmap <C-k> <C-\\><C-n>:TmuxNavigateUp<cr>', b'  tmap <C-l> <C-\\><C-n>:TmuxNavigateRight<cr>', b'  tmap <C-h> <C-\\><C-n>:TmuxNavigateLeft<CR>', b'  tmap <C-;> <C-\\><C-n>:TmuxNavigatePrevious<cr>', b'', b'  " Cycle between vim buffer', b'  map <silent> <leader>h :bp<CR>', b'  map <silent> <leader>l :bn<CR>', b'', b'', b'"}}}', b'', b'" vim-airline ---------------------------------------------------------------{{{', b'', b"  if !exists('g:airline_symbols')", b'    let g:airline_symbols = {}', b'  endif', b'  let g:airline#extensions#tabline#enabled = 1', b'  let g:airline#extensions#mike#enabled = 0', b'  set hidden', b"  let g:airline#extensions#tabline#fnamemod = ':t'", b'  let g:airline#extensions#tabline#buffer_idx_mode = 1', b'  let g:airline_powerline_fonts = 1', b"  let g:airline#extensions#neomake#error_symbol='\xe2\x80\xa2 '", b"  let g:airline#extensions#neomake#warning_symbol='\xe2\x80\xa2  '", b"  let g:airline_symbols.branch = '\xef\x90\x98'", b"  let g:airline_theme='solarized'", b'  cnoreabbrev <silent> <expr> x getcmdtype() == ":" && getcmdline() == \'x\' ? \'Sayonara\' : \'x\'', b'  tmap <leader>x <c-\\><c-n>:bp! <BAR> bd! #<CR>', b'  nmap <leader>t :term<cr>', b'  nmap <leader>, :bnext<CR>', b'  tmap <leader>, <C-\\><C-n>:bnext<cr>', b'  nmap <leader>. :bprevious<CR>', b'  tmap <leader>. <C-\\><C-n>:bprevious<CR>', b'  tmap <leader>1  <C-\\><C-n><Plug>AirlineSelectTab1', b'  tmap <leader>2  <C-\\><C-n><Plug>AirlineSelectTab2', b'  tmap <leader>3  <C-\\><C-n><Plug>AirlineSelectTab3', b'  tmap <leader>4  <C-\\><C-n><Plug>AirlineSelectTab4', b'  tmap <leader>5  <C-\\><C-n><Plug>AirlineSelectTab5', b'  tmap <leader>6  <C-\\><C-n><Plug>AirlineSelectTab6', b'  tmap <leader>7  <C-\\><C-n><Plug>AirlineSelectTab7', b'  tmap <leader>8  <C-\\><C-n><Plug>AirlineSelectTab8', b'  tmap <leader>9  <C-\\><C-n><Plug>AirlineSelectTab9', b'  nmap <leader>1 <Plug>AirlineSelectTab1', b'  nmap <leader>2 <Plug>AirlineSelectTab2', b'  nmap <leader>3 <Plug>AirlineSelectTab3', b'  nmap <leader>4 <Plug>AirlineSelectTab4', b'  nmap <leader>5 <Plug>AirlineSelectTab5', b'  nmap <leader>6 <Plug>AirlineSelectTab6', b'  nmap <leader>7 <Plug>AirlineSelectTab7', b'  nmap <leader>8 <Plug>AirlineSelectTab8', b'  nmap <leader>9 <Plug>AirlineSelectTab9', b'  let g:airline#extensions#tabline#buffer_idx_format = {', b"        \\ '0': '0 ',", b"        \\ '1': '1 ',", b"        \\ '2': '2 ',", b"        \\ '3': '3 ',", b"        \\ '4': '4 ',", b"        \\ '5': '5 ',", b"        \\ '6': '6 ',", b"        \\ '7': '7 ',", b"        \\ '8': '8 ',", b"        \\ '9': '9 ',", b'        \\}', b'', b'"}}}', b'', b'" Linting -------------------------------------------------------------------{{{', b'', b'  autocmd! BufWinEnter * NeomakeDisable', b'  autocmd! BufWritePost * Neomake', b"  let g:neomake_warning_sign = {'text': '!!'}", b"  let g:neomake_error_sign = {'text': 'X'}", b'', b'"}}}']]
2017-08-08 04:25:32,913 [DEBUG @ async_session.py:_on_response:95] 64726 - received response: None, [b'""      \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84    \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84     \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x84   \xe2\x96\x84\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""    \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x80\xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80\xe2\x96\x80   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x8c', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x84  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88', b'""      \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x80   \xe2\x96\x80\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80   \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88  \xe2\x96\x80\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80  \xe2\x96\x88\xe2\x96\x80', b'""                                                         \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88              "', b'" Author: Mr. Corvi', b'" we are good', b'', b'" Setup dein  ---------------------------------------------------------------{{{', b'  if (!isdirectory(expand("$HOME/.config/nvim/repos/github.com/Shougo/dein.vim")))', b'    call system(expand("mkdir -p $HOME/.config/nvim/repos/github.com"))', b'    call system(expand("git clone https://github.com/Shougo/dein.vim $HOME/.config/nvim/repos/github.com/Shougo/dein.vim"))', b'  endif', b'', b'  set runtimepath+=~/.config/nvim/repos/github.com/Shougo/dein.vim/', b"  call dein#begin(expand('~/.config/nvim'))", b"  call dein#add('Shougo/dein.vim')", b"  call dein#add('haya14busa/dein-command.vim')", b'" syntax', b"  call dein#add('othree/html5.vim')", b"  call dein#add('othree/yajs.vim')", b"  call dein#add('othree/jsdoc-syntax.vim')", b"  call dein#add('heavenshell/vim-jsdoc')", b"  call dein#add('elzr/vim-json')", b"  call dein#add('HerringtonDarkholme/yats.vim')", b"  call dein#add('skwp/vim-html-escape')", b"  call dein#add('hail2u/vim-css3-syntax')", b"  call dein#add('ap/vim-css-color')", b"  call dein#add('tpope/vim-markdown', {'on_ft': 'markdown'})", b"  call dein#add('dhruvasagar/vim-table-mode')", b"  call dein#add('nelstrom/vim-markdown-folding', {'on_ft': 'markdown'})", b"  call dein#add('rhysd/vim-grammarous')", b"  call dein#add('tmhedberg/SimpylFold', {'on_ft': 'python'})", b"  call dein#add('tmux-plugins/vim-tmux')", b"  call dein#add('itmammoth/doorboy.vim')", b"  call dein#add('valloric/MatchTagAlways', {'on_ft': 'html'})", b"  call dein#add('tpope/vim-fugitive')", b"  call dein#add('tpope/vim-rhubarb')", b"  call dein#add('chemzqm/vim-easygit')", b"  call dein#add('jreybert/vimagit', {'on_cmd': ['Magit', 'MagitOnly']})", b"  call dein#add('sgeb/vim-diff-fold')", b"  call dein#add('airblade/vim-gitgutter')", b"  call dein#add('junegunn/gv.vim')", b"  call dein#add('lambdalisue/gina.vim')", b"  call dein#add('scrooloose/nerdtree')", b"  call dein#add('Xuyuanp/nerdtree-git-plugin')", b"  call dein#add('tpope/vim-repeat')", b"  call dein#add('tpope/vim-unimpaired')", b"  call dein#add('neomake/neomake', {'on_cmd': 'Neomake'})", b"  call dein#add('digitaltoad/vim-pug')", b"  call dein#add('editorconfig/editorconfig-vim')", b"  call dein#add('rhysd/vim-color-spring-night')", b"  call dein#add('AndrewRadev/switch.vim')", b"  call dein#add('christoomey/vim-tmux-navigator')", b"  call dein#add('vim-airline/vim-airline')", b"  call dein#add('tpope/vim-surround')", b"  call dein#add('tomtom/tcomment_vim')", b"  call dein#add('mattn/emmet-vim')", b"  call dein#add('sbdchd/neoformat')", b'  " theme', b"  call dein#add('bluz71/vim-moonfly-colors')", b"  call dein#add('smancill/darkglass')", b"  call dein#add('roosta/vim-srcery')", b"  call dein#add('sonjapeterson/1989.vim')", b"  call dein#add('vim-scripts/turbo.vim')", b"  call dein#add('stulzer/heroku-colorscheme')", b"  call dein#add('vim-scripts/proton')", b"  call dein#add('MaxSt/FlatColor')", b"  call dein#add('vim-scripts/pink')", b"  call dein#add('vim-scripts/synic.vim')", b"  call dein#add('vim-airline/vim-airline-themes')", b'" deoplete stuff', b"  call dein#add('Shougo/deoplete.nvim')", b"  call dein#add('Shougo/deol.nvim')", b'', b"  call dein#add('Shougo/denite.nvim')", b"  call dein#add('jremmen/vim-ripgrep')", b'  " call dein#add(\'ctrlpvim/ctrlp.vim\')', b'', b"  call dein#add('Shougo/neomru.vim')", b"  call dein#add('Shougo/context_filetype.vim')", b"  call dein#add('chemzqm/denite-git')", b"  call dein#add('ternjs/tern_for_vim', {'build': 'npm install'})", b"  call dein#add('carlitux/deoplete-ternjs')", b"  call dein#add('artur-shaik/vim-javacomplete2')", b"  call dein#add('Shougo/neco-vim')", b"  call dein#add('Shougo/neoinclude.vim')", b'  "  dein#add(\'ujihisa/neco-look\')', b"  call dein#add('davidhalter/jedi-vim', {'on_ft': 'python'})", b"  call dein#add('zchee/deoplete-jedi')", b'  " call dein#add(\'zchee/nvim-go\', {\'build\': \'gb build\', \'on_ft\': \'go\'})', b"  call dein#add('zchee/deoplete-go', {'build': 'make'})", b'  " call dein#add(\'nsf/gocode\')', b"  call dein#add('junegunn/limelight.vim')", b"  call dein#add('Konfekt/FastFold')", b"  call dein#add('Shougo/neosnippet.vim')", b"  call dein#add('Shougo/neosnippet-snippets')", b"  call dein#add('Shougo/echodoc.vim')", b"  call dein#add('honza/vim-snippets')", b"  call dein#add('mhinz/vim-sayonara')", b"  call dein#add('mattn/webapi-vim')", b"  call dein#add('mattn/gist-vim')", b"  call dein#add('pocari/vim-denite-gists')", b"  call dein#add('vim-scripts/SyntaxRange')", b"  call dein#add('terryma/vim-multiple-cursors')", b"  call dein#add('MartinLafreniere/vim-PairTools')", b"  call dein#add('Shougo/vimfiler.vim')", b"  call dein#add('Shougo/unite.vim')", b"  call dein#add('junegunn/gv.vim')", b"  call dein#local('~/GitHub', {},['vim-folds'])", b"  call dein#local('~/GitHub', {},['oceanic-next'])", b'  " call dein#local(\'~/GitHub\', {},[\'operator-next\'])', b"  call dein#local('~/GitHub', {},['nvim-typescript'])", b"  call dein#add('chemzqm/denite-git')", b"  call dein#add('sjl/vitality.vim')", b"  call dein#add('ryanoasis/vim-devicons')", b"  call dein#add('tiagofumo/vim-nerdtree-syntax-highlight')", b'  " call dein#add(\'suan/vim-instant-markdown\')', b"  call dein#add('JamshedVesuna/vim-markdown-preview')", b"  call dein#add('vingorius/pug-beautifier')", b'  call dein#add("flowtype/vim-flow")', b'  if dein#check_install()', b'    call dein#install()', b'    let pluginsExist=1', b'  endif', b'', b'  call dein#end()', b'  filetype plugin indent on', b'  filetype plugin on', b'" }}}', b'', b'" System Settings  ----------------------------------------------------------{{{', b'', b'  " source ~/.local.vim', b'" Neovim Settings', b'  set termguicolors', b'  let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1', b'  set clipboard+=unnamedplus', b'  set pastetoggle=<f6>', b'  set nopaste', b'  autocmd BufWritePre * %s/\\s\\+$//e', b'  set noshowmode', b'  set noswapfile', b'  filetype on', b'  set  number', b'  set relativenumber', b'  set numberwidth=1', b'  set tabstop=4 shiftwidth=4 expandtab', b'  set conceallevel=0', b'  set virtualedit=', b'  set wildmenu', b'  set laststatus=2', b'  set wrap linebreak nolist', b'  set wildmode=full', b'  set autoread', b'  set smartcase', b'  set ignorecase', b'" leader is ,', b"  let mapleader = ';'", b'  " set undofile', b'  " set undodir="$HOME/.VIM_UNDO_FILES"', b'', b'  try', b'      set undodir=$HOME/undodir', b'      set undofile', b'  catch', b'  endtry', b'', b'" Remember cursor position between vim sessions', b' autocmd BufReadPost *', b'             \\ if line("\'\\"") > 0 && line ("\'\\"") <= line("$") |', b'             \\   exe "normal! g\'\\"" |', b'             \\ endif', b'             " center buffer around cursor when opening files', b'  autocmd BufRead * normal zz', b'  " set updatetime=500', b'  set complete=.,w,b,u,t,k', b'  autocmd InsertEnter * let save_cwd = getcwd() | set autochdir', b"  autocmd InsertLeave * set noautochdir | execute 'cd' fnameescape(save_cwd)", b'  set formatoptions+=t', b'  set inccommand=nosplit', b'  set shortmess=atIc', b'  set isfname-==', b'  set nospell', b'', b'  set breakindent', b'" }}}', b'', b'" System mappings  ----------------------------------------------------------{{{', b'', b'', b'"Refresh vim', b'  nnoremap <f5> :so $MYVIMRC<CR>', b'', b'" No need for ex mode', b'  nnoremap Q <nop>', b'  vnoremap // y/<C-R>"<CR>', b'', b'', b'" Use enter to make new lines', b'  nmap <CR> o<Esc>', b'  nmap <S-CR> O<Esc>', b'', b'" Use <A-o> <Shift><A-o> in order to create new line above  or below in normal mode', b'  nmap \xc3\xb8 o<esc>', b'  nmap \xc3\x98 O<esc>', b'', b'" Use <A-o> <Shift><A-o> in order to create new line above  or below in normal mode', b'  inoremap \xc3\xb8 <cr>', b'  inoremap \xc3\x98 <esc>O', b'', b'" Pressing ,ss will toggle and untoggle spell checking', b'  map <leader>ss :setlocal spell!<cr>', b'', b'  " Save via leader+w', b'  nnoremap <leader>w :w<cr>', b'', b'" press i twice for normal mode', b'  inoremap ii <esc>', b'', b'" Select all', b'  nnoremap \xc3\xa5 ggVG', b'', b'" Navigate between display lines', b'  noremap  <silent> <Up>   gk', b'  noremap  <silent> <Down> gj', b'  noremap  <silent> k gk', b'  noremap  <silent> j gj', b'  noremap  <silent> <Home> g<Home>', b'  noremap  <silent> <End>  g<End>', b'  inoremap <silent> <Home> <C-o>g<Home>', b'  inoremap <silent> <End>  <C-o>g<End>', b'  inoremap \xe2\x88\x86 <Down>', b'  inoremap \xcb\x9a <Up>', b'  inoremap \xc2\xac <Right>', b'  inoremap \xcb\x99 <Left>', b'', b'" Add semicolon to end of line', b'  nnoremap \xe2\x80\xa6 A;<esc>', b'', b'" Toggle Neomake globally', b'  nnoremap <leader>nt :NeomakeToggle<cr>', b'', b'" Vertical Split', b'  nnoremap <leader>sp :sp<CR>', b'" Horizontal Split', b'  nnoremap <leader>vs :vs<CR>', b'" Close All Window Except Current', b'  nnoremap <leader>on :on<CR>', b'" Close Current Window', b'  nnoremap <leader>clo :clo<CR>', b'" Close current buffer', b'  nnoremap <leader>bd :bd<CR>', b'" Update Buffer', b'  noremap <leader>ct :checktime<CR>', b'', b'" copy current files path to clipboard', b'  nmap cp :let @+= expand("%") <cr>', b'" Neovim terminal mapping', b'" terminal \'normal mode\'', b'  tmap <esc> <c-\\><c-n><esc><cr>', b'" exit insert, dd line, enter insert', b'  inoremap <c-d> <esc>ddi', b'  noremap H ^', b'  noremap L g_', b'  noremap J 5j', b'  noremap K 5k', b'', b'', b'', b'" this is the best, let me tell you why', b'" how annoying is that everytime you want to do something in vim', b'" you have to do shift-; to get :, can\'t we just do ;?', b'" Plus what does ; do anyways??', b'" if you do have a plugin that needs ;, you can just swap the mapping', b'" nnoremap : ;', b'" " give it a try and you will like it', b'"   nnoremap ; :', b'', b'" Toggle file type completion', b'  inoremap <c-f> <c-x><c-f>', b'', b'" Copy to osx clipboard', b'  vnoremap <C-c> "*y<CR>', b'  " vnoremap y "*y<CR>', b'  " nnoremap Y "*Y<CR>', b'  " vnoremap y myy`y', b' vnoremap Y myY`y', b"  let g:multi_cursor_next_key='<C-n>'", b"  let g:multi_cursor_prev_key='<C-p>'", b"  let g:multi_cursor_skip_key='<C-x>'", b'" let g:multi_cursor_quit_key=\'<Esc>\'', b'', b'  " Commenting', b'  nnoremap <leader>lc :TComment<cr>', b'  vnoremap <leader>lc :TComment<cr>', b'  vnoremap <leader>mc :TCommentBlock<cr>', b'  vnoremap <leader>lbc :TCommentInline<cr>', b'', b'', b'" Align blocks of text and keep them selected', b'  vmap < <gv', b'  vmap > >gv', b'  nnoremap <leader>d "_d', b'  vnoremap <leader>d "_d', b'  nnoremap <silent> <esc> :noh<cr>', b'', b'  nnoremap <leader>e :call <SID>SynStack()<CR>', b'  function! <SID>SynStack()', b'    if !exists("*synstack")', b'      return', b'    endif', b'    echo map(synstack(line(\'.\'), col(\'.\')), \'synIDattr(v:val, "name")\')', b'  endfunc', b'', b'  function! s:PlaceholderImgTag(size)', b"    let url = 'http://dummyimage.com/' . a:size . '/000000/555555'", b"    let [width,height] = split(a:size, 'x')", b'    execute "normal a<img src=\\"".url."\\" width=\\"".width."\\" height=\\"".height."\\" />"', b'    endfunction', b'  command! -nargs=1 PlaceholderImgTag call s:PlaceholderImgTag(<f-args>)', b'', b'"}}}"', b'', b'" , Commands, etc  ----------------------------------------------------{{{', b'  syntax on', b'  colorscheme spring-night', b'  " let g:OceanicNext_italic = 1', b'', b'  "Colorscheme', b'  set background=dark', b'', b'  " Remove \'|\' character fom split window border (note blank space after', b'  " back slash)', b'  set fillchars+=vert:\\', b'', b'  " Change split window bar color', b'  hi VertSplit ctermfg=NONE ctermbg=NONE cterm=NONE', b'  hi VertSplit guifg=NONE guibg=NONE gui=NONE', b'', b'', b'  " Change color of Search Highlight', b'  hi Search cterm=NONE ctermfg=NONE ctermbg=red', b'  hi Search gui=NONE guifg=red guibg=lightgreen', b'  hi CursorLineNr cterm=NONE ctermfg=yellow ctermbg=red', b'  hi CursorLineNr gui=NONE guifg=yellow guibg=red', b'', b'  " Neomake sign colors', b'  hi NeomakeErrorSign guifg=red', b'  hi NeomakeWarningSign guifg=yellow', b'  hi NeomakeErrorSign guibg=bg', b'  hi NeomakeWarningSign guibg=bg', b'  hi NeomakeErrorSign ctermfg=red', b'  hi NeomakeWarningSign ctermfg=yellow', b'', b'', b'"}}}', b'', b'" MarkDown ------------------------------------------------------------------{{{', b'', b'  noremap <leader>TM :TableModeToggle<CR>', b'  let g:table_mode_corner="|"', b'', b'  let g:neomake_markdown_proselint_maker = {', b"      \\ 'errorformat': '%W%f:%l:%c: %m',", b"      \\ 'postprocess': function('neomake#postprocess#GenericLengthPostprocess'),", b'      \\}', b"  let g:neomake_markdown_enabled_makers = ['alex', 'proselint']", b'', b'', b'', b'  let g:instant_markdown_autostart = 0', b'  let g:instant_markdown_slow = 1', b'  let vim_markdown_preview_github=1', b'"}}}', b'', b'" Javascript ----------------------------------------------------------------{{{', b'', b'', b'  " let g:neoformat_enabled_javascript = [\'jsbeautfy\']', b'  " let g:neomake_highlight_columns = 1', b'  " let g:neomake_open_list = 1', b"  let g:neomake_javascript_enabled_makers = ['eslint']", b'  let g:neomake_verbose = 1', b'  let g:neomake_javascript_eslint_maker = {', b"    \\ 'args': ['--no-color', '--format', 'compact'],", b"    \\ 'errorformat': '%f: line %l\\, col %c\\, %m'", b'    \\ }', b"  let g:eslint_path = system('PATH=$(npm bin):$PATH && which eslint')", b"  let g:neomake_javascript_eslint_exe=substitute(g:eslint_path, '^\\n*\\s*\\(.\\{-}\\)\\n*\\s*$', '\\1', '')", b'', b'', b'  " Mapping for jsdoc Documentation', b'   autocmd FileType javascript nnoremap <leader>dc :JsDoc<CR>', b'', b'    " To disable this, set to 0 in your ~/.vimrc, like so:', b'    let g:flow#enable = 0', b'', b'  let g:jsx_ext_required = 1', b'  let g:jsdoc_allow_input_prompt = 1', b'  let g:jsdoc_input_description = 1', b'  let g:vim_json_syntax_conceal = 0', b"  let g:tern#command = ['tern']", b"  let g:tern#arguments = ['--persistent']", b'', b'  " let g:nvim_typescript#signature_complete=1', b'  " let g:nvim_typescript#type_info_on_hold=1', b'  " let g:nvim_typescript#max_completion_detail=100', b'  "', b'  let g:neomake_typescript_tsc_maker = {', b"            \\ 'append_file': 0,", b"            \\ 'args': ['--project', getcwd() . '/tsconfig.json', '--noEmit'],", b"            \\ 'errorformat':", b"            \\   '%E%f %#(%l\\,%c): error %m,' .", b"            \\   '%E%f %#(%l\\,%c): %m,' .", b"            \\   '%Eerror %m,' .", b"            \\   '%C%\\s%\\+%m'", b'            \\}', b'', b"  let g:neomake_typescript_enabled_makers = ['tsc']", b'  map <silent> <leader>gd :TSDoc <cr>', b'  map <silent> <leader>gt :TSType <cr>', b'  map <silent> <leader>@ :Denite -buffer-name=TSDocumentSymbol TSDocumentSymbol <cr>', b'  " autocmd FileType typescript setl omnifunc=TSComplete', b'  let g:nvim_typescript#kind_symbols = {', b"      \\ 'keyword': 'keyword',", b"      \\ 'class': '\xef\x83\xa8',", b"      \\ 'interface': 'interface',", b"      \\ 'script': 'script',", b"      \\ 'module': '\xef\x86\xb2',", b"      \\ 'local class': 'local class',", b"      \\ 'type': 'type',", b"      \\ 'enum': '\xef\x87\xa0',", b"      \\ 'enum member': '\xef\x86\xb2',", b"      \\ 'alias': '\xef\x87\x8b',", b"      \\ 'type parameter': 'type param',", b"      \\ 'primitive type': 'primitive type',", b"      \\ 'var': '\xef\x84\xa1',", b"      \\ 'local var': '\xef\x84\xa1',", b"      \\ 'property': '\xef\x82\xad',", b"      \\ 'let': '\xef\x84\xa1',", b"      \\ 'const': '\xef\x84\xa1',", b"      \\ 'label': 'label',", b"      \\ 'parameter': 'param',", b"      \\ 'index': 'index',", b"      \\ 'function': '\xef\x80\x93',", b"      \\ 'local function': 'local function',", b"      \\ 'method': '\xef\x83\xa7',", b"      \\ 'getter': '\xef\x82\xad',", b"      \\ 'setter': '\xef\x82\xad',", b"      \\ 'call': 'call',", b"      \\ 'constructor': '\xef\x86\xb2',", b'      \\}', b'" }}}', b'', b'" Java ----------------------------------------------------------------------{{{', b'', b'  autocmd FileType java setlocal omnifunc=javacomplete#Complete', b'', b'"}}}', b'', b'" HTML ----------------------------------------------------------------------{{{', b'  let g:neomake_html_enabled_makers = []', b"  let g:neoformat_enabled_pug = ['pug-beautifier']", b'', b'" }}}', b'', b'" Go ------------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" CSS -----------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" Lua -----------------------------------------------------------------------{{{', b'', b'"}}}', b'', b'" Python --------------------------------------------------------------------{{{', b'', b'  " let g:python_host_prog = \'/usr/local/bin/python2\'', b"  let g:python3_host_prog = '/usr/local/bin/python3'", b"  let $NVIM_PYTHON_LOG_FILE='nvim-python.log'", b'  let g:jedi#auto_vim_configuration = 0', b'  let g:jedi#documentation_command = "<leader>k"', b'', b'', b'  " let g:neoformat_enabled_htmldjango = [\'html-beautify\']', b'', b'" }}}', b'', b'" Fold, gets it\'s own section  ----------------------------------------------{{{', b'', b'  function! MyFoldText() " {{{', b'      let line = getline(v:foldstart)', b'      let nucolwidth = &fdc + &number * &numberwidth', b'      let windowwidth = winwidth(0) - nucolwidth - 3', b'      let foldedlinecount = v:foldend - v:foldstart', b'', b'      " expand tabs into spaces', b'      " let onetab = strpart(\'          \', 0, &tabstop)', b'      " let line = substitute(line, \'\\t\', onetab, \'g\')', b'', b'      let line = strpart(line, 0, windowwidth - 2 -len(foldedlinecount))', b'      " let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - len(\'lines\')', b'      " let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - len(\'lines   \')', b'      let fillcharcount = windowwidth - len(line)', b'      " return line . \'\xe2\x80\xa6\' . repeat(" ",fillcharcount) . foldedlinecount . \' Lines\'', b'      return line . \'\xe2\x80\xa6\' . repeat(" ",fillcharcount)', b'  endfunction " }}}', b'', b'', b'  set foldtext=MyFoldText()', b'', b"  autocmd InsertEnter * if !exists('w:last_fdm') | let w:last_fdm=&foldmethod | setlocal foldmethod=manual | endif", b"  autocmd InsertLeave,WinLeave * if exists('w:last_fdm') | let &l:foldmethod=w:last_fdm | unlet w:last_fdm | endif", b'', b'  autocmd FileType vim setlocal fdc=1', b'  set foldlevel=99', b'', b'  " Space to toggle folds.', b'  nnoremap <Space> za', b'  vnoremap <Space> za', b'  autocmd FileType vim setlocal foldmethod=marker', b'  autocmd FileType vim setlocal foldlevel=0', b'', b'  autocmd FileType javascript,html,css,scss,typescript setlocal foldlevel=99', b'', b'  autocmd FileType css,scss,json setlocal foldmethod=marker', b'  autocmd FileType css,scss,json setlocal foldmarker={,}', b'', b'  autocmd FileType coffee setl foldmethod=indent', b'  let g:xml_syntax_folding = 1', b'  autocmd FileType xml setl foldmethod=syntax', b'', b'  autocmd FileType html setl foldmethod=expr', b'  autocmd FileType html setl foldexpr=HTMLFolds()', b'', b'  autocmd FileType javascript,typescript,json setl foldmethod=syntax', b'', b'" }}}', b'', b'" Git -----------------------------------------------------------------------{{{', b'', b'  let g:gitgutter_sign_column_always = 1', b'', b'" }}}', b'', b'" NERDTree ------------------------------------------------------------------{{{', b'', b'  let g:vimfiler_ignore_pattern = ""', b'  " map <silent> - :VimFiler<CR>', b"\tlet g:vimfiler_tree_leaf_icon = ''", b"\tlet g:vimfiler_tree_opened_icon = '\xef\x81\xb8'", b"\tlet g:vimfiler_tree_closed_icon = '\xef\x81\x94'", b"\tlet g:vimfiler_file_icon = ''", b"\tlet g:vimfiler_marked_file_icon = '*'", b'  let g:vimfiler_expand_jump_to_first_child = 0', b'  " let g:vimfiler_as_default_explorer = 1', b"  call unite#custom#profile('default', 'context', {", b"              \\'direction': 'botright',", b'              \\ })', b"  call vimfiler#custom#profile('default', 'context', {", b"              \\ 'explorer' : 1,", b"              \\ 'winwidth' : 35,", b"              \\ 'winminwidth' : 35,", b"              \\ 'toggle' : 1,", b"              \\ 'auto_expand': 0,", b"              \\ 'parent': 1,", b"              \\ 'explorer_columns': 'devicons:git',", b"              \\ 'status' : 0,", b"              \\ 'safe' : 0,", b"              \\ 'split' : 1,", b"              \\ 'hidden': 1,", b"              \\ 'no_quit' : 1,", b"              \\ 'force_hide' : 0,", b'              \\ })', b'  augroup vfinit', b'  autocmd FileType vimfiler call s:vimfilerinit()', b'  augroup END', b'  function! s:vimfilerinit()', b'      set nonumber', b'      set norelativenumber', b'      nmap <silent><buffer><expr> <CR> vimfiler#smart_cursor_map(', b'            \\ "\\<Plug>(vimfiler_expand_tree)",', b'            \\ "\\<Plug>(vimfiler_edit_file)"', b'            \\)', b'      nmap <silent> m :call NerdUnite()<cr>', b'      nmap <silent> r <Plug>(vimfiler_redraw_screen)', b'  endf', b'  " let g:vimfiler_ignore_pattern = \'^\\%(\\.git\\|\\.DS_Store\\)$\'', b'  let g:webdevicons_enable_vimfiler = 0', b'  let g:vimfiler_no_default_key_mappings=1', b'  function! NerdUnite() abort "{{{', b'    let marked_files =  vimfiler#get_file(b:vimfiler)', b"    call unite#start(['nerd'], {'file': marked_files})", b'\tendfunction "}}}', b'', b'  map <silent> - :NERDTreeToggle<CR>', b'  augroup ntinit', b'  autocmd FileType nerdtree call s:nerdtreeinit()', b'  augroup END', b'  function! s:nerdtreeinit()', b'      nunmap <buffer> K', b'      nunmap <buffer> J', b'  endf', b'  let NERDTreeShowHidden=1', b'  let NERDTreeHijackNetrw=0', b'  let g:WebDevIconsUnicodeDecorateFolderNodes = 1', b'  let g:NERDTreeWinSize=30', b"  let NERDTreeWinPos = 'right'", b'  let g:NERDTreeAutoDeleteBuffer=1', b"  let g:WebDevIconsOS = 'Darwin'", b'  let NERDTreeMinimalUI=1', b'  let NERDTreeCascadeSingleChildDir=1', b"  let g:NERDTreeHeader = 'hello'", b'', b'', b'" let g:webdevicons_conceal_nerdtree_brackets = 0', b'  " let g:WebDevIconsNerdTreeAfterGlyphPadding = \'\'', b'  " \xef\x90\x81', b'  let g:NERDTreeShowIgnoredStatus = 0', b'  " let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = 1', b'  " let g:NERDTreeDirArrows = 1', b"  let g:NERDTreeDirArrowExpandable = '\xef\x81\x94'", b"  let g:NERDTreeDirArrowCollapsible = '\xef\x81\xb8'", b"  let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = '\xef\x90\x93'", b'"}}}', b'', b'" Nvim terminal -------------------------------------------------------------{{{', b'', b"  au BufEnter * if &buftype == 'terminal' | :startinsert | endif", b'  autocmd BufEnter term://* startinsert', b'  autocmd TermOpen * set bufhidden=hide', b'', b'" }}}', b'', b'" Vim-Devicons -------------------------------------------------------------0{{{', b'', b'  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {} " needed', b"  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['js'] = '\xee\x9e\x81'", b"  let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['vim'] = '\xee\x98\xab'", b'', b'" }}}', b'', b'" Code formatting -----------------------------------------------------------{{{', b'', b'" ,f to format code, requires formatters: read the docs', b'  noremap <silent> <leader>f :Neoformat<CR>', b'', b'" }}}', b'', b'" Snipppets -----------------------------------------------------------------{{{', b'', b'" Enable snipMate compatibility feature.', b'  let g:neosnippet#enable_snipmate_compatibility = 1', b'  let g:neosnippet#expand_word_boundary = 1', b'  imap <C-x> <Plug>(neosnippet_expand_or_jump)', b'  smap <C-x> <Plug>(neosnippet_expand_or_jump)', b'  xmap <C-x> <Plug>(neosnippet_expand_target)', b'', b'" SuperTab like snippets behavior.', b'  imap <expr><TAB> neosnippet#expandable_or_jumpable() ?', b'  \\ "\\<Plug>(neosnippet_expand_or_jump)"', b'  \\: pumvisible() ? "\\<C-n>" : "\\<TAB>"', b'  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?', b'  \\ "\\<Plug>(neosnippet_expand_or_jump)"', b'  \\: "\\<TAB>"', b'', b'"}}}', b'', b'" Deoplete ------------------------------------------------------------------{{{', b'', b'" enable deoplete', b'  let g:deoplete#enable_at_startup = 1', b'  let g:echodoc_enable_at_startup=1', b'  set splitbelow', b'  set splitright', b'  set completeopt+=noselect', b'  set completeopt-=preview', b'  autocmd CompleteDone * pclose', b'', b'  function! Multiple_cursors_before()', b'    let b:deoplete_disable_auto_complete=2', b'  endfunction', b'  function! Multiple_cursors_after()', b'    let b:deoplete_disable_auto_complete=0', b'  endfunction', b'  let g:deoplete#file#enable_buffer_path=1', b'', b"  call deoplete#custom#set('buffer', 'mark', '\xe2\x84\xac')", b"  call deoplete#custom#set('ternjs', 'mark', '\xee\x98\x8c')", b"  call deoplete#custom#set('omni', 'mark', '\xe2\x8c\xbe')", b"  call deoplete#custom#set('file', 'mark', 'file')", b"  call deoplete#custom#set('jedi', 'mark', '\xee\x98\x86')", b"  call deoplete#custom#set('typescript', 'mark', '\xee\x98\xa8')", b"  call deoplete#custom#set('neosnippet', 'mark', '\xef\x80\xbc')", b'', b"  call deoplete#custom#set('typescript',  'rank', 630)", b'  " let g:deoplete#omni_patterns = {}', b'  " let g:deoplete#omni_patterns.html = \'\'', b'  function! Preview_func()', b'    if &pvw', b'      setlocal nonumber norelativenumber', b'     endif', b'  endfunction', b'  autocmd WinEnter * call Preview_func()', b'  let g:deoplete#ignore_sources = {}', b"  let g:deoplete#ignore_sources._ = ['around']", b'', b'  " let g:deoplete#enable_debug = 1', b'  " call deoplete#enable_logging(\'DEBUG\', \'deoplete.log\')', b'  " call deoplete#custom#set(\'typescript\', \'debug_enabled\', 1)', b'"}}}', b'', b'" Emmet customization -------------------------------------------------------{{{', b'', b'', b'"  " 1. Expand abbreviation *emmet-expand-abbr', b'"   nnoremap <leader>em, <C-y>,', b'"', b'" " 2. Expand abbreviation *emmet-expand-word* *<C-y>;*', b'"   nnoremap <leader>emt <C-y>;', b'"', b'" " 3. Update tag *emmet-update-tag* *<C-y>u*', b'"   nnoremap <leader>emu <c-y>u', b'"', b'" " 4. Wrap with abbreviation *emmet-wrap-with-abbreviation* *v_<C-y>,*', b'"   vnoremap <leader>em, v_<C-y>,', b'', b'', b'" Remapping <C-y>, just doesn\'t cut it.', b'  function! s:expand_html_tab()', b'" try to determine if we\'re within quotes or tags.', b'" if so, assume we\'re in an emmet fill area.', b"   let line = getline('.')", b"   if col('.') < len(line)", b'     let line = matchstr(line, \'[">][^<"]*\\%\'.col(\'.\').\'c[^>"]*[<"]\')', b'     if len(line) >= 2', b'        return "\\<C-n>"', b'     endif', b'   endif', b'" expand anything emmet thinks is expandable.', b'  if emmet#isExpandable()', b'    return emmet#expandAbbrIntelligent("\\<tab>")', b'    " return "\\<C-y>,"', b'  endif', b'" return a regular tab character', b'  return "\\<tab>"', b'  endfunction', b'  " let g:user_emmet_expandabbr_key=\'<Tab>\'', b'  " imap <expr> <tab> emmet#expandAbbrIntelligent("\\<tab>")', b'', b'  autocmd FileType html,css,scss imap <silent><buffer><expr><tab> <sid>expand_html_tab()', b"  let g:user_emmet_mode='a'", b'  let g:user_emmet_complete_tag = 0', b'  let g:user_emmet_install_global = 0', b'  autocmd FileType html,css,scss EmmetInstall', b'"}}}', b'', b'" Denite --------------------------------------------------------------------{{{', b'', b'  let g:webdevicons_enable_denite = 0', b'  let s:menus = {}', b'', b"  call denite#custom#option('_', {", b"        \\ 'prompt': '\xe2\x9d\xaf',", b"        \\ 'winheight': 10,", b"        \\ 'reversed': 1,", b"        \\ 'highlight_matched_char': 'Underlined',", b"        \\ 'highlight_mode_normal': 'CursorLine',", b"        \\ 'updatetime': 1,", b"        \\ 'auto_resize': 1,", b'        \\})', b"  call denite#custom#option('TSDocumentSymbol', {", b"        \\ 'prompt': ' @' ,", b"        \\ 'reversed': 0,", b'        \\})', b"  call denite#custom#var('file_rec', 'command',", b"    \\ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])", b"  call denite#custom#source('file_rec', 'vars', {", b"        \\ 'command': [", b"        \\ 'ag', '--follow','--nogroup','--hidden', '--column', '-g', '', '--ignore', '.git', '--ignore', '*.png'", b'        \\] })', b'', b"  call denite#custom#var('grep', 'command', ['ag'])", b"\tcall denite#custom#var('grep', 'default_opts',", b"\t\t\t\\ ['-i', '--vimgrep'])", b"\tcall denite#custom#var('grep', 'recursive_opts', [])", b"\tcall denite#custom#var('grep', 'pattern_opt', [])", b"\tcall denite#custom#var('grep', 'separator', ['--'])", b"\tcall denite#custom#var('grep', 'final_opts', [])", b'', b'', b'  " nnoremap <silent> <c-p> :Denite file_rec<CR>', b'  nnoremap <silent> <leader>j :Denite file_rec<CR>', b'  nnoremap <silent> <leader>h :Denite  help<CR>', b'  nnoremap <silent> <leader>c :Denite colorscheme<CR>', b'  nnoremap <silent> <leader>b :Denite buffer<CR>', b'  nnoremap <silent> <leader>a :Denite grep:::!<CR>', b'  nnoremap <silent> <leader>u :call dein#update()<CR>', b'  nnoremap <silent> <Leader>i :Denite menu:ionic <CR>', b"  call denite#custom#map('insert','<C-n>','<denite:move_to_next_line>','noremap')", b"\tcall denite#custom#map('insert','<C-N>','<denite:move_to_previous_line>','noremap')", b"  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',", b"    \\ [ '.git/', '.ropeproject/', '__pycache__/',", b"    \\   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])", b"  call denite#custom#var('menu', 'menus', s:menus)", b'', b'"}}}', b'', b'" Git from denite...ERMERGERD -----------------------------------------------{{{', b'  let s:menus.git = {', b"    \\ 'description' : 'Fugitive interface',", b'    \\}', b'  let s:menus.git.command_candidates = [', b"    \\[' git status', 'Gstatus'],", b"    \\[' git diff', 'Gvdiff'],", b"    \\[' git commit', 'Gcommit'],", b"    \\[' git stage/add', 'Gwrite'],", b"    \\[' git checkout', 'Gread'],", b"    \\[' git rm', 'Gremove'],", b"    \\[' git cd', 'Gcd'],", b'    \\[\' git push\', \'exe "Git! push " input("remote/branch: ")\'],', b'    \\[\' git pull\', \'exe "Git! pull " input("remote/branch: ")\'],', b'    \\[\' git pull rebase\', \'exe "Git! pull --rebase " input("branch: ")\'],', b'    \\[\' git checkout branch\', \'exe "Git! checkout " input("branch: ")\'],', b"    \\[' git fetch', 'Gfetch'],", b"    \\[' git merge', 'Gmerge'],", b"    \\[' git browse', 'Gbrowse'],", b"    \\[' git head', 'Gedit HEAD^'],", b"    \\[' git parent', 'edit %:h'],", b"    \\[' git log commit buffers', 'Glog --'],", b"    \\[' git log current file', 'Glog -- %'],", b'    \\[\' git log last n commits\', \'exe "Glog -" input("num: ")\'],', b'    \\[\' git log first n commits\', \'exe "Glog --reverse -" input("num: ")\'],', b'    \\[\' git log until date\', \'exe "Glog --until=" input("day: ")\'],', b'    \\[\' git log grep commits\',  \'exe "Glog --grep= " input("string: ")\'],', b'    \\[\' git log pickaxe\',  \'exe "Glog -S" input("string: ")\'],', b'    \\[\' git index\', \'exe "Gedit " input("branchname\\:filename: ")\'],', b'    \\[\' git mv\', \'exe "Gmove " input("destination: ")\'],', b'    \\[\' git grep\',  \'exe "Ggrep " input("string: ")\'],', b'    \\[\' git prompt\', \'exe "Git! " input("command: ")\'],', b'    \\] " Append \' --\' after log to get commit info commit buffers', b'"}}}', b'', b'" Ionic denite source -------------------------------------------------------{{{', b'', b'  function! Ionic(job) abort', b'    if a:job ==# "serve"', b'      enew!', b"      let filename = 'Ionic:\\ '. a:job", b"      call termopen('ionic '. a:job)", b"      exe 'file 'filename", b'      startinsert', b'    else', b"      let platform = input('platform: ')", b'      enew!', b"      let filename = 'Ionic:\\ '. a:job", b"      call termopen('ionic '. a:job . ' ' . platform)", b"      exe 'file 'filename", b'      startinsert', b'    endif', b'  endfunction', b'', b'  function ExitHandle()', b'    echom self', b'  endfunction', b'', b'  let s:menus.ionic = {', b"    \\ 'description' : 'some rando ionic stuff',", b'    \\}', b'  let s:menus.ionic.command_candidates = [', b'    \\[\' serve\', \'call Ionic("serve")\' ],', b'    \\[\' run device\', \'call Ionic("run")\'],', b'    \\[\' emulate device\', \'call Ionic("emulate")\'],', b'    \\]', b'"}}}', b'', b'" Navigate between vim buffers and tmux panels ------------------------------{{{', b'', b'  let g:tmux_navigator_no_mappings = 1', b'  nnoremap <silent> <C-j> :TmuxNavigateDown<cr>', b'  nnoremap <silent> <C-k> :TmuxNavigateUp<cr>', b'  nnoremap <silent> <C-l> :TmuxNavigateRight<cr>', b'  nnoremap <silent> <C-h> :TmuxNavigateLeft<CR>', b'  nnoremap <silent> <C-;> :TmuxNavigatePrevious<cr>', b'  tmap <C-j> <C-\\><C-n>:TmuxNavigateDown<cr>', b'  tmap <C-k> <C-\\><C-n>:TmuxNavigateUp<cr>', b'  tmap <C-l> <C-\\><C-n>:TmuxNavigateRight<cr>', b'  tmap <C-h> <C-\\><C-n>:TmuxNavigateLeft<CR>', b'  tmap <C-;> <C-\\><C-n>:TmuxNavigatePrevious<cr>', b'', b'  " Cycle between vim buffer', b'  map <silent> <leader>h :bp<CR>', b'  map <silent> <leader>l :bn<CR>', b'', b'', b'"}}}', b'', b'" vim-airline ---------------------------------------------------------------{{{', b'', b"  if !exists('g:airline_symbols')", b'    let g:airline_symbols = {}', b'  endif', b'  let g:airline#extensions#tabline#enabled = 1', b'  let g:airline#extensions#mike#enabled = 0', b'  set hidden', b"  let g:airline#extensions#tabline#fnamemod = ':t'", b'  let g:airline#extensions#tabline#buffer_idx_mode = 1', b'  let g:airline_powerline_fonts = 1', b"  let g:airline#extensions#neomake#error_symbol='\xe2\x80\xa2 '", b"  let g:airline#extensions#neomake#warning_symbol='\xe2\x80\xa2  '", b"  let g:airline_symbols.branch = '\xef\x90\x98'", b"  let g:airline_theme='solarized'", b'  cnoreabbrev <silent> <expr> x getcmdtype() == ":" && getcmdline() == \'x\' ? \'Sayonara\' : \'x\'', b'  tmap <leader>x <c-\\><c-n>:bp! <BAR> bd! #<CR>', b'  nmap <leader>t :term<cr>', b'  nmap <leader>, :bnext<CR>', b'  tmap <leader>, <C-\\><C-n>:bnext<cr>', b'  nmap <leader>. :bprevious<CR>', b'  tmap <leader>. <C-\\><C-n>:bprevious<CR>', b'  tmap <leader>1  <C-\\><C-n><Plug>AirlineSelectTab1', b'  tmap <leader>2  <C-\\><C-n><Plug>AirlineSelectTab2', b'  tmap <leader>3  <C-\\><C-n><Plug>AirlineSelectTab3', b'  tmap <leader>4  <C-\\><C-n><Plug>AirlineSelectTab4', b'  tmap <leader>5  <C-\\><C-n><Plug>AirlineSelectTab5', b'  tmap <leader>6  <C-\\><C-n><Plug>AirlineSelectTab6', b'  tmap <leader>7  <C-\\><C-n><Plug>AirlineSelectTab7', b'  tmap <leader>8  <C-\\><C-n><Plug>AirlineSelectTab8', b'  tmap <leader>9  <C-\\><C-n><Plug>AirlineSelectTab9', b'  nmap <leader>1 <Plug>AirlineSelectTab1', b'  nmap <leader>2 <Plug>AirlineSelectTab2', b'  nmap <leader>3 <Plug>AirlineSelectTab3', b'  nmap <leader>4 <Plug>AirlineSelectTab4', b'  nmap <leader>5 <Plug>AirlineSelectTab5', b'  nmap <leader>6 <Plug>AirlineSelectTab6', b'  nmap <leader>7 <Plug>AirlineSelectTab7', b'  nmap <leader>8 <Plug>AirlineSelectTab8', b'  nmap <leader>9 <Plug>AirlineSelectTab9', b'  let g:airline#extensions#tabline#buffer_idx_format = {', b"        \\ '0': '0 ',", b"        \\ '1': '1 ',", b"        \\ '2': '2 ',", b"        \\ '3': '3 ',", b"        \\ '4': '4 ',", b"        \\ '5': '5 ',", b"        \\ '6': '6 ',", b"        \\ '7': '7 ',", b"        \\ '8': '8 ',", b"        \\ '9': '9 ',", b'        \\}', b'', b'"}}}', b'', b'" Linting -------------------------------------------------------------------{{{', b'', b'  autocmd! BufWinEnter * NeomakeDisable', b'  autocmd! BufWritePost * Neomake', b"  let g:neomake_warning_sign = {'text': '!!'}", b"  let g:neomake_error_sign = {'text': 'X'}", b'', b'"}}}']
2017-08-08 04:25:32,913 [DEBUG @ session.py:response_cb:149] 64726 - response is available for greenlet <greenlet.greenlet object at 0x101b2adf0>, switching back
2017-08-08 04:25:32,923 [DEBUG @ session.py:handler:208] 64726 - greenlet <greenlet.greenlet object at 0x101b2adf0> finished executing
2017-08-08 04:25:32,924 [DEBUG @ session.py:handler:213] 64726 - greenlet <greenlet.greenlet object at 0x101b2adf0> is now dying...
2017-08-08 04:25:32,924 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:32,924 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:35,290 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:35,290 [DEBUG @ msgpack_stream.py:_on_data:56] 64726 - received message: [2, b'deoplete_on_event', [{b'max_abbr_width': 51, b'bufsize': 32677, b'same_filetypes': [], b'input': b'', b'changedtick': -1, b'omni__omnifunc': b'', b'filetype': b'vim', b'dict__dictionary': b'', b'delay': 50, b'bufvars': {}, b'camelcase': 0, b'bufpath': b'/Users/AMC/.vim/init.vim', b'encoding': b'utf-8', b'keyword_patterns': b'[a-zA-Z_][a-zA-Z@0-9_\xc3\x80-\xc3\xbf#]*', b'position': [0, 329, 1, 0], b'sources': [], b'custom': {b'_': {}, b'ternjs': {b'mark': b'\xee\x98\x8c'}, b'neosnippet': {b'mark': b'\xef\x80\xbc'}, b'jedi': {b'mark': b'\xee\x98\x86'}, b'file': {b'mark': b'file'}, b'omni': {b'mark': b'\xe2\x8c\xbe'}, b'buffer': {b'mark': b'\xe2\x84\xac'}, b'typescript': {b'rank': 630, b'mark': b'\xee\x98\xa8'}}, b'bufnr': 1, b'complete_str': b'', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'event': b'VimLeavePre', b'max_menu_width': 51, b'next_input': b'" , Commands, etc  ----------------------------------------------------{{{', b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'vars': {b'deoplete#keyword_patterns': {}, b'deoplete#_context': {}, b'deoplete#enable_ignore_case': 1, b'deoplete#max_menu_width': 40, b'deoplete#sources#go#cgo': 0, b'deoplete#auto_refresh_delay': 500, b'deoplete#sources#go#gocode_binary': b'', b'deoplete#sources#ternjs#tern_bin': b'tern', b'deoplete#enable_refresh_always': 0, b'deoplete#omni_patterns': {}, b'deoplete#_logging': {}, b'deoplete#enable_camel_case': 0, b'deoplete#skip_chars': [], b'deoplete#enable_profile': 0, b'deoplete#_keyword_patterns': {b'_': b'[a-zA-Z_]\\k*'}, b'deoplete#auto_complete_start_length': 2, b'deoplete#sources#go#align_class': 0, b'deoplete#auto_complete_delay': 50, b'deoplete#enable_at_startup': 1, b'deoplete#sources#go#sort_class': [], b'deoplete#complete_method': b'complete', b'deoplete#max_abbr_width': 80, b'deoplete#omni#input_patterns': {}, b'deoplete#sources#go#on_event': 0, b'deoplete#delimiters': [b'/'], b'deoplete#_omni_patterns': {b'html': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xhtml': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xml': [b'<', b'<[^>]*\\s[[:alnum:]-]*']}, b'deoplete#omni#functions': {}, b'deoplete#sources#go#use_cache': 0, b'deoplete#_rank': {}, b'deoplete#sources#go#pointer': 0, b'deoplete#max_list': 100, b'deoplete#sources': {}, b'deoplete#sources#go#json_directory': b'', b'deoplete#enable_smart_case': 1, b'deoplete#disable_auto_complete': 0, b'deoplete#member#prefix_patterns': {}, b'deoplete#file#enable_buffer_path': 1, b'deoplete#ignore_sources': {b'_': [b'around']}, b'deoplete#sources#go#package_dot': 0, b'deoplete#_channel_id': 1}, b'filetypes': [b'vim'], b'ignorecase': 1, b'bufname': b'/Users/AMC/.vim/init.vim', b'smartcase': 1}]]
2017-08-08 04:25:35,290 [DEBUG @ async_session.py:_on_notification:102] 64726 - received notification: b'deoplete_on_event', [{b'max_abbr_width': 51, b'bufsize': 32677, b'same_filetypes': [], b'input': b'', b'changedtick': -1, b'omni__omnifunc': b'', b'filetype': b'vim', b'dict__dictionary': b'', b'delay': 50, b'bufvars': {}, b'camelcase': 0, b'bufpath': b'/Users/AMC/.vim/init.vim', b'encoding': b'utf-8', b'keyword_patterns': b'[a-zA-Z_][a-zA-Z@0-9_\xc3\x80-\xc3\xbf#]*', b'position': [0, 329, 1, 0], b'sources': [], b'custom': {b'_': {}, b'ternjs': {b'mark': b'\xee\x98\x8c'}, b'neosnippet': {b'mark': b'\xef\x80\xbc'}, b'jedi': {b'mark': b'\xee\x98\x86'}, b'file': {b'mark': b'file'}, b'omni': {b'mark': b'\xe2\x8c\xbe'}, b'buffer': {b'mark': b'\xe2\x84\xac'}, b'typescript': {b'rank': 630, b'mark': b'\xee\x98\xa8'}}, b'bufnr': 1, b'complete_str': b'', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'event': b'VimLeavePre', b'max_menu_width': 51, b'next_input': b'" , Commands, etc  ----------------------------------------------------{{{', b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'vars': {b'deoplete#keyword_patterns': {}, b'deoplete#_context': {}, b'deoplete#enable_ignore_case': 1, b'deoplete#max_menu_width': 40, b'deoplete#sources#go#cgo': 0, b'deoplete#auto_refresh_delay': 500, b'deoplete#sources#go#gocode_binary': b'', b'deoplete#sources#ternjs#tern_bin': b'tern', b'deoplete#enable_refresh_always': 0, b'deoplete#omni_patterns': {}, b'deoplete#_logging': {}, b'deoplete#enable_camel_case': 0, b'deoplete#skip_chars': [], b'deoplete#enable_profile': 0, b'deoplete#_keyword_patterns': {b'_': b'[a-zA-Z_]\\k*'}, b'deoplete#auto_complete_start_length': 2, b'deoplete#sources#go#align_class': 0, b'deoplete#auto_complete_delay': 50, b'deoplete#enable_at_startup': 1, b'deoplete#sources#go#sort_class': [], b'deoplete#complete_method': b'complete', b'deoplete#max_abbr_width': 80, b'deoplete#omni#input_patterns': {}, b'deoplete#sources#go#on_event': 0, b'deoplete#delimiters': [b'/'], b'deoplete#_omni_patterns': {b'html': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xhtml': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xml': [b'<', b'<[^>]*\\s[[:alnum:]-]*']}, b'deoplete#omni#functions': {}, b'deoplete#sources#go#use_cache': 0, b'deoplete#_rank': {}, b'deoplete#sources#go#pointer': 0, b'deoplete#max_list': 100, b'deoplete#sources': {}, b'deoplete#sources#go#json_directory': b'', b'deoplete#enable_smart_case': 1, b'deoplete#disable_auto_complete': 0, b'deoplete#member#prefix_patterns': {}, b'deoplete#file#enable_buffer_path': 1, b'deoplete#ignore_sources': {b'_': [b'around']}, b'deoplete#sources#go#package_dot': 0, b'deoplete#_channel_id': 1}, b'filetypes': [b'vim'], b'ignorecase': 1, b'bufname': b'/Users/AMC/.vim/init.vim', b'smartcase': 1}]
2017-08-08 04:25:35,290 [DEBUG @ session.py:_on_notification:216] 64726 - received rpc notification, greenlet <greenlet.greenlet object at 0x1027dd2a8> will handle it
2017-08-08 04:25:35,291 [DEBUG @ host.py:_on_notification:107] 64726 - calling notification handler for "deoplete_on_event", args: "[{b'max_abbr_width': 51, b'bufsize': 32677, b'filetype': b'vim', b'input': b'', b'changedtick': -1, b'omni__omnifunc': b'', b'same_filetypes': [], b'dict__dictionary': b'', b'encoding': b'utf-8', b'bufvars': {}, b'camelcase': 0, b'bufpath': b'/Users/AMC/.vim/init.vim', b'keyword_patterns': b'[a-zA-Z_][a-zA-Z@0-9_\xc3\x80-\xc3\xbf#]*', b'position': [0, 329, 1, 0], b'sources': [], b'custom': {b'_': {}, b'ternjs': {b'mark': b'\xee\x98\x8c'}, b'neosnippet': {b'mark': b'\xef\x80\xbc'}, b'jedi': {b'mark': b'\xee\x98\x86'}, b'file': {b'mark': b'file'}, b'omni': {b'mark': b'\xe2\x8c\xbe'}, b'typescript': {b'rank': 630, b'mark': b'\xee\x98\xa8'}, b'buffer': {b'mark': b'\xe2\x84\xac'}}, b'bufnr': 1, b'complete_str': b'', b'runtimepath': b'/Users/AMC/.config/nvim,/etc/xdg/nvim,/Users/AMC/.local/share/nvim/site,/usr/local/share/nvim/site,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim,/Users/AMC/.config/nvim/repos/github.com/zchee/deoplete-go,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim,/Users/AMC/.config/nvim/repos/github.com/neomake/neomake,/Users/AMC/.config/nvim/.cache/init.vim/.dein,/usr/share/nvim/site,/usr/local/Cellar/neovim/HEAD-a8a673c/share/nvim/runtime,/Users/AMC/.config/nvim/repos/github.com/ternjs/tern_for_vim/after,/Users/AMC/.config/nvim/.cache/init.vim/.dein/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/Users/AMC/.local/share/nvim/site/after,/etc/xdg/nvim/after,/Users/AMC/.config/nvim/after,/Users/AMC/.config/nvim/repos/github.com/Shougo/dein.vim/', b'event': b'VimLeavePre', b'max_menu_width': 51, b'next_input': b'" , Commands, etc  ----------------------------------------------------{{{', b'cwd': b'/Users/AMC/Desktop/amcorvi_app/amcorvi_site', b'vars': {b'deoplete#keyword_patterns': {}, b'deoplete#skip_chars': [], b'deoplete#_context': {}, b'deoplete#max_menu_width': 40, b'deoplete#sources#go#cgo': 0, b'deoplete#auto_refresh_delay': 500, b'deoplete#sources#go#gocode_binary': b'', b'deoplete#sources#ternjs#tern_bin': b'tern', b'deoplete#enable_refresh_always': 0, b'deoplete#enable_camel_case': 0, b'deoplete#_logging': {}, b'deoplete#enable_smart_case': 1, b'deoplete#enable_profile': 0, b'deoplete#_keyword_patterns': {b'_': b'[a-zA-Z_]\\k*'}, b'deoplete#omni#input_patterns': {}, b'deoplete#auto_complete_start_length': 2, b'deoplete#sources#go#align_class': 0, b'deoplete#auto_complete_delay': 50, b'deoplete#enable_at_startup': 1, b'deoplete#sources#go#sort_class': [], b'deoplete#complete_method': b'complete', b'deoplete#member#prefix_patterns': {}, b'deoplete#max_abbr_width': 80, b'deoplete#omni_patterns': {}, b'deoplete#sources#go#on_event': 0, b'deoplete#delimiters': [b'/'], b'deoplete#omni#functions': {}, b'deoplete#sources#go#use_cache': 0, b'deoplete#_rank': {}, b'deoplete#sources#go#pointer': 0, b'deoplete#max_list': 100, b'deoplete#sources': {}, b'deoplete#sources#go#package_dot': 0, b'deoplete#_omni_patterns': {b'html': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xhtml': [b'<', b'<[^>]*\\s[[:alnum:]-]*'], b'xml': [b'<', b'<[^>]*\\s[[:alnum:]-]*']}, b'deoplete#disable_auto_complete': 0, b'deoplete#enable_ignore_case': 1, b'deoplete#file#enable_buffer_path': 1, b'deoplete#ignore_sources': {b'_': [b'around']}, b'deoplete#sources#go#json_directory': b'', b'deoplete#_channel_id': 1}, b'filetypes': [b'vim'], b'ignorecase': 1, b'delay': 50, b'bufname': b'/Users/AMC/.vim/init.vim', b'smartcase': 1}]"
2017-08-08 04:25:35,293 [DEBUG @ msgpack_stream.py:send:33] 64726 - sent [0, 673, 'nvim_eval', ('values(neosnippet#helpers#get_completion_snippets())',)]
2017-08-08 04:25:35,293 [DEBUG @ base.py:send:113] 64726 - Sending 'b'\x94\x00\xcd\x02\xa1\xa9nvim_eval\x91\xda\x004values(neosnippet#helpers#get_completion_snippets())''
2017-08-08 04:25:35,293 [DEBUG @ session.py:_yielding_request:153] 64726 - yielding from greenlet <greenlet.greenlet object at 0x1027dd2a8> to wait for response
2017-08-08 04:25:35,293 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:35,293 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:35,348 [DEBUG @ msgpack_stream.py:_on_data:54] 64726 - waiting for message...
2017-08-08 04:25:35,349 [DEBUG @ msgpack_stream.py:_on_data:59] 64726 - unpacker needs more data...
2017-08-08 04:25:35,349 [DEBUG @ base.py:_on_error:166] 64726 - EOF
2017-08-08 04:25:35,349 [DEBUG @ base.py:stop:149] 64726 - Stopped event loop
2017-08-08 04:25:35,350 [DEBUG @ base.py:run:140] 64726 - Exited event loop
